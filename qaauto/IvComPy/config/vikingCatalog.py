vikingCatalog = {
	'tables': {
		'Account': {
			'id': 67, 
			'version': 4, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbMergeIntoChild' , 'value' : 'orders/pendingCorrection/orderInstructionData/accounts/accountAliases,orders/orderInstructionData/accounts/accountAliases,executions/executionData/accounts/accountAliases,orders/orderCorrection/diffToPrevious/accounts/accountAliases'},
			],
			'columns': {
				'accountAliases': { 'index': 0, 'type': 'table', 'tablename': 'AccountAlias', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'collection'},
				                    ],
				                  },
				'accountRole':    { 'index': 1, 'type': 'ubyte', 'enum': 'OmAccountRole', }, 
				'accountType':    { 'index': 2, 'type': 'ubyte', 'enum': 'OmAccountType', }, 
				'accountSubType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmAccountSubType', # FIELD IS OBSOLETE
				                    'meta-fields': [
					                {'field': 'obsolete' , 'value' : 'true'},
				                    ],
				                  },
				'entity':         { 'index': 4, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '9'},
				                    ],
				                  },
				'aggUnitName':    { 'index': 5, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '16'},
				                    ],
				                  },
			}, 
		}, 
		'AccountAlias': {
			'id': 39, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'accountSynonymType': { 'index': 0, 'type': 'ubyte', 'enum': 'OmAccountSynonymType', }, 
				'accountSynonym':     { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '50'},
				                        ],
				                      },
			}, 
		}, 
		'BrokerInfo': {
			'id': 711, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'brokerId':     { 'index': 0, 'type': 'string', }, 
				'brokerIdType': { 'index': 1, 'type': 'ubyte', 'enum': 'OmBrokerIdType', }, 
			}, 
		}, 
		'Charge': {
			'id': 20, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'chargeType':     { 'index': 0, 'type': 'ubyte', 'enum': 'OmChargeTypes', }, 
				'chargeUnits':    { 'index': 1, 'type': 'ubyte', 'enum': 'OmChargeUnits', }, 
				'chargeAmount':   { 'index': 2, 'type': 'double', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'real'},
				                    ],
				                  },
				'chargeCurrency': { 'index': 3, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '3'},
				                    ],
				                  },
			}, 
		}, 
		'ClearingInstructionTypeList': {
			'id': 304, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'clearingInstruction': { 'index': 0, 'type': 'ubyte', 'enum': 'OmClearingInstructionType', }, 
			}, 
		}, 
		'ClearingProduct': {
			'id': 181, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'exchangeCode':           { 'index': 0, 'type': 'string', }, 
				'clearingProductCode':    { 'index': 1, 'type': 'string', }, 
				'clearingSubProductCode': { 'index': 2, 'type': 'string', }, 
				'contractFamilyCode':     { 'index': 3, 'type': 'string', }, 
				'contractType':           { 'index': 4, 'type': 'string', }, 
				'contractSubType':        { 'index': 5, 'type': 'string', }, 
				'contractVersion':        { 'index': 6, 'type': 'string', }, 
				'strikePrice':            { 'index': 7, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'putCall':                { 'index': 8, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'expiryYear':             { 'index': 9, 'type': 'int', }, 
				'expiryMonth':            { 'index': 10, 'type': 'int', }, 
				'expiryDay':              { 'index': 11, 'type': 'int', }, 
				'flex':                   { 'index': 12, 'type': 'bool', }, 
			}, 
		}, 
		'CommandHeader': {
			'id': 29, 
			'version': 5, 
			'publishable': 'true', 
			'columns': {
				'commandTime':    { 'index': 0, 'type': 'int', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                    ],
				                  },
				'isPosDup':       { 'index': 1, 'type': 'bool', }, 
				'posDupId':       { 'index': 2, 'type': 'string', }, 
				'sourceMessage':  { 'index': 3, 'type': 'binary', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'blob'},
				                    ],
				                  },
				'systemName':     { 'index': 4, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '32'},
				                    ],
				                  },
				'creatorId':      { 'index': 5, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '29'},
				                    ],
				                  },
				'creatorIdType':  { 'index': 6, 'type': 'ubyte', 'enum': 'OmCreatorIdType', }, 
				'eventTrailData': { 'index': 7, 'type': 'table', 'tablename': 'EventTrailData', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'struct'},
				                    ],
				                  },
				'systemType':     { 'index': 8, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
			}, 
		}, 
		'Comment': {
			'id': 21, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commentType':  { 'index': 0, 'type': 'ubyte', 'enum': 'OmCommentType', }, 
				'commentValue': { 'index': 1, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '255'},
				                  ],
				                },
			}, 
		}, 
		'CounterPartyBreakdown': {
			'id': 373, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'counterPartyId': { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '29'},
				                    ],
				                  },
				'quantity':       { 'index': 1, 'type': 'double', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'real'},
				                    ],
				                  },
			}, 
		}, 
		'EventTrailData': {
			'id': 348, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'eventTrailId':           { 'index': 0, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '320'},
				                            ],
				                          },
				'eventTrailHopCount':     { 'index': 1, 'type': 'uint', }, 
				'isEventTrailTerminator': { 'index': 2, 'type': 'bool', }, 
			}, 
		}, 
		'ExecFlowSpecificCanada': {
			'id': 532, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'canadaActionSource':          { 'index': 0, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '3'},
				                                 ],
				                               },
				'canadaExchangeUserId':        { 'index': 1, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '8'},
				                                 ],
				                               },
				'canadaPrincipalTrade':        { 'index': 2, 'type': 'bool', }, 
				'canadaWashTrade':             { 'index': 3, 'type': 'bool', }, 
				'canadaTradeCorrection':       { 'index': 4, 'type': 'bool', }, 
				'canadaExchangeAdmin':         { 'index': 5, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '35'},
				                                 ],
				                               },
				'canadaBypass':                { 'index': 6, 'type': 'bool', }, 
				'canadaNormalCourseIssuerBid': { 'index': 7, 'type': 'bool', }, 
				'canadaOriginalTradeId':       { 'index': 8, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '30'},
				                                 ],
				                               },
				'canadaSOROrderID1':           { 'index': 9, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '40'},
				                                 ],
				                               },
				'canadaSOROrderID2':           { 'index': 10, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '40'},
				                                 ],
				                               },
				'canadaCancelOnDisconnect':    { 'index': 11, 'type': 'bool', }, 
				'canadaAccountType':           { 'index': 12, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '2'},
				                                 ],
				                               },
				'canadaBasketTrade':           { 'index': 13, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '5'},
				                                 ],
				                               },
				'canadaCustomerType':          { 'index': 14, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '3'},
				                                 ],
				                               },
				'canadaInfoText':              { 'index': 15, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '128'},
				                                 ],
				                               },
				'canadaNonResident':           { 'index': 16, 'type': 'bool', }, 
				'canadaNoTradeFeature':        { 'index': 17, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '2'},
				                                 ],
				                               },
				'canadaNoTradeKey':            { 'index': 18, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '6'},
				                                 ],
				                               },
				'canadaPegType':               { 'index': 19, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '1'},
				                                 ],
				                               },
				'canadaRegulationCode':        { 'index': 20, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '2'},
				                                 ],
				                               },
				'canadaUndisplayed':           { 'index': 21, 'type': 'bool', }, 
				'canadaCrossType':             { 'index': 22, 'type': 'ubyte', 'enum': 'OmCanadaCrossType', }, 
			}, 
		}, 
		'ExternalTradingAlgorithmDetails': {
			'id': 680, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'tradingAlgorithm':            { 'index': 0, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'startTime':                   { 'index': 1, 'type': 'int', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                 ],
				                               },
				'endTime':                     { 'index': 2, 'type': 'int', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                 ],
				                               },
				'volumeLimitPercentage':       { 'index': 3, 'type': 'int', }, 
				'participationRatePercentage': { 'index': 4, 'type': 'int', }, 
			}, 
		}, 
		'FalconTradeReportData': {
			'id': 610, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                               { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                 ],
				                                               },
				'falconTradeReportTransactionType':            { 'index': 1, 'type': 'ubyte', 'enum': 'OmFalconTradeReportTransactionType', }, 
				'executionPrice':                              { 'index': 2, 'type': 'double', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                                 ],
				                                               },
				'quantity':                                    { 'index': 3, 'type': 'double', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                                 ],
				                                               },
				'executionId':                                 { 'index': 4, 'type': 'string', 'aliases': ['execId'], 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '29'},
				                                                 ],
				                                               },
				'version':                                     { 'index': 5, 'type': 'int', }, 
				'oldVersion':                                  { 'index': 6, 'type': 'uint', }, 
				'buySell':                                     { 'index': 7, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'sellShort':                                   { 'index': 8, 'type': 'bool', }, 
				'sellShortExempt':                             { 'index': 9, 'type': 'bool', }, 
				'isOtherSideShortSell':                        { 'index': 10, 'type': 'bool', }, 
				'isOtherSideShortSellExempt':                  { 'index': 11, 'type': 'bool', }, 
				'customerPartyType':                           { 'index': 12, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'executionCapacity':                           { 'index': 13, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'productId':                                   { 'index': 14, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '100'},
				                                                 ],
				                                               },
				'productIdType':                               { 'index': 15, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'executionTime':                               { 'index': 16, 'type': 'int', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                 ],
				                                               },
				'executionTimeMicrosecond':                    { 'index': 17, 'type': 'int', }, 
				'settlementDateCalcMethod':                    { 'index': 18, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'marketParticipantId':                         { 'index': 19, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'clearingInstruction':                         { 'index': 20, 'type': 'ubyte', 'enum': 'OmClearingInstructionType', }, 
				'tradeReportResponse':                         { 'index': 21, 'type': 'table', 'tablename': 'TradeReportResponse', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                 ],
				                                               },
				'executionPoint':                              { 'index': 22, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '16'},
				                                                 ],
				                                               },
				'risklessPrincipalOriginalExecutionPoint':     { 'index': 23, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '16'},
				                                                 ],
				                                               },
				'fixProcessCode':                              { 'index': 24, 'type': 'ubyte', 'enum': 'OmFixProcessCode', }, 
				'fixTradeCondition':                           { 'index': 25, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '128'},
				                                                 ],
				                                               },
				'fixTrdSubType':                               { 'index': 26, 'type': 'int', }, 
				'fixReversalIndicator':                        { 'index': 27, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixPublishTrdIndicator':                      { 'index': 28, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixAsOfIndicator':                            { 'index': 29, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixOverrideFlag':                             { 'index': 30, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'contraOatsBranchSequenceNumber':              { 'index': 31, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '20'},
				                                                 ],
				                                               },
				'oatsBranchSequenceNumber':                    { 'index': 32, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '20'},
				                                                 ],
				                                               },
				'commentText':                                 { 'index': 33, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '50'},
				                                                 ],
				                                               },
				'regulatoryReportDomain':                      { 'index': 34, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'contraParty':                                 { 'index': 35, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'usIsORFReportable':                           { 'index': 36, 'type': 'bool', }, 
				'tradeReportingExecutionEntryTime':            { 'index': 37, 'type': 'int', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                 ],
				                                               },
				'tradeReportingExecutionEntryTimeMicrosecond': { 'index': 38, 'type': 'int', }, 
				'clientOrderCapacity':                         { 'index': 39, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'giveUpContraParty':                           { 'index': 40, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'secDbActReportingDeskId':                     { 'index': 41, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '30'},
				                                                 ],
				                                               },
			}, 
		}, 
		'FlowSpecificAustralia': {
			'id': 717, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'asicWholesaleIndicator':                   { 'index': 0, 'type': 'bool', }, 
				'asicIntermediaryId':                       { 'index': 1, 'type': 'int', }, 
				'asicOriginOfOrder':                        { 'index': 2, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '32'},
				                                              ],
				                                            },
				'isAustraliaUndisclosedOrder':              { 'index': 3, 'type': 'bool', }, 
				'iosAccountExchangeCrossReference':         { 'index': 4, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '10'},
				                                              ],
				                                            },
				'australiaUnintentionalCrossPreventionKey': { 'index': 5, 'type': 'int', }, 
				'australiaTradeConditionCode':              { 'index': 6, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '8'},
				                                              ],
				                                            },
				'iosPlusEncodedOrderId':                    { 'index': 7, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '15'},
				                                              ],
				                                            },
			}, 
		}, 
		'FlowSpecificCanada': {
			'id': 524, 
			'version': 9, 
			'publishable': 'true', 
			'columns': {
				'canadaBasketTrade':                  { 'index': 0, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '5'},
				                                        ],
				                                      },
				'canadaAccountType':                  { 'index': 1, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '2'},
				                                        ],
				                                      },
				'canadaCustomerType':                 { 'index': 2, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '3'},
				                                        ],
				                                      },
				'canadaRegulationCode':               { 'index': 3, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '2'},
				                                        ],
				                                      },
				'canadaSOROrderID1':                  { 'index': 4, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '40'},
				                                        ],
				                                      },
				'canadaNoTradeFeature':               { 'index': 5, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '2'},
				                                        ],
				                                      },
				'canadaNoTradeKey':                   { 'index': 6, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '6'},
				                                        ],
				                                      },
				'canadaNonResident':                  { 'index': 7, 'type': 'bool', }, 
				'triactCanadaMarketplaceConstraints': { 'index': 8, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '15'},
				                                        ],
				                                      },
				'canadaActionSource':                 { 'index': 9, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '3'},
				                                        ],
				                                      },
				'canadaExchangeUserId':               { 'index': 10, 'type': 'string', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
					                                    {'field': 'maxStringLength' , 'value' : '8'},
				                                        ],
				                                      },
				'canadaPrincipalTrade':               { 'index': 11, 'type': 'bool', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
				                                        ],
				                                      },
				'canadaWashTrade':                    { 'index': 12, 'type': 'bool', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
				                                        ],
				                                      },
				'canadaTradeCorrection':              { 'index': 13, 'type': 'bool', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
				                                        ],
				                                      },
				'canadaExchangeAdmin':                { 'index': 14, 'type': 'string', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
					                                    {'field': 'maxStringLength' , 'value' : '35'},
				                                        ],
				                                      },
				'canadaBypass':                       { 'index': 15, 'type': 'bool', }, 
				'canadaNormalCourseIssuerBid':        { 'index': 16, 'type': 'bool', }, 
				'canadaOriginalTradeId':              { 'index': 17, 'type': 'string', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
					                                    {'field': 'maxStringLength' , 'value' : '30'},
				                                        ],
				                                      },
				'canadaProtection':                   { 'index': 18, 'type': 'bool', }, 
				'canadaProtectionPriceImprovement':   { 'index': 19, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '1'},
				                                        ],
				                                      },
				'canadaSOROrderID2':                  { 'index': 20, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '40'},
				                                        ],
				                                      },
				'canadaCancelOnDisconnect':           { 'index': 21, 'type': 'bool', }, 
				'canadaPegType':                      { 'index': 22, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '1'},
				                                        ],
				                                      },
				'canadaUndisplayed':                  { 'index': 23, 'type': 'bool', }, 
				'canadaInsideMatchPercent':           { 'index': 24, 'type': 'int', }, 
				'canadaSettlementTerm':               { 'index': 25, 'type': 'string', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
					                                    {'field': 'maxStringLength' , 'value' : '2'},
				                                        ],
				                                      },
				'canadaSettlementDate':               { 'index': 26, 'type': 'int', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
					                                    {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                        ],
				                                      },
				'canadaIsInternalCross':              { 'index': 27, 'type': 'bool', }, 
				'canadaInfoText':                     { 'index': 28, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '128'},
				                                        ],
				                                      },
				'canadaCrossType':                    { 'index': 29, 'type': 'ubyte', 'enum': 'OmCanadaCrossType', }, 
				'canadaMustBeFilled':                 { 'index': 30, 'type': 'bool', }, 
				'canadaClearingAccount':              { 'index': 31, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '32'},
				                                        ],
				                                      },
				'canadaShortMarkingExempt':           { 'index': 32, 'type': 'ubyte', 'enum': 'OmCanadaShortMarkingExemptDesignation', }, 
			}, 
		}, 
		'FlowSpecificSEF': {
			'id': 723, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sefPartyReferences':      { 'index': 0, 'type': 'table', 'tablename': 'SEFPartyReference', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'sefRegulatoryReferences': { 'index': 1, 'type': 'table', 'tablename': 'SEFRegulatoryReference', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
			}, 
		}, 
		'FuturesInstructionElement': {
			'id': 143, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'type':                      { 'index': 0, 'type': 'ubyte', 'enum': 'OmInstructionType', }, 
				'clearingAccount':           { 'index': 1, 'type': 'string', }, 
				'instructClearingAccountId': { 'index': 2, 'type': 'bool', }, 
				'clearingAccountType':       { 'index': 3, 'type': 'string', }, 
				'instructAccountType':       { 'index': 4, 'type': 'bool', }, 
				'ctiCode':                   { 'index': 5, 'type': 'string', }, 
				'instructCtiCode':           { 'index': 6, 'type': 'bool', }, 
				'origin':                    { 'index': 7, 'type': 'string', }, 
				'instructOrigin':            { 'index': 8, 'type': 'bool', }, 
				'openClose':                 { 'index': 9, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'instructOpenClose':         { 'index': 10, 'type': 'bool', }, 
				'clearingMemberId':          { 'index': 11, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '16'},
				                               ],
				                             },
				'giveUpMessage':             { 'index': 12, 'type': 'string', }, 
				'instructReference':         { 'index': 13, 'type': 'bool', }, 
				'reference':                 { 'index': 14, 'type': 'string', }, 
				'commission':                { 'index': 15, 'type': 'double', 
				                               'meta-fields': [
					                           {'field': 'dictionaryType' , 'value' : 'real'},
				                               ],
				                             },
			}, 
		}, 
		'FuturesTradeError': {
			'id': 144, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'tradeId':                { 'index': 0, 'type': 'string', }, 
				'errorType':              { 'index': 1, 'type': 'ubyte', 'enum': 'OmErrorType', }, 
				'rejectingSystem':        { 'index': 2, 'type': 'ubyte', 'enum': 'OmRejectingSystem', }, 
				'instrId':                { 'index': 3, 'type': 'int', }, 
				'instructionElementId':   { 'index': 4, 'type': 'int', }, 
				'message':                { 'index': 5, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '250'},
				                            ],
				                          },
				'instructionElementList': { 'index': 6, 'type': 'table', 'tablename': 'InstructionElement', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'collection'},
				                            ],
				                          },
			}, 
		}, 
		'Instruction': {
			'id': 141, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'instrId':                { 'index': 0, 'type': 'int', }, 
				'tradeList':              { 'index': 1, 'type': 'table', 'tablename': 'Trade', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'collection'},
				                            ],
				                          },
				'instructionElementList': { 'index': 2, 'type': 'table', 'tablename': 'InstructionElement', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'collection'},
				                            ],
				                          },
				'cheetahTradeId':         { 'index': 3, 'type': 'string', }, 
			}, 
		}, 
		'InstructionElement': {
			'id': 142, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'quantity':                      { 'index': 0, 'type': 'double', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'real'},
				                                   ],
				                                 },
				'futuresInstructionElementList': { 'index': 1, 'type': 'table', 'tablename': 'FuturesInstructionElement', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'collection'},
				                                   ],
				                                 },
				'instructionElementId':          { 'index': 2, 'type': 'int', }, 
			}, 
		}, 
		'MarketClassificationSessionState': {
			'id': 313, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'marketClassification': { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '32'},
				                          ],
				                        },
				'marketSessionState':   { 'index': 1, 'type': 'ubyte', 'enum': 'OmMarketSessionState', }, 
			}, 
		}, 
		'MarketSessionStateNotification': {
			'id': 417, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                     { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                                       ],
				                                     },
				'marketId':                          { 'index': 1, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '16'},
				                                       ],
				                                     },
				'subMarketId':                       { 'index': 2, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '16'},
				                                       ],
				                                     },
				'marketClassificationSessionStates': { 'index': 3, 'type': 'table', 'tablename': 'MarketClassificationSessionState', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
			}, 
		}, 
		'OrderGroupData': {
			'id': 724, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'orderGroupId':                  { 'index': 0, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '30'},
				                                   ],
				                                 },
				'orderGroupCount':               { 'index': 1, 'type': 'int', }, 
				'orderGroupProductCount':        { 'index': 2, 'type': 'int', }, 
				'orderGroupTradingAccountCount': { 'index': 3, 'type': 'int', }, 
			}, 
		}, 
		'PersistenceTransactionStatus': {
			'id': 66, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'datastreamName':   { 'index': 0, 'type': 'string', }, 
				'destinationName':  { 'index': 1, 'type': 'string', }, 
				'eventTime':        { 'index': 2, 'type': 'int', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'datetime'},
				                      ],
				                    },
				'sequenceNumber':   { 'index': 3, 'type': 'int', }, 
				'repositoryAction': { 'index': 4, 'type': 'ubyte', 'enum': 'OmRepositoryActionType', }, 
			}, 
		}, 
		'PreviousTradeData': {
			'id': 409, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'exchangeMemberId': { 'index': 0, 'type': 'string', }, 
				'orderCapacity':    { 'index': 1, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':       { 'index': 2, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':    { 'index': 3, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
			}, 
		}, 
		'ProductSynonym': {
			'id': 92, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'productId':     { 'index': 0, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '100'},
				                   ],
				                 },
				'productIdType': { 'index': 1, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
			}, 
		}, 
		'RejectReason': {
			'id': 27, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'rejectReasonType': { 'index': 0, 'type': 'ubyte', 'enum': 'OmRejectReasonType', }, 
				'severity':         { 'index': 1, 'type': 'ubyte', 'enum': 'OmSeverity', # FIELD IS OBSOLETE
				                      'meta-fields': [
					                  {'field': 'obsolete' , 'value' : 'true'},
				                      ],
				                    },
				'rejectReasonText': { 'index': 2, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '256'},
				                      ],
				                    },
				'rejectingSystem':  { 'index': 3, 'type': 'ubyte', 'enum': 'OmRejectingSystem', }, 
			}, 
		}, 
		'SEFPartyReference': {
			'id': 721, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sefPartyId':            { 'index': 0, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '32'},
				                           ],
				                         },
				'sefPartyIdSource':      { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '1'},
				                           ],
				                         },
				'sefPartyRole':          { 'index': 2, 'type': 'ubyte', 'enum': 'OmSEFPartyRole', }, 
				'sefNumberOfPartySubId': { 'index': 3, 'type': 'int', }, 
				'sefSubPartyReferences': { 'index': 4, 'type': 'table', 'tablename': 'SEFSubPartyReference', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
			}, 
		}, 
		'SEFRegulatoryReference': {
			'id': 722, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sefRegulatoryTradeId':            { 'index': 0, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '45'},
				                                     ],
				                                   },
				'sefRegulatoryTradeIdType':        { 'index': 1, 'type': 'int', }, 
				'sefTradeType':                    { 'index': 2, 'type': 'int', }, 
				'sefAvailableToTrade':             { 'index': 3, 'type': 'bool', }, 
				'seftradeRegulatoryTimeStamp':     { 'index': 4, 'type': 'int', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                     ],
				                                   },
				'sefTradeRegulatoryTimeStampType': { 'index': 5, 'type': 'int', }, 
				'sefVenueType':                    { 'index': 6, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '1'},
				                                     ],
				                                   },
				'sefIntendToClear':                { 'index': 7, 'type': 'bool', }, 
				'sefTradeClearingInstruction':     { 'index': 8, 'type': 'ubyte', 'enum': 'OmSEFTradeClearingInstruction', }, 
				'sefConfirmationMethod':           { 'index': 9, 'type': 'int', }, 
				'sefmandatoryClearingIndicator':   { 'index': 10, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '1'},
				                                     ],
				                                   },
				'sefRegulatoryReportType':         { 'index': 11, 'type': 'int', }, 
			}, 
		}, 
		'SEFSubPartyReference': {
			'id': 720, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sefIsUSParty':  { 'index': 0, 'type': 'bool', }, 
				'sefSubPartyId': { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '50'},
				                   ],
				                 },
			}, 
		}, 
		'Trade': {
			'id': 140, 
			'version': 6, 
			'publishable': 'true', 
			'columns': {
				'sequence':               { 'index': 0, 'type': 'int', }, 
				'clearingMessageId':      { 'index': 1, 'type': 'string', }, 
				'clearingVersion':        { 'index': 2, 'type': 'string', }, 
				'clearingMessageType':    { 'index': 3, 'type': 'ubyte', 'enum': 'OmTradeType', }, 
				'tradeId':                { 'index': 4, 'type': 'string', }, 
				'parentTradeId':          { 'index': 5, 'type': 'string', }, 
				'orderId':                { 'index': 6, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'executionId':            { 'index': 7, 'type': 'string', 'aliases': ['execId'], 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'state':                  { 'index': 8, 'type': 'string', }, 
				'status':                 { 'index': 9, 'type': 'ubyte', 'enum': 'OmTradeStatus', }, 
				'clearingDateStr':        { 'index': 10, 'type': 'string', }, 
				'tradeDate':              { 'index': 11, 'type': 'string', }, 
				'historical':             { 'index': 12, 'type': 'bool', }, 
				'executionTime':          { 'index': 13, 'type': 'int', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'datetime'},
				                            ],
				                          },
				'buySell':                { 'index': 14, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'price':                  { 'index': 15, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'quantity':               { 'index': 16, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'fillQuantity':           { 'index': 17, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'clearingOrderType':      { 'index': 18, 'type': 'string', }, 
				'tradeType':              { 'index': 19, 'type': 'string', }, 
				'clearingExecutionType':  { 'index': 20, 'type': 'string', }, 
				'userId':                 { 'index': 21, 'type': 'string', }, 
				'feeCode':                { 'index': 22, 'type': 'string', }, 
				'origin':                 { 'index': 23, 'type': 'string', }, 
				'reference':              { 'index': 24, 'type': 'string', }, 
				'clientReference':        { 'index': 25, 'type': 'string', }, 
				'exchangeMemberId':       { 'index': 26, 'type': 'string', }, 
				'executingMemberId':      { 'index': 27, 'type': 'string', }, 
				'clearingMemberId':       { 'index': 28, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '16'},
				                            ],
				                          },
				'clearingAccount':        { 'index': 29, 'type': 'string', }, 
				'clearingAccountType':    { 'index': 30, 'type': 'string', }, 
				'clearingProductList':    { 'index': 31, 'type': 'table', 'tablename': 'ClearingProduct', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'collection'},
				                            ],
				                          },
				'tradeSubId':             { 'index': 32, 'type': 'string', }, 
				'parentTradeSubId':       { 'index': 33, 'type': 'string', }, 
				'giveUpStatus':           { 'index': 34, 'type': 'ubyte', 'enum': 'OmGiveUp', }, 
				'giveUpMessage':          { 'index': 35, 'type': 'string', }, 
				'giveUpId':               { 'index': 36, 'type': 'string', }, 
				'spread':                 { 'index': 37, 'type': 'bool', }, 
				'openClose':              { 'index': 38, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'ctiCode':                { 'index': 39, 'type': 'string', }, 
				'residualQuantity':       { 'index': 40, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'oppositeMemberId':       { 'index': 41, 'type': 'string', }, 
				'averagePriceIndicator':  { 'index': 42, 'type': 'ubyte', 'enum': 'OmApi', }, 
				'roundedPrice':           { 'index': 43, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'error':                  { 'index': 44, 'type': 'string', }, 
				'tradingVenue':           { 'index': 45, 'type': 'string', }, 
				'tradeSubType':           { 'index': 46, 'type': 'string', }, 
				'clearingOrganizationId': { 'index': 47, 'type': 'string', }, 
				'submittingMemberCode':   { 'index': 48, 'type': 'string', }, 
				'instructionElementId':   { 'index': 49, 'type': 'int', }, 
				'clearingOrgId':          { 'index': 50, 'type': 'string', }, 
				'commission':             { 'index': 51, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'originalClearingDate':   { 'index': 52, 'type': 'string', }, 
				'asOfDate':               { 'index': 53, 'type': 'string', }, 
			}, 
		}, 
		'TradeReportResponse': {
			'id': 510, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'actReportStatus':                     { 'index': 0, 'type': 'string', 
				                                         'meta-fields': [
					                                     {'field': 'maxStringLength' , 'value' : '1'},
				                                         ],
				                                       },
				'tradeReportResponseId':               { 'index': 1, 'type': 'string', 
				                                         'meta-fields': [
					                                     {'field': 'maxStringLength' , 'value' : '10'},
				                                         ],
				                                       },
				'tradeReportState':                    { 'index': 2, 'type': 'ubyte', 'enum': 'OmTradeReportState', }, 
				'rejectReasonText':                    { 'index': 3, 'type': 'string', 
				                                         'meta-fields': [
					                                     {'field': 'maxStringLength' , 'value' : '256'},
				                                         ],
				                                       },
				'tradeReportResponseControlDateLocal': { 'index': 4, 'type': 'int', 
				                                         'meta-fields': [
					                                     {'field': 'dictionaryType' , 'value' : 'date'},
				                                         ],
				                                       },
			}, 
		}, 
		'TradeUpdateTypeList': {
			'id': 305, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'tradeUpdate': { 'index': 0, 'type': 'ubyte', 'enum': 'OmTradeUpdateType', }, 
			}, 
		}, 
		'VikingAcceptCancelRequest': {
			'id': 80, 
			'version': 7, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':            { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                              ],
				                            },
				'orderId':                  { 'index': 1, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'exchangeOrderId':          { 'index': 2, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '64'},
				                              ],
				                            },
				'quantityRemaining':        { 'index': 3, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'executedQuantity':         { 'index': 4, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'applicationStripe':        { 'index': 5, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '18'},
				                              ],
				                            },
				'prevExchangeOrderId':      { 'index': 6, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '32'},
				                              ],
				                            },
				'orderVersion':             { 'index': 7, 'type': 'uint', }, 
				'cancelledQuantity':        { 'index': 8, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'destinationMembershipId':  { 'index': 9, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '30'},
				                              ],
				                            },
				'lastVikingId':             { 'index': 10, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '64'},
				                              ],
				                            },
				'flowSpecificCanada':       { 'index': 11, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                              ],
				                            },
				'settlementDateCalcMethod': { 'index': 12, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'settlementDate':           { 'index': 13, 'type': 'int', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'datetime'},
				                              ],
				                            },
			}, 
		}, 
		'VikingAcceptCorrectionRequest': {
			'id': 77, 
			'version': 9, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':                { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'orderId':                      { 'index': 1, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'exchangeOrderId':              { 'index': 2, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
				'quantityRemaining':            { 'index': 3, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'executedQuantity':             { 'index': 4, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'applicationStripe':            { 'index': 5, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '18'},
				                                  ],
				                                },
				'prevExchangeOrderId':          { 'index': 6, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '32'},
				                                  ],
				                                },
				'orderVersion':                 { 'index': 7, 'type': 'uint', }, 
				'lastVikingId':                 { 'index': 8, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
				'destinationMembershipId':      { 'index': 9, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '30'},
				                                  ],
				                                },
				'destinationComplianceOrderId': { 'index': 10, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '30'},
				                                  ],
				                                },
				'flowSpecificCanada':           { 'index': 11, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'settlementDateCalcMethod':     { 'index': 12, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'settlementDate':               { 'index': 13, 'type': 'int', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                  ],
				                                },
				'acceptedCorrectionQuantity':   { 'index': 14, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'deltaQuantity':                { 'index': 15, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
			}, 
		}, 
		'VikingAmendMultiLegOrder': {
			'id': 166, 
			'version': 11, 
			'publishable': 'true', 
			'columns': {
				'orderId':                        { 'index': 0, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '29'},
				                                    ],
				                                  },
				'orderVersion':                   { 'index': 1, 'type': 'uint', }, 
				'lastVikingId':                   { 'index': 2, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '64'},
				                                    ],
				                                  },
				'vikingLineId':                   { 'index': 3, 'type': 'string', 'aliases': ['vikingLHId'], 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '64'},
				                                    ],
				                                  },
				'orderType':                      { 'index': 4, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'limitPrice':                     { 'index': 5, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'quantity':                       { 'index': 6, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'destinationMembershipId':        { 'index': 7, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '30'},
				                                    ],
				                                  },
				'counterPartyId':                 { 'index': 8, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '29'},
				                                    ],
				                                  },
				'consolidatedRegulatoryCode':     { 'index': 9, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'vikingOrderLegs':                { 'index': 10, 'type': 'table', 'tablename': 'VikingOrderLeg', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'commandHeader':                  { 'index': 11, 'type': 'table', 'tablename': 'CommandHeader', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                    ],
				                                  },
				'exchangeOrderId':                { 'index': 12, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '64'},
				                                    ],
				                                  },
				'timeInForce':                    { 'index': 13, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'expirationDateTime':             { 'index': 14, 'type': 'int', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                    ],
				                                  },
				'allOrNone':                      { 'index': 15, 'type': 'bool', }, 
				'vikingDestinationId':            { 'index': 16, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '20'},
				                                    ],
				                                  },
				'exchangeQuantity':               { 'index': 17, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'orderOriginCode':                { 'index': 18, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '1'},
				                                    ],
				                                  },
				'marketMakerId':                  { 'index': 19, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'marketMakerOCCClearingAccount':  { 'index': 20, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'deltaQuantity':                  { 'index': 21, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'clearingFirm':                   { 'index': 22, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'preferredMarketMakerId':         { 'index': 23, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'isDirectedOrderWithAuction':     { 'index': 24, 'type': 'bool', }, 
				'vikingDestinationSubId':         { 'index': 25, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '20'},
				                                    ],
				                                  },
				'marketMakerExchangeRepresented': { 'index': 26, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '4'},
				                                    ],
				                                  },
			}, 
		}, 
		'VikingAmendOrder': {
			'id': 74, 
			'version': 74, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada,flowSpecificAustralia'},
			],
			'columns': {
				'commandHeader':                            { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                                              ],
				                                            },
				'orderId':                                  { 'index': 1, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '29'},
				                                              ],
				                                            },
				'exchangeOrderId':                          { 'index': 2, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '64'},
				                                              ],
				                                            },
				'orderType':                                { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'quantity':                                 { 'index': 4, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'deltaQuantity':                            { 'index': 5, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'timeInForce':                              { 'index': 6, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'expirationDateTime':                       { 'index': 7, 'type': 'int', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                              ],
				                                            },
				'allOrNone':                                { 'index': 8, 'type': 'bool', }, 
				'limitPrice':                               { 'index': 9, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'stopPrice':                                { 'index': 10, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'executionCurrency':                        { 'index': 11, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '3'},
				                                              ],
				                                            },
				'maxTrancheSize':                           { 'index': 12, 'type': 'double', 'aliases': ['displaySize'], 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'traderExchangeId':                         { 'index': 13, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '30'},
				                                              ],
				                                            },
				'applicationStripe':                        { 'index': 14, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '18'},
				                                              ],
				                                            },
				'productSynonyms':                          { 'index': 15, 'type': 'table', 'tablename': 'ProductSynonym', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                                              ],
				                                            },
				'vikingMarketId':                           { 'index': 16, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '16'},
				                                              ],
				                                            },
				'vikingMarketIdType':                       { 'index': 17, 'type': 'ubyte', 'enum': 'OmVikingMarketIdType', }, 
				'ignoreAggressionCheck':                    { 'index': 18, 'type': 'bool', }, 
				'ignoreOddLotCheck':                        { 'index': 19, 'type': 'bool', }, 
				'buySell':                                  { 'index': 20, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'accountSynonym':                           { 'index': 21, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '50'},
				                                              ],
				                                            },
				'prevExchangeOrderId':                      { 'index': 22, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '32'},
				                                              ],
				                                            },
				'orderCapacity':                            { 'index': 23, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':                               { 'index': 24, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':                            { 'index': 25, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'orderVersion':                             { 'index': 26, 'type': 'uint', }, 
				'lastVikingId':                             { 'index': 27, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '64'},
				                                              ],
				                                            },
				'sellShort':                                { 'index': 28, 'type': 'bool', }, 
				'sellShortExempt':                          { 'index': 29, 'type': 'bool', }, 
				'priceStabilization':                       { 'index': 30, 'type': 'bool', }, 
				'vikingSubMarketId':                        { 'index': 31, 'type': 'string', }, 
				'lotSize':                                  { 'index': 32, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'pegType':                                  { 'index': 33, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffset':                                { 'index': 34, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'pegOffsetType':                            { 'index': 35, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'pegScope':                                 { 'index': 36, 'type': 'ubyte', 'enum': 'OmPegScopeType', }, 
				'discretionaryReferencePriceType':          { 'index': 37, 'type': 'ubyte', 'enum': 'OmDiscretionaryReferencePriceType', }, 
				'discretionaryOffset':                      { 'index': 38, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'discretionaryOffsetType':                  { 'index': 39, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'orderbookVisibility':                      { 'index': 40, 'type': 'ubyte', 'enum': 'OmOrderbookVisibilityType', }, 
				'offsetDirectionType':                      { 'index': 41, 'type': 'ubyte', 'enum': 'OmOffsetDirectionType', }, 
				'tradingPhase':                             { 'index': 42, 'type': 'ubyte', 'enum': 'OmTradingPhase', # FIELD HAS BEEN DEPRECATED
				                                              'meta-fields': [
					                                          {'field': 'deprecated' , 'value' : 'true'},
				                                              ],
				                                            },
				'notHeld':                                  { 'index': 43, 'type': 'bool', }, 
				'routingStrategy':                          { 'index': 44, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '50'},
				                                              ],
				                                            },
				'doNotIncrease':                            { 'index': 45, 'type': 'bool', }, 
				'doNotReduce':                              { 'index': 46, 'type': 'bool', }, 
				'interMarketSweep':                         { 'index': 47, 'type': 'bool', }, 
				'destinationMarketOnly':                    { 'index': 48, 'type': 'bool', }, 
				'destinationMembershipId':                  { 'index': 49, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '30'},
				                                              ],
				                                            },
				'vikingLineId':                             { 'index': 50, 'type': 'string', 'aliases': ['vikingLHId'], 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '64'},
				                                              ],
				                                            },
				'buyToCover':                               { 'index': 51, 'type': 'bool', }, 
				'consolidatedRegulatoryCode':               { 'index': 52, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'isOddLot':                                 { 'index': 53, 'type': 'bool', }, 
				'marketProtection':                         { 'index': 54, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'marketProtectionType':                     { 'index': 55, 'type': 'ubyte', 'enum': 'OmMarketProtectionType', }, 
				'quantityRemaining':                        { 'index': 56, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'isStrategyOrder':                          { 'index': 57, 'type': 'bool', }, 
				'partOfProgram':                            { 'index': 58, 'type': 'bool', }, 
				'arbitrageStrategy':                        { 'index': 59, 'type': 'ubyte', 'enum': 'OmArbitrageStrategy', }, 
				'algorithmicIndicator':                     { 'index': 60, 'type': 'ubyte', 'enum': 'OmAlgorithmicIndicator', }, 
				'trancheSizeDisplayRange':                  { 'index': 61, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'ignoreImbalanceCheck':                     { 'index': 62, 'type': 'bool', }, 
				'startDateTime':                            { 'index': 63, 'type': 'int', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                              ],
				                                            },
				'minExecutableQuantity':                    { 'index': 64, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'ignoreMarketOnCloseCheck':                 { 'index': 65, 'type': 'bool', }, 
				'vikingDestinationId':                      { 'index': 66, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '20'},
				                                              ],
				                                            },
				'crossConsent':                             { 'index': 67, 'type': 'ubyte', 'enum': 'OmCrossingOption', }, 
				'interventionConsent':                      { 'index': 68, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
				'contractMaturityMonth':                    { 'index': 69, 'type': 'int', }, 
				'contractMaturityYear':                     { 'index': 70, 'type': 'int', }, 
				'isInterCommodityStrategy':                 { 'index': 71, 'type': 'bool', }, 
				'traderComment':                            { 'index': 72, 'type': 'table', 'tablename': 'Comment', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                                              ],
				                                            },
				'minDiscretionaryQuantity':                 { 'index': 73, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'brokerBillingType':                        { 'index': 74, 'type': 'ubyte', 'enum': 'OmBrokerBillingType', }, 
				'businessUnit':                             { 'index': 75, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '16'},
				                                              ],
				                                            },
				'counterPartyId':                           { 'index': 76, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '29'},
				                                              ],
				                                            },
				'counterpartyTraderId':                     { 'index': 77, 'type': 'string', }, 
				'productInstrumentType':                    { 'index': 78, 'type': 'ubyte', 'enum': 'OmProductInstrumentType', }, 
				'contractMaturityDay':                      { 'index': 79, 'type': 'int', }, 
				'putCall':                                  { 'index': 80, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'positionOpenClose':                        { 'index': 81, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'strikePrice':                              { 'index': 82, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'facilitationPercent':                      { 'index': 83, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'isEnhancedLimitOrder':                     { 'index': 84, 'type': 'bool', }, 
				'isSpecialLimitOrder':                      { 'index': 85, 'type': 'bool', }, 
				'sellShortArbitrage':                       { 'index': 86, 'type': 'bool', }, 
				'sellShortCover':                           { 'index': 87, 'type': 'bool', }, 
				'sellShortCross':                           { 'index': 88, 'type': 'bool', }, 
				'contractMultiplier':                       { 'index': 89, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'sourceBusinessUnit':                       { 'index': 90, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '16'},
				                                              ],
				                                            },
				'isImbalanceOffsetOnly':                    { 'index': 91, 'type': 'bool', }, 
				'marketSession':                            { 'index': 92, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'investorId':                               { 'index': 93, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '50'},
				                                              ],
				                                            },
				'exchangeAccount':                          { 'index': 94, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '50'},
				                                              ],
				                                            },
				'isMinimumGuaranteedFillEligible':          { 'index': 95, 'type': 'bool', }, 
				'tsxRegulationCode':                        { 'index': 96, 'type': 'string', # FIELD IS OBSOLETE
				                                              'meta-fields': [
					                                          {'field': 'obsolete' , 'value' : 'true'},
					                                          {'field': 'maxStringLength' , 'value' : '2'},
				                                              ],
				                                            },
				'clientMembershipId':                       { 'index': 97, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '30'},
				                                              ],
				                                            },
				'clientsReference':                         { 'index': 98, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '50'},
				                                              ],
				                                            },
				'customerName':                             { 'index': 99, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '50'},
				                                              ],
				                                            },
				'owner':                                    { 'index': 100, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '32'},
				                                              ],
				                                            },
				'hideMembershipIdAtDestination':            { 'index': 101, 'type': 'bool', }, 
				'flowSpecificCanada':                       { 'index': 102, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                                              ],
				                                            },
				'exchangeQuantity':                         { 'index': 103, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'whiteLabelDataId':                         { 'index': 104, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '20'},
				                                              ],
				                                            },
				'vikingDestinationSubId':                   { 'index': 105, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '20'},
				                                              ],
				                                            },
				'provideLiquidityOnly':                     { 'index': 106, 'type': 'bool', }, 
				'orderOriginCode':                          { 'index': 107, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '1'},
				                                              ],
				                                            },
				'marketMakerId':                            { 'index': 108, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '5'},
				                                              ],
				                                            },
				'marketMakerOCCClearingAccount':            { 'index': 109, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '5'},
				                                              ],
				                                            },
				'marketMakerExchangeRepresented':           { 'index': 110, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '4'},
				                                              ],
				                                            },
				'isSolicitedOrder':                         { 'index': 111, 'type': 'bool', }, 
				'isTradingAutomationGenerated':             { 'index': 112, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                              'meta-fields': [
					                                          {'field': 'deprecated' , 'value' : 'true'},
				                                              ],
				                                            },
				'senderLocation':                           { 'index': 113, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '32'},
				                                              ],
				                                            },
				'destinationMembershipPassword':            { 'index': 114, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '30'},
				                                              ],
				                                            },
				'originatorIpAddress':                      { 'index': 115, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '30'},
				                                              ],
				                                            },
				'tradingAlgorithm':                         { 'index': 116, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '32'},
				                                              ],
				                                            },
				'tradingAlgorithmParameters':               { 'index': 117, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '1024'},
				                                              ],
				                                            },
				'contractForDifferences':                   { 'index': 118, 'type': 'bool', }, 
				'smartRouteConsent':                        { 'index': 119, 'type': 'ubyte', 'enum': 'OmSmartRoutingOption', }, 
				'smartRoutedIndicator':                     { 'index': 120, 'type': 'bool', }, 
				'executedQuantity':                         { 'index': 121, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'orderCreationType':                        { 'index': 122, 'type': 'ubyte', 'enum': 'OmOrderCreationType', }, 
				'ctiCode':                                  { 'index': 123, 'type': 'string', }, 
				'isGsiOrderMarkingTowerStyle':              { 'index': 124, 'type': 'bool', }, 
				'clearingFirm':                             { 'index': 125, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '5'},
				                                              ],
				                                            },
				'deltaPrice':                               { 'index': 126, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'preferredMarketMakerId':                   { 'index': 127, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '5'},
				                                              ],
				                                            },
				'isDirectedOrderWithAuction':               { 'index': 128, 'type': 'bool', }, 
				'declarationType':                          { 'index': 129, 'type': 'ubyte', 'enum': 'OmDeclarationType', }, 
				'vikingNotionalCheckPriceCurrency':         { 'index': 130, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '3'},
				                                              ],
				                                            },
				'vikingNotionalCheckPrice':                 { 'index': 131, 'type': 'double', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'real'},
				                                              ],
				                                            },
				'nearLegPricePreference':                   { 'index': 132, 'type': 'ubyte', 'enum': 'OmNearLegPricePreference', }, 
				'externalTradingAlgorithmDetails':          { 'index': 133, 'type': 'table', 'tablename': 'ExternalTradingAlgorithmDetails', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                                              ],
				                                            },
				'allocationOrderId':                        { 'index': 134, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '32'},
				                                              ],
				                                            },
				'iosAccountExchangeCrossReference':         { 'index': 135, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                              'meta-fields': [
					                                          {'field': 'deprecated' , 'value' : 'true'},
					                                          {'field': 'maxStringLength' , 'value' : '10'},
				                                              ],
				                                            },
				'isAustraliaUndisclosedOrder':              { 'index': 136, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                              'meta-fields': [
					                                          {'field': 'deprecated' , 'value' : 'true'},
				                                              ],
				                                            },
				'destinationAllowedBrokers':                { 'index': 137, 'type': 'table', 'tablename': 'BrokerInfo', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                                              ],
				                                            },
				'clientStarId':                             { 'index': 138, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '10'},
				                                              ],
				                                            },
				'originatorMacAddress':                     { 'index': 139, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '20'},
				                                              ],
				                                            },
				'australiaUnintentionalCrossPreventionKey': { 'index': 140, 'type': 'int', # FIELD HAS BEEN DEPRECATED
				                                              'meta-fields': [
					                                          {'field': 'deprecated' , 'value' : 'true'},
				                                              ],
				                                            },
				'exchangeAlgorithmId':                      { 'index': 141, 'type': 'int', }, 
				'flowSpecificAustralia':                    { 'index': 142, 'type': 'table', 'tablename': 'FlowSpecificAustralia', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                                              ],
				                                            },
				'isKoreaPostMarginAccountOrder':            { 'index': 143, 'type': 'bool', }, 
				'exchangeSubAccount':                       { 'index': 144, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '50'},
				                                              ],
				                                            },
				'selfMatchPreventionId':                    { 'index': 145, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '12'},
				                                              ],
				                                            },
				'asiaFflFlowGroup':                         { 'index': 146, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '32'},
				                                              ],
				                                            },
				'hedgeStrategy':                            { 'index': 147, 'type': 'ubyte', 'enum': 'OmHedgeStrategy', }, 
			}, 
		}, 
		'VikingCancelMultiLegOrder': {
			'id': 168, 
			'version': 6, 
			'publishable': 'true', 
			'columns': {
				'orderId':                 { 'index': 0, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'orderVersion':            { 'index': 1, 'type': 'uint', }, 
				'lastVikingId':            { 'index': 2, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'vikingLineId':            { 'index': 3, 'type': 'string', 'aliases': ['vikingLHId'], 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'quantity':                { 'index': 4, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'destinationMembershipId': { 'index': 5, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'counterPartyId':          { 'index': 6, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'vikingOrderLegs':         { 'index': 7, 'type': 'table', 'tablename': 'VikingOrderLeg', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'commandHeader':           { 'index': 8, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'exchangeOrderId':         { 'index': 9, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'crossMatchingId':         { 'index': 10, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'vikingDestinationId':     { 'index': 11, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '20'},
				                             ],
				                           },
				'clearingFirm':            { 'index': 12, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '5'},
				                             ],
				                           },
				'cancelNewVersion':        { 'index': 13, 'type': 'uint', }, 
				'vikingDestinationSubId':  { 'index': 14, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '20'},
				                             ],
				                           },
			}, 
		}, 
		'VikingCancelOrder': {
			'id': 76, 
			'version': 37, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':                 { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
				'orderId':                       { 'index': 1, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '29'},
				                                   ],
				                                 },
				'exchangeOrderId':               { 'index': 2, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '64'},
				                                   ],
				                                 },
				'orderType':                     { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'quantity':                      { 'index': 4, 'type': 'double', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'real'},
				                                   ],
				                                 },
				'traderExchangeId':              { 'index': 5, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '30'},
				                                   ],
				                                 },
				'applicationStripe':             { 'index': 6, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '18'},
				                                   ],
				                                 },
				'productSynonyms':               { 'index': 7, 'type': 'table', 'tablename': 'ProductSynonym', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'collection'},
				                                   ],
				                                 },
				'vikingMarketId':                { 'index': 8, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '16'},
				                                   ],
				                                 },
				'vikingMarketIdType':            { 'index': 9, 'type': 'ubyte', 'enum': 'OmVikingMarketIdType', }, 
				'buySell':                       { 'index': 10, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'accountSynonym':                { 'index': 11, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '50'},
				                                   ],
				                                 },
				'prevExchangeOrderId':           { 'index': 12, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '32'},
				                                   ],
				                                 },
				'orderVersion':                  { 'index': 13, 'type': 'uint', }, 
				'lastVikingId':                  { 'index': 14, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '64'},
				                                   ],
				                                 },
				'vikingSubMarketId':             { 'index': 15, 'type': 'string', }, 
				'cancelNewVersion':              { 'index': 16, 'type': 'uint', }, 
				'vikingLineId':                  { 'index': 17, 'type': 'string', 'aliases': ['vikingLHId'], 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '64'},
				                                   ],
				                                 },
				'buyToCover':                    { 'index': 18, 'type': 'bool', }, 
				'destinationMembershipId':       { 'index': 19, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '30'},
				                                   ],
				                                 },
				'isStrategyOrder':               { 'index': 20, 'type': 'bool', }, 
				'sellShort':                     { 'index': 21, 'type': 'bool', }, 
				'ignoreMarketOnCloseCheck':      { 'index': 22, 'type': 'bool', }, 
				'vikingDestinationId':           { 'index': 23, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '20'},
				                                   ],
				                                 },
				'contractMaturityMonth':         { 'index': 24, 'type': 'int', }, 
				'contractMaturityYear':          { 'index': 25, 'type': 'int', }, 
				'isInterCommodityStrategy':      { 'index': 26, 'type': 'bool', }, 
				'counterPartyId':                { 'index': 27, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '29'},
				                                   ],
				                                 },
				'counterpartyTraderId':          { 'index': 28, 'type': 'string', }, 
				'productInstrumentType':         { 'index': 29, 'type': 'ubyte', 'enum': 'OmProductInstrumentType', }, 
				'contractMaturityDay':           { 'index': 30, 'type': 'int', }, 
				'putCall':                       { 'index': 31, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'positionOpenClose':             { 'index': 32, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'strikePrice':                   { 'index': 33, 'type': 'double', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'real'},
				                                   ],
				                                 },
				'facilitationPercent':           { 'index': 34, 'type': 'double', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'real'},
				                                   ],
				                                 },
				'isEnhancedLimitOrder':          { 'index': 35, 'type': 'bool', }, 
				'isSpecialLimitOrder':           { 'index': 36, 'type': 'bool', }, 
				'sellShortArbitrage':            { 'index': 37, 'type': 'bool', }, 
				'sellShortCover':                { 'index': 38, 'type': 'bool', }, 
				'sellShortCross':                { 'index': 39, 'type': 'bool', }, 
				'sourceBusinessUnit':            { 'index': 40, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '16'},
				                                   ],
				                                 },
				'investorId':                    { 'index': 41, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '50'},
				                                   ],
				                                 },
				'exchangeAccount':               { 'index': 42, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '50'},
				                                   ],
				                                 },
				'orderbookVisibility':           { 'index': 43, 'type': 'ubyte', 'enum': 'OmOrderbookVisibilityType', }, 
				'whiteLabelDataId':              { 'index': 44, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '20'},
				                                   ],
				                                 },
				'sellShortExempt':               { 'index': 45, 'type': 'bool', }, 
				'vikingDestinationSubId':        { 'index': 46, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '20'},
				                                   ],
				                                 },
				'flowSpecificCanada':            { 'index': 47, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
				'isTradingAutomationGenerated':  { 'index': 48, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                   'meta-fields': [
					                               {'field': 'deprecated' , 'value' : 'true'},
				                                   ],
				                                 },
				'senderLocation':                { 'index': 49, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '32'},
				                                   ],
				                                 },
				'targetQuoteId':                 { 'index': 50, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '32'},
				                                   ],
				                                 },
				'destinationMembershipPassword': { 'index': 51, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '30'},
				                                   ],
				                                 },
				'originatorIpAddress':           { 'index': 52, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '30'},
				                                   ],
				                                 },
				'cancelReason':                  { 'index': 53, 'type': 'ubyte', 'enum': 'OmCancelReason', }, 
				'isOddLot':                      { 'index': 54, 'type': 'bool', }, 
				'algorithmicIndicator':          { 'index': 55, 'type': 'ubyte', 'enum': 'OmAlgorithmicIndicator', }, 
				'smartRoutedIndicator':          { 'index': 56, 'type': 'bool', }, 
				'orderCreationType':             { 'index': 57, 'type': 'ubyte', 'enum': 'OmOrderCreationType', }, 
				'ctiCode':                       { 'index': 58, 'type': 'string', }, 
				'limitPrice':                    { 'index': 59, 'type': 'double', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'real'},
				                                   ],
				                                 },
				'timeInForce':                   { 'index': 60, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'clearingFirm':                  { 'index': 61, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '5'},
				                                   ],
				                                 },
				'orderCapacity':                 { 'index': 62, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'nearLegPricePreference':        { 'index': 63, 'type': 'ubyte', 'enum': 'OmNearLegPricePreference', }, 
				'originatorMacAddress':          { 'index': 64, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '20'},
				                                   ],
				                                 },
				'exchangeAlgorithmId':           { 'index': 65, 'type': 'int', }, 
				'isKoreaPostMarginAccountOrder': { 'index': 66, 'type': 'bool', }, 
				'arbitrageStrategy':             { 'index': 67, 'type': 'ubyte', 'enum': 'OmArbitrageStrategy', }, 
				'exchangeSubAccount':            { 'index': 68, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '50'},
				                                   ],
				                                 },
				'hedgeStrategy':                 { 'index': 69, 'type': 'ubyte', 'enum': 'OmHedgeStrategy', }, 
			}, 
		}, 
		'VikingControl': {
			'id': 310, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'command': { 'index': 0, 'type': 'string', }, 
			}, 
		}, 
		'VikingCreateTradeReportVersion': {
			'id': 609, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':         { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'falconTradeReportData': { 'index': 1, 'type': 'table', 'tablename': 'FalconTradeReportData', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
			}, 
		}, 
		'VikingDeclaration': {
			'id': 421, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':         { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'orderId':               { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'vikingMarketId':        { 'index': 2, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '16'},
				                           ],
				                         },
				'buySell':               { 'index': 3, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'quantity':              { 'index': 4, 'type': 'double', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'real'},
				                           ],
				                         },
				'productSynonyms':       { 'index': 5, 'type': 'table', 'tablename': 'ProductSynonym', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
				'declarationType':       { 'index': 6, 'type': 'ubyte', 'enum': 'OmDeclarationType', }, 
				'orderCapacity':         { 'index': 7, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'basketId':              { 'index': 8, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'exchangeOrderId':       { 'index': 9, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '64'},
				                           ],
				                         },
				'orderVersion':          { 'index': 10, 'type': 'uint', }, 
				'traderExchangeId':      { 'index': 11, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '30'},
				                           ],
				                         },
				'vikingDestinationId':   { 'index': 12, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '20'},
				                           ],
				                         },
				'lotSize':               { 'index': 13, 'type': 'double', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'real'},
				                           ],
				                         },
				'businessUnit':          { 'index': 14, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '16'},
				                           ],
				                         },
				'productInstrumentType': { 'index': 15, 'type': 'ubyte', 'enum': 'OmProductInstrumentType', }, 
				'exchangeAccount':       { 'index': 16, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '50'},
				                           ],
				                         },
			}, 
		}, 
		'VikingDeclarationReject': {
			'id': 423, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'rejectReasons': { 'index': 2, 'type': 'table', 'tablename': 'RejectReason', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'collection'},
				                   ],
				                 },
			}, 
		}, 
		'VikingDoneForDay': {
			'id': 79, 
			'version': 6, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'orderId':                 { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'exchangeOrderId':         { 'index': 2, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'quantityRemaining':       { 'index': 3, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executedQuantity':        { 'index': 4, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'applicationStripe':       { 'index': 5, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '18'},
				                             ],
				                           },
				'prevExchangeOrderId':     { 'index': 6, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '32'},
				                             ],
				                           },
				'orderVersion':            { 'index': 7, 'type': 'uint', }, 
				'destinationMembershipId': { 'index': 8, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'rejectReasons':           { 'index': 9, 'type': 'table', 'tablename': 'RejectReason', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'flowSpecificCanada':      { 'index': 10, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'cancelledQuantity':       { 'index': 11, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
			}, 
		}, 
		'VikingExecution': {
			'id': 53, 
			'version': 41, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':                { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'quantity':                     { 'index': 1, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'buySell':                      { 'index': 2, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'creatorId':                    { 'index': 3, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                  'meta-fields': [
					                              {'field': 'deprecated' , 'value' : 'true'},
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'orderId':                      { 'index': 4, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'executionPrice':               { 'index': 5, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'settlementCurrency':           { 'index': 6, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '3'},
				                                  ],
				                                },
				'settlementDateCalcMethod':     { 'index': 7, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'exchangeExecutionId':          { 'index': 8, 'type': 'string', }, 
				'settlementDate':               { 'index': 9, 'type': 'int', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                  ],
				                                },
				'executionTime':                { 'index': 10, 'type': 'int', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                  ],
				                                },
				'exchangeOrderId':              { 'index': 11, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
				'counterPartyId':               { 'index': 12, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'settlementCalendar':           { 'index': 13, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '16'},
				                                  ],
				                                },
				'executionCapacity':            { 'index': 14, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionVenue':               { 'index': 15, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '16'},
				                                  ],
				                                },
				'executionTransactionType':     { 'index': 16, 'type': 'ubyte', 'enum': 'OmExecutionTransactionType', }, 
				'productSynonyms':              { 'index': 17, 'type': 'table', 'tablename': 'ProductSynonym', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'executionType':                { 'index': 18, 'type': 'ubyte', 'enum': 'OmExecutionType', }, 
				'prevExchangeOrderId':          { 'index': 19, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '32'},
				                                  ],
				                                },
				'executionTimeLocal':           { 'index': 20, 'type': 'int', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                  ],
				                                },
				'orderVersion':                 { 'index': 21, 'type': 'uint', }, 
				'executionSubVenue':            { 'index': 22, 'type': 'string', }, 
				'isExecFromAuction':            { 'index': 23, 'type': 'bool', }, 
				'isExecFromDarkOrder':          { 'index': 24, 'type': 'bool', }, 
				'liquidityIndicator':           { 'index': 25, 'type': 'ubyte', 'enum': 'OmLiquidityIndicatorType', }, 
				'accounts':                     { 'index': 26, 'type': 'table', 'tablename': 'Account', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'clearingMemberId':             { 'index': 27, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '16'},
				                                  ],
				                                },
				'vikingExecutionId':            { 'index': 28, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '100'},
				                                  ],
				                                },
				'destinationMembershipId':      { 'index': 29, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '30'},
				                                  ],
				                                },
				'executedQuantity':             { 'index': 30, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'sellShort':                    { 'index': 31, 'type': 'bool', }, 
				'executionLastMarket':          { 'index': 32, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '16'},
				                                  ],
				                                },
				'nyseBillingIndicator':         { 'index': 33, 'type': 'ubyte', 'enum': 'OmNyseBillingIndicator', }, 
				'oldVikingExecutionId':         { 'index': 34, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '100'},
				                                  ],
				                                },
				'executionSession':             { 'index': 35, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'brokerId':                     { 'index': 36, 'type': 'string', }, 
				'tradeReportingType':           { 'index': 37, 'type': 'ubyte', 'enum': 'OmTradeReportingType', }, 
				'tradeReportingExecutionType':  { 'index': 38, 'type': 'ubyte', 'enum': 'OmTradeReportingExecutionType', }, 
				'executionReason':              { 'index': 39, 'type': 'ubyte', 'enum': 'OmExecutionReason', }, 
				'exchangeBillingCode':          { 'index': 40, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '7'},
				                                  ],
				                                },
				'exchangeAccessFee':            { 'index': 41, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'executionTimeMicrosecond':     { 'index': 42, 'type': 'int', }, 
				'isEnhancedLimitOrder':         { 'index': 43, 'type': 'bool', }, 
				'isSpecialLimitOrder':          { 'index': 44, 'type': 'bool', }, 
				'sellShortArbitrage':           { 'index': 45, 'type': 'bool', }, 
				'sellShortCover':               { 'index': 46, 'type': 'bool', }, 
				'sellShortCross':               { 'index': 47, 'type': 'bool', }, 
				'exchangeMemberId':             { 'index': 48, 'type': 'string', }, 
				'contractMultiplier':           { 'index': 49, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'traderComment':                { 'index': 50, 'type': 'table', 'tablename': 'Comment', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'exchangeLoginId':              { 'index': 51, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '50'},
				                                  ],
				                                },
				'sellShortExempt':              { 'index': 52, 'type': 'bool', }, 
				'whiteLabelDataId':             { 'index': 53, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '20'},
				                                  ],
				                                },
				'doNotBook':                    { 'index': 54, 'type': 'bool', }, 
				'flowSpecificCanada':           { 'index': 55, 'type': 'table', 'tablename': 'FlowSpecificCanada', # FIELD IS OBSOLETE
				                                  'meta-fields': [
					                              {'field': 'obsolete' , 'value' : 'true'},
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'exchangeExecutionSecondaryId': { 'index': 56, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '32'},
				                                  ],
				                                },
				'execFlowSpecificCanada':       { 'index': 57, 'type': 'table', 'tablename': 'ExecFlowSpecificCanada', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'crossMatchingId':              { 'index': 58, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '30'},
				                                  ],
				                                },
				'executionCurrency':            { 'index': 59, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '3'},
				                                  ],
				                                },
				'isLateTrade':                  { 'index': 60, 'type': 'bool', }, 
				'charges':                      { 'index': 61, 'type': 'table', 'tablename': 'Charge', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'clearingDate':                 { 'index': 62, 'type': 'int', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                  ],
				                                },
				'exchangeOrderSecondaryId':     { 'index': 63, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '32'},
				                                  ],
				                                },
				'australiaTradeConditionCode':  { 'index': 64, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                  'meta-fields': [
					                              {'field': 'deprecated' , 'value' : 'true'},
					                              {'field': 'maxStringLength' , 'value' : '8'},
				                                  ],
				                                },
				'executionCancelType':          { 'index': 65, 'type': 'ubyte', 'enum': 'OmExecutionCancelType', }, 
				'exchangeAccount':              { 'index': 66, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '50'},
				                                  ],
				                                },
				'referenceCharges':             { 'index': 67, 'type': 'table', 'tablename': 'Charge', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'flowSpecificSEF':              { 'index': 68, 'type': 'table', 'tablename': 'FlowSpecificSEF', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'generatedExternalKey':         { 'index': 69, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
			}, 
		}, 
		'VikingExecutionLeg': {
			'id': 605, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'quantity':            { 'index': 0, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'productSynonyms':     { 'index': 1, 'type': 'table', 'tablename': 'ProductSynonym', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                         ],
				                       },
				'buySell':             { 'index': 2, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'executionPrice':      { 'index': 3, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'exchangeExecutionId': { 'index': 4, 'type': 'string', }, 
			}, 
		}, 
		'VikingExecutionNotification': {
			'id': 172, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'productSynonyms':          { 'index': 0, 'type': 'table', 'tablename': 'ProductSynonym', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'orderId':                  { 'index': 1, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'quantity':                 { 'index': 2, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'buySell':                  { 'index': 3, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'executionPrice':           { 'index': 4, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'exchangeExecutionId':      { 'index': 5, 'type': 'string', }, 
				'counterPartyId':           { 'index': 6, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'executionVenue':           { 'index': 7, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '16'},
				                              ],
				                            },
				'executionTime':            { 'index': 8, 'type': 'int', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'datetime'},
				                              ],
				                            },
				'exchangeOrderId':          { 'index': 9, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '64'},
				                              ],
				                            },
				'vikingOrderId':            { 'index': 10, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'traderExchangeId':         { 'index': 11, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '30'},
				                              ],
				                            },
				'executionCapacity':        { 'index': 12, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionCurrency':        { 'index': 13, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '3'},
				                              ],
				                            },
				'senderCompID':             { 'index': 14, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '128'},
				                              ],
				                            },
				'tradeId':                  { 'index': 15, 'type': 'string', }, 
				'matchId':                  { 'index': 16, 'type': 'string', }, 
				'productIdMarket':          { 'index': 17, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '4'},
				                              ],
				                            },
				'executionType':            { 'index': 18, 'type': 'ubyte', 'enum': 'OmExecutionType', }, 
				'executionTransactionType': { 'index': 19, 'type': 'ubyte', 'enum': 'OmExecutionTransactionType', }, 
				'generatedExternalKey':     { 'index': 20, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '64'},
				                              ],
				                            },
			}, 
		}, 
		'VikingExerciseAssignment': {
			'id': 303, 
			'version': 6, 
			'publishable': 'true', 
			'columns': {
				'messageId':           { 'index': 0, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '64'},
				                         ],
				                       },
				'receivedTime':        { 'index': 1, 'type': 'int', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'datetime'},
				                         ],
				                       },
				'transactionType':     { 'index': 2, 'type': 'string', }, 
				'eventType':           { 'index': 3, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'countryCode':         { 'index': 4, 'type': 'string', }, 
				'exchangeCode':        { 'index': 5, 'type': 'string', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
				                         ],
				                       },
				'contractType':        { 'index': 6, 'type': 'string', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
				                         ],
				                       },
				'productSynonyms':     { 'index': 7, 'type': 'table', 'tablename': 'ProductSynonym', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
					                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                         ],
				                       },
				'strikePrice':         { 'index': 8, 'type': 'double', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'putCall':             { 'index': 9, 'type': 'ubyte', 'enum': 'OmPutCall', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
				                         ],
				                       },
				'expiry':              { 'index': 10, 'type': 'int', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
					                     {'field': 'dictionaryType' , 'value' : 'date'},
				                         ],
				                       },
				'transactionId':       { 'index': 11, 'type': 'string', }, 
				'accountId':           { 'index': 12, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '50'},
				                         ],
				                       },
				'accountTypeStr':      { 'index': 13, 'type': 'string', }, 
				'quantity':            { 'index': 14, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'executionTime':       { 'index': 15, 'type': 'int', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'datetime'},
				                         ],
				                       },
				'clearingDate':        { 'index': 16, 'type': 'int', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
					                     {'field': 'dictionaryType' , 'value' : 'datetime'},
				                         ],
				                       },
				'executingMemberId':   { 'index': 17, 'type': 'string', }, 
				'clearingMemberId':    { 'index': 18, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '16'},
				                         ],
				                       },
				'endOfDay':            { 'index': 19, 'type': 'bool', }, 
				'contractVersion':     { 'index': 20, 'type': 'string', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
				                         ],
				                       },
				'clearingDateStr':     { 'index': 21, 'type': 'string', }, 
				'flexTrade':           { 'index': 22, 'type': 'bool', }, 
				'clearingProductList': { 'index': 23, 'type': 'table', 'tablename': 'ClearingProduct', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                         ],
				                       },
				'status':              { 'index': 24, 'type': 'ubyte', 'enum': 'OmTradeStatus', }, 
			}, 
		}, 
		'VikingForceCancelOrderCommand': {
			'id': 308, 
			'version': 5, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'orderId':                 { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'exchangeOrderId':         { 'index': 2, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'quantityRemaining':       { 'index': 3, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executedQuantity':        { 'index': 4, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'applicationStripe':       { 'index': 5, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '18'},
				                             ],
				                           },
				'prevExchangeOrderId':     { 'index': 6, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '32'},
				                             ],
				                           },
				'orderVersion':            { 'index': 7, 'type': 'uint', }, 
				'cancelledQuantity':       { 'index': 8, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'destinationMembershipId': { 'index': 9, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'cancelNewVersion':        { 'index': 10, 'type': 'uint', }, 
				'rejectingSystem':         { 'index': 11, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                             'meta-fields': [
					                         {'field': 'deprecated' , 'value' : 'true'},
				                             ],
				                           },
				'rejectReasons':           { 'index': 12, 'type': 'table', 'tablename': 'RejectReason', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'flowSpecificCanada':      { 'index': 13, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingInstruction': {
			'id': 301, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'instructionId':           { 'index': 0, 'type': 'string', }, 
				'tradeType':               { 'index': 1, 'type': 'string', }, 
				'tradeSubType':            { 'index': 2, 'type': 'string', }, 
				'feeCode':                 { 'index': 3, 'type': 'string', }, 
				'tradeDate':               { 'index': 4, 'type': 'string', }, 
				'clearingDate':            { 'index': 5, 'type': 'int', # FIELD IS OBSOLETE
				                             'meta-fields': [
					                         {'field': 'obsolete' , 'value' : 'true'},
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'updateTimestamp':         { 'index': 6, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'executionPrice':          { 'index': 7, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'averagePrice':            { 'index': 8, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'priceQuote':              { 'index': 9, 'type': 'string', }, 
				'historical':              { 'index': 10, 'type': 'bool', }, 
				'exchangeCode':            { 'index': 11, 'type': 'string', }, 
				'traderExchangeId':        { 'index': 12, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'executingMemberId':       { 'index': 13, 'type': 'string', }, 
				'floorMemberId':           { 'index': 14, 'type': 'string', }, 
				'userName':                { 'index': 15, 'type': 'string', }, 
				'productSynonyms':         { 'index': 16, 'type': 'table', 'tablename': 'ProductSynonym', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'strikePrice':             { 'index': 17, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'contractType':            { 'index': 18, 'type': 'string', }, 
				'putCall':                 { 'index': 19, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'transactionTime':         { 'index': 20, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'tradeInstructionDetails': { 'index': 21, 'type': 'table', 'tablename': 'VikingTradeInstructionDetail', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'clearingDateStr':         { 'index': 22, 'type': 'string', }, 
				'clearingMemberId':        { 'index': 23, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '16'},
				                             ],
				                           },
				'oppositeMemberId':        { 'index': 24, 'type': 'string', }, 
				'tradeId':                 { 'index': 25, 'type': 'string', }, 
				'tradeSubId':              { 'index': 26, 'type': 'string', }, 
				'expiry':                  { 'index': 27, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'date'},
				                             ],
				                           },
				'buySell':                 { 'index': 28, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'limitPrice':              { 'index': 29, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'quantity':                { 'index': 30, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'accountId':               { 'index': 31, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '50'},
				                             ],
				                           },
				'accountTypeStr':          { 'index': 32, 'type': 'string', }, 
				'originCode':              { 'index': 33, 'type': 'string', }, 
				'ctiCode':                 { 'index': 34, 'type': 'string', }, 
				'positionOpenClose':       { 'index': 35, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
			}, 
		}, 
		'VikingInstructionAck': {
			'id': 302, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'instructionId':           { 'index': 0, 'type': 'string', }, 
				'clearingInstruction':     { 'index': 1, 'type': 'ubyte', 'enum': 'OmClearingInstructionType', }, 
				'rejectingSystem':         { 'index': 2, 'type': 'ubyte', 'enum': 'OmRejectingSystem', }, 
				'errorCode':               { 'index': 3, 'type': 'string', }, 
				'rejectReasonText':        { 'index': 4, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '256'},
				                             ],
				                           },
				'tradeDate':               { 'index': 5, 'type': 'string', }, 
				'eventType':               { 'index': 6, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'tradeInstructionDetails': { 'index': 7, 'type': 'table', 'tablename': 'VikingTradeInstructionDetail', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingInstrumentStatus': {
			'id': 86, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'orderId':          { 'index': 0, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '29'},
				                      ],
				                    },
				'currency':         { 'index': 1, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '3'},
				                      ],
				                    },
				'productId':        { 'index': 2, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '100'},
				                      ],
				                    },
				'rejectReasonText': { 'index': 3, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                      'meta-fields': [
					                  {'field': 'deprecated' , 'value' : 'true'},
					                  {'field': 'maxStringLength' , 'value' : '256'},
				                      ],
				                    },
				'statusCode':       { 'index': 4, 'type': 'int', }, 
				'eventType':        { 'index': 5, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'updateTimestamp':  { 'index': 6, 'type': 'int', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'datetime'},
				                      ],
				                    },
				'vikingMarketId':   { 'index': 7, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '16'},
				                      ],
				                    },
				'commandHeader':    { 'index': 8, 'type': 'table', 'tablename': 'CommandHeader', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                      ],
				                    },
				'rejectingSystem':  { 'index': 9, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                      'meta-fields': [
					                  {'field': 'deprecated' , 'value' : 'true'},
				                      ],
				                    },
				'rejectReasons':    { 'index': 10, 'type': 'table', 'tablename': 'RejectReason', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                      ],
				                    },
			}, 
		}, 
		'VikingInstrumentStatusList': {
			'id': 91, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'instrumentStatusList':    { 'index': 0, 'type': 'table', 'tablename': 'VikingInstrumentStatus', # FIELD IS OBSOLETE
				                             'meta-fields': [
					                         {'field': 'obsolete' , 'value' : 'true'},
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'instrumentStatusListNew': { 'index': 1, 'type': 'table', 'tablename': 'VikingInstrumentStatus', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'commandHeader':           { 'index': 2, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingMassCancelRequest': {
			'id': 307, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'productIdMarket': { 'index': 0, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '4'},
				                     ],
				                   },
				'lineId':          { 'index': 1, 'type': 'string', }, 
				'commandHeader':   { 'index': 2, 'type': 'table', 'tablename': 'CommandHeader', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'struct'},
				                     ],
				                   },
				'includeGtcs':     { 'index': 3, 'type': 'bool', }, 
				'productSynonyms': { 'index': 4, 'type': 'table', 'tablename': 'ProductSynonym', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                     ],
				                   },
			}, 
		}, 
		'VikingMessageStore': {
			'id': 325, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sequenceNumber':        { 'index': 0, 'type': 'int', }, 
				'messageData':           { 'index': 1, 'type': 'binary', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'blob'},
				                           ],
				                         },
				'messageTypeIdentifier': { 'index': 2, 'type': 'uint', }, 
				'messageFormat':         { 'index': 3, 'type': 'ubyte', 'enum': 'OmMessageFormat', }, 
				'vikingOrderId':         { 'index': 4, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'lineHandlerSessionId':  { 'index': 5, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
			}, 
		}, 
		'VikingMultiLegExecution': {
			'id': 178, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':            { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                              ],
				                            },
				'quantity':                 { 'index': 1, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'productSynonyms':          { 'index': 2, 'type': 'table', 'tablename': 'ProductSynonym', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'buySell':                  { 'index': 3, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'executionPrice':           { 'index': 4, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'settlementCurrency':       { 'index': 5, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '3'},
				                              ],
				                            },
				'settlementCalendar':       { 'index': 6, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '16'},
				                              ],
				                            },
				'orderId':                  { 'index': 7, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'exchangeOrderId':          { 'index': 8, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '64'},
				                              ],
				                            },
				'exchangeExecutionId':      { 'index': 9, 'type': 'string', }, 
				'vikingExecutionId':        { 'index': 10, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '100'},
				                              ],
				                            },
				'executionCapacity':        { 'index': 11, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionVenue':           { 'index': 12, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '16'},
				                              ],
				                            },
				'executionSubVenue':        { 'index': 13, 'type': 'string', }, 
				'executionTransactionType': { 'index': 14, 'type': 'ubyte', 'enum': 'OmExecutionTransactionType', }, 
				'executionTime':            { 'index': 15, 'type': 'int', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'datetime'},
				                              ],
				                            },
				'executionSession':         { 'index': 16, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'vikingExecutionLegs':      { 'index': 17, 'type': 'table', 'tablename': 'VikingExecutionLeg', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
			}, 
		}, 
		'VikingMultiLegOrder': {
			'id': 165, 
			'version': 15, 
			'publishable': 'true', 
			'columns': {
				'orderId':                        { 'index': 0, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '29'},
				                                    ],
				                                  },
				'orderVersion':                   { 'index': 1, 'type': 'uint', }, 
				'orderType':                      { 'index': 2, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'limitPrice':                     { 'index': 3, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'quantity':                       { 'index': 4, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'timeInForce':                    { 'index': 5, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'expirationDateTime':             { 'index': 6, 'type': 'int', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                    ],
				                                  },
				'allOrNone':                      { 'index': 7, 'type': 'bool', }, 
				'notHeld':                        { 'index': 8, 'type': 'bool', }, 
				'destinationMembershipId':        { 'index': 9, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '30'},
				                                    ],
				                                  },
				'counterPartyId':                 { 'index': 10, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '29'},
				                                    ],
				                                  },
				'consolidatedRegulatoryCode':     { 'index': 11, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'vikingOrderLegs':                { 'index': 12, 'type': 'table', 'tablename': 'VikingOrderLeg', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'commandHeader':                  { 'index': 13, 'type': 'table', 'tablename': 'CommandHeader', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                    ],
				                                  },
				'facilitationPercent':            { 'index': 14, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'facilitationPrice':              { 'index': 15, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'vikingDestinationId':            { 'index': 16, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '20'},
				                                    ],
				                                  },
				'crossMatchingId':                { 'index': 17, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '30'},
				                                    ],
				                                  },
				'vikingMarketId':                 { 'index': 18, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '16'},
				                                    ],
				                                  },
				'vikingMarketIdType':             { 'index': 19, 'type': 'ubyte', 'enum': 'OmVikingMarketIdType', }, 
				'orderOriginCode':                { 'index': 20, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '1'},
				                                    ],
				                                  },
				'marketMakerId':                  { 'index': 21, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'marketMakerOCCClearingAccount':  { 'index': 22, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'isATSTrade':                     { 'index': 23, 'type': 'bool', }, 
				'crossRequestReason':             { 'index': 24, 'type': 'ubyte', 'enum': 'OmCrossRequestReason', }, 
				'facilitationStepUpPrice':        { 'index': 25, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'clearingFirm':                   { 'index': 26, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'preferredMarketMakerId':         { 'index': 27, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'isDirectedOrderWithAuction':     { 'index': 28, 'type': 'bool', }, 
				'cancelNewVersion':               { 'index': 29, 'type': 'uint', }, 
				'vikingDestinationSubId':         { 'index': 30, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '20'},
				                                    ],
				                                  },
				'australiaTradeConditionCode':    { 'index': 31, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                    'meta-fields': [
					                                {'field': 'deprecated' , 'value' : 'true'},
					                                {'field': 'maxStringLength' , 'value' : '8'},
				                                    ],
				                                  },
				'marketMakerExchangeRepresented': { 'index': 32, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '4'},
				                                    ],
				                                  },
				'tradeAgreementDate':             { 'index': 33, 'type': 'int', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                    ],
				                                  },
			}, 
		}, 
		'VikingNothingDone': {
			'id': 78, 
			'version': 3, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':       { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'orderId':             { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'exchangeOrderId':     { 'index': 2, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '64'},
				                         ],
				                       },
				'quantityRemaining':   { 'index': 3, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'executedQuantity':    { 'index': 4, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'applicationStripe':   { 'index': 5, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '18'},
				                         ],
				                       },
				'prevExchangeOrderId': { 'index': 6, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '32'},
				                         ],
				                       },
				'orderVersion':        { 'index': 7, 'type': 'uint', }, 
				'flowSpecificCanada':  { 'index': 8, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
			}, 
		}, 
		'VikingOrder': {
			'id': 34, 
			'version': 82, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada,flowSpecificAustralia'},
			],
			'columns': {
				'commandHeader':                                  { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'orderId':                                        { 'index': 1, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'orderType':                                      { 'index': 2, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'quantity':                                       { 'index': 3, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'buySell':                                        { 'index': 4, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'timeInForce':                                    { 'index': 5, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'expirationDateTime':                             { 'index': 6, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'allOrNone':                                      { 'index': 7, 'type': 'bool', }, 
				'orderCapacity':                                  { 'index': 8, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':                                     { 'index': 9, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':                                  { 'index': 10, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'limitPrice':                                     { 'index': 11, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'stopPrice':                                      { 'index': 12, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'executionCurrency':                              { 'index': 13, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '3'},
				                                                    ],
				                                                  },
				'maxTrancheSize':                                 { 'index': 14, 'type': 'double', 'aliases': ['displaySize'], 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'traderExchangeId':                               { 'index': 15, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'applicationStripe':                              { 'index': 16, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '18'},
				                                                    ],
				                                                  },
				'productSynonyms':                                { 'index': 17, 'type': 'table', 'tablename': 'ProductSynonym', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'vikingMarketId':                                 { 'index': 18, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'vikingMarketIdType':                             { 'index': 19, 'type': 'ubyte', 'enum': 'OmVikingMarketIdType', }, 
				'ignoreAggressionCheck':                          { 'index': 20, 'type': 'bool', }, 
				'ignoreOddLotCheck':                              { 'index': 21, 'type': 'bool', }, 
				'accountSynonym':                                 { 'index': 22, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'orderVersion':                                   { 'index': 23, 'type': 'uint', }, 
				'sellShort':                                      { 'index': 24, 'type': 'bool', }, 
				'sellShortExempt':                                { 'index': 25, 'type': 'bool', }, 
				'priceStabilization':                             { 'index': 26, 'type': 'bool', }, 
				'whenIssued':                                     { 'index': 27, 'type': 'bool', }, 
				'marginType':                                     { 'index': 28, 'type': 'ubyte', 'enum': 'OmMarginType', }, 
				'vikingSubMarketId':                              { 'index': 29, 'type': 'string', }, 
				'lotSize':                                        { 'index': 30, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'pegType':                                        { 'index': 31, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffset':                                      { 'index': 32, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'pegOffsetType':                                  { 'index': 33, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'pegScope':                                       { 'index': 34, 'type': 'ubyte', 'enum': 'OmPegScopeType', }, 
				'discretionaryReferencePriceType':                { 'index': 35, 'type': 'ubyte', 'enum': 'OmDiscretionaryReferencePriceType', }, 
				'discretionaryOffset':                            { 'index': 36, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'discretionaryOffsetType':                        { 'index': 37, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'orderbookVisibility':                            { 'index': 38, 'type': 'ubyte', 'enum': 'OmOrderbookVisibilityType', }, 
				'clearingExchange':                               { 'index': 39, 'type': 'string', }, 
				'offsetDirectionType':                            { 'index': 40, 'type': 'ubyte', 'enum': 'OmOffsetDirectionType', }, 
				'tradingPhase':                                   { 'index': 41, 'type': 'ubyte', 'enum': 'OmTradingPhase', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'routingStrategy':                                { 'index': 42, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'doNotIncrease':                                  { 'index': 43, 'type': 'bool', }, 
				'doNotReduce':                                    { 'index': 44, 'type': 'bool', }, 
				'notHeld':                                        { 'index': 45, 'type': 'bool', }, 
				'interMarketSweep':                               { 'index': 46, 'type': 'bool', }, 
				'destinationMarketOnly':                          { 'index': 47, 'type': 'bool', }, 
				'cancelNewVersion':                               { 'index': 48, 'type': 'uint', }, 
				'destinationMembershipId':                        { 'index': 49, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'buyToCover':                                     { 'index': 50, 'type': 'bool', }, 
				'consolidatedRegulatoryCode':                     { 'index': 51, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'isOddLot':                                       { 'index': 52, 'type': 'bool', }, 
				'marketProtection':                               { 'index': 53, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'marketProtectionType':                           { 'index': 54, 'type': 'ubyte', 'enum': 'OmMarketProtectionType', }, 
				'isStrategyOrder':                                { 'index': 55, 'type': 'bool', }, 
				'partOfProgram':                                  { 'index': 56, 'type': 'bool', }, 
				'arbitrageStrategy':                              { 'index': 57, 'type': 'ubyte', 'enum': 'OmArbitrageStrategy', }, 
				'algorithmicIndicator':                           { 'index': 58, 'type': 'ubyte', 'enum': 'OmAlgorithmicIndicator', }, 
				'trancheSizeDisplayRange':                        { 'index': 59, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'ignoreImbalanceCheck':                           { 'index': 60, 'type': 'bool', }, 
				'startDateTime':                                  { 'index': 61, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'minExecutableQuantity':                          { 'index': 62, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'vikingDestinationId':                            { 'index': 63, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'crossConsent':                                   { 'index': 64, 'type': 'ubyte', 'enum': 'OmCrossingOption', }, 
				'interventionConsent':                            { 'index': 65, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
				'contractMaturityMonth':                          { 'index': 66, 'type': 'int', }, 
				'contractMaturityYear':                           { 'index': 67, 'type': 'int', }, 
				'isInterCommodityStrategy':                       { 'index': 68, 'type': 'bool', }, 
				'orderCreationType':                              { 'index': 69, 'type': 'ubyte', 'enum': 'OmOrderCreationType', }, 
				'crossRequestReason':                             { 'index': 70, 'type': 'ubyte', 'enum': 'OmCrossRequestReason', }, 
				'counterPartyId':                                 { 'index': 71, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'crossMatchingId':                                { 'index': 72, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'isEnhancedLimitOrder':                           { 'index': 73, 'type': 'bool', }, 
				'isSpecialLimitOrder':                            { 'index': 74, 'type': 'bool', }, 
				'sellShortArbitrage':                             { 'index': 75, 'type': 'bool', }, 
				'sellShortCover':                                 { 'index': 76, 'type': 'bool', }, 
				'sellShortCross':                                 { 'index': 77, 'type': 'bool', }, 
				'minDiscretionaryQuantity':                       { 'index': 78, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'traderComment':                                  { 'index': 79, 'type': 'table', 'tablename': 'Comment', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'brokerBillingType':                              { 'index': 80, 'type': 'ubyte', 'enum': 'OmBrokerBillingType', }, 
				'isMarketMakingOrder':                            { 'index': 81, 'type': 'bool', }, 
				'businessUnit':                                   { 'index': 82, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'counterpartyTraderId':                           { 'index': 83, 'type': 'string', }, 
				'primaryAccountGsEntity':                         { 'index': 84, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '9'},
				                                                    ],
				                                                  },
				'productInstrumentType':                          { 'index': 85, 'type': 'ubyte', 'enum': 'OmProductInstrumentType', }, 
				'contractMaturityDay':                            { 'index': 86, 'type': 'int', }, 
				'putCall':                                        { 'index': 87, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'positionOpenClose':                              { 'index': 88, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'strikePrice':                                    { 'index': 89, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'facilitationPercent':                            { 'index': 90, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'isImbalanceOffsetOnly':                          { 'index': 91, 'type': 'bool', }, 
				'contractMultiplier':                             { 'index': 92, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'sourceBusinessUnit':                             { 'index': 93, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'marketSession':                                  { 'index': 94, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'facilitationPrice':                              { 'index': 95, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'commission':                                     { 'index': 96, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'investorId':                                     { 'index': 97, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'exchangeAccount':                                { 'index': 98, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'isMinimumGuaranteedFillEligible':                { 'index': 99, 'type': 'bool', }, 
				'tsxRegulationCode':                              { 'index': 100, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '2'},
				                                                    ],
				                                                  },
				'clientMembershipId':                             { 'index': 101, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'allocationOrderId':                              { 'index': 102, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'clientsReference':                               { 'index': 103, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'customerName':                                   { 'index': 104, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'owner':                                          { 'index': 105, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'hideMembershipIdAtDestination':                  { 'index': 106, 'type': 'bool', }, 
				'flowSpecificCanada':                             { 'index': 107, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'whiteLabelDataId':                               { 'index': 108, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'vikingDestinationSubId':                         { 'index': 109, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'provideLiquidityOnly':                           { 'index': 110, 'type': 'bool', }, 
				'facilitationPositionOpenClose':                  { 'index': 111, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'orderOriginCode':                                { 'index': 112, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '1'},
				                                                    ],
				                                                  },
				'marketMakerId':                                  { 'index': 113, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'marketMakerOCCClearingAccount':                  { 'index': 114, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'marketMakerExchangeRepresented':                 { 'index': 115, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '4'},
				                                                    ],
				                                                  },
				'isSolicitedOrder':                               { 'index': 116, 'type': 'bool', }, 
				'targetQuoteId':                                  { 'index': 117, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'isTradingAutomationGenerated':                   { 'index': 118, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'senderLocation':                                 { 'index': 119, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'isLateTrade':                                    { 'index': 120, 'type': 'bool', }, 
				'destinationMembershipPassword':                  { 'index': 121, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'originatorIpAddress':                            { 'index': 122, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'settlementDateCalcMethod':                       { 'index': 123, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'settlementDate':                                 { 'index': 124, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'tradingAlgorithm':                               { 'index': 125, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'tradingAlgorithmParameters':                     { 'index': 126, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '1024'},
				                                                    ],
				                                                  },
				'contractForDifferences':                         { 'index': 127, 'type': 'bool', }, 
				'smartRouteConsent':                              { 'index': 128, 'type': 'ubyte', 'enum': 'OmSmartRoutingOption', }, 
				'isLateAuctionOrder':                             { 'index': 129, 'type': 'bool', }, 
				'isWorkupOrder':                                  { 'index': 130, 'type': 'bool', }, 
				'isCDSPassiveOrder':                              { 'index': 131, 'type': 'bool', }, 
				'workupSessionId':                                { 'index': 132, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '12'},
				                                                    ],
				                                                  },
				'smartRoutedIndicator':                           { 'index': 133, 'type': 'bool', }, 
				'isATSTrade':                                     { 'index': 134, 'type': 'bool', }, 
				'isGsiOrderMarkingTowerStyle':                    { 'index': 135, 'type': 'bool', }, 
				'facilitationStepUpPrice':                        { 'index': 136, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'ctiCode':                                        { 'index': 137, 'type': 'string', }, 
				'clearingFirm':                                   { 'index': 138, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'preferredMarketMakerId':                         { 'index': 139, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'isDirectedOrderWithAuction':                     { 'index': 140, 'type': 'bool', }, 
				'settlementBoardOverride':                        { 'index': 141, 'type': 'ubyte', 'enum': 'OmSettlementBoardOverride', }, 
				'ignoreExchangePriceRangeCheck':                  { 'index': 142, 'type': 'bool', }, 
				'exchangeResendEligible':                         { 'index': 143, 'type': 'bool', }, 
				'koreaReportType':                                { 'index': 144, 'type': 'ubyte', 'enum': 'OmKoreaReportType', }, 
				'declarationType':                                { 'index': 145, 'type': 'ubyte', 'enum': 'OmDeclarationType', }, 
				'vikingNotionalCheckPriceCurrency':               { 'index': 146, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '3'},
				                                                    ],
				                                                  },
				'vikingNotionalCheckPrice':                       { 'index': 147, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'isDestinationIndicationOfInterestMatchingOrder': { 'index': 148, 'type': 'bool', }, 
				'nearLegPricePreference':                         { 'index': 149, 'type': 'ubyte', 'enum': 'OmNearLegPricePreference', }, 
				'externalTradingAlgorithmDetails':                { 'index': 150, 'type': 'table', 'tablename': 'ExternalTradingAlgorithmDetails', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isCorporateBuyBackOrder':                        { 'index': 151, 'type': 'bool', }, 
				'australiaTradeConditionCode':                    { 'index': 152, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '8'},
				                                                    ],
				                                                  },
				'iosAccountExchangeCrossReference':               { 'index': 153, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'basisOfQuotation':                               { 'index': 154, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '6'},
				                                                    ],
				                                                  },
				'tradeAgreementDate':                             { 'index': 155, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'isAustraliaUndisclosedOrder':                    { 'index': 156, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'destinationAllowedBrokers':                      { 'index': 157, 'type': 'table', 'tablename': 'BrokerInfo', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'clientStarId':                                   { 'index': 158, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'originatorMacAddress':                           { 'index': 159, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'executeSynthetically':                           { 'index': 160, 'type': 'bool', }, 
				'australiaUnintentionalCrossPreventionKey':       { 'index': 161, 'type': 'int', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'exchangeAlgorithmId':                            { 'index': 162, 'type': 'int', }, 
				'flowSpecificAustralia':                          { 'index': 163, 'type': 'table', 'tablename': 'FlowSpecificAustralia', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isKoreaPostMarginAccountOrder':                  { 'index': 164, 'type': 'bool', }, 
				'exchangeSubAccount':                             { 'index': 165, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'selfMatchPreventionId':                          { 'index': 166, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '12'},
				                                                    ],
				                                                  },
				'flowSpecificSEF':                                { 'index': 167, 'type': 'table', 'tablename': 'FlowSpecificSEF', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'asiaFflFlowGroup':                               { 'index': 168, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'hedgeStrategy':                                  { 'index': 169, 'type': 'ubyte', 'enum': 'OmHedgeStrategy', }, 
				'orderGroupData':                                 { 'index': 170, 'type': 'table', 'tablename': 'OrderGroupData', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isBlockOrder':                                   { 'index': 171, 'type': 'bool', }, 
			}, 
		}, 
		'VikingOrderAccept': {
			'id': 33, 
			'version': 11, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':                { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'orderId':                      { 'index': 1, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'exchangeOrderId':              { 'index': 2, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
				'quantityRemaining':            { 'index': 3, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'executedQuantity':             { 'index': 4, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'applicationStripe':            { 'index': 5, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '18'},
				                                  ],
				                                },
				'prevExchangeOrderId':          { 'index': 6, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '32'},
				                                  ],
				                                },
				'orderVersion':                 { 'index': 7, 'type': 'uint', }, 
				'lastVikingId':                 { 'index': 8, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
				'vikingLineId':                 { 'index': 9, 'type': 'string', 'aliases': ['vikingLHId'], 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
				'destinationMembershipId':      { 'index': 10, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '30'},
				                                  ],
				                                },
				'destinationComplianceOrderId': { 'index': 11, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '30'},
				                                  ],
				                                },
				'exchangeLoginId':              { 'index': 12, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '50'},
				                                  ],
				                                },
				'exchangeQuantity':             { 'index': 13, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'flowSpecificCanada':           { 'index': 14, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'quantity':                     { 'index': 15, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'exchangeOrderSecondaryId':     { 'index': 16, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '32'},
				                                  ],
				                                },
			}, 
		}, 
		'VikingOrderAck': {
			'id': 306, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'orderId':         { 'index': 0, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '29'},
				                     ],
				                   },
				'productIdMarket': { 'index': 1, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '4'},
				                     ],
				                   },
				'lineId':          { 'index': 2, 'type': 'string', }, 
				'commandHeader':   { 'index': 3, 'type': 'table', 'tablename': 'CommandHeader', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'struct'},
				                     ],
				                   },
			}, 
		}, 
		'VikingOrderDestinationUpdate': {
			'id': 309, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'orderId':                    { 'index': 0, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'exchangeOrderId':            { 'index': 1, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '64'},
				                                ],
				                              },
				'quantityRemaining':          { 'index': 2, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'executedQuantity':           { 'index': 3, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'limitPrice':                 { 'index': 4, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'orderType':                  { 'index': 5, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'commandHeader':              { 'index': 6, 'type': 'table', 'tablename': 'CommandHeader', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
				'executedQuantityReinstated': { 'index': 7, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
			}, 
		}, 
		'VikingOrderLeg': {
			'id': 164, 
			'version': 8, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificAustralia'},
			],
			'columns': {
				'orderId':                          { 'index': 0, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '29'},
				                                      ],
				                                    },
				'buySell':                          { 'index': 1, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'sellShort':                        { 'index': 2, 'type': 'bool', }, 
				'quantity':                         { 'index': 3, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'productInstrumentType':            { 'index': 4, 'type': 'ubyte', 'enum': 'OmProductInstrumentType', }, 
				'contractMaturityDay':              { 'index': 5, 'type': 'int', }, 
				'contractMaturityMonth':            { 'index': 6, 'type': 'int', }, 
				'contractMaturityYear':             { 'index': 7, 'type': 'int', }, 
				'productSynonyms':                  { 'index': 8, 'type': 'table', 'tablename': 'ProductSynonym', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'positionOpenClose':                { 'index': 9, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'putCall':                          { 'index': 10, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'strikePrice':                      { 'index': 11, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'crossMatchingId':                  { 'index': 12, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '30'},
				                                      ],
				                                    },
				'facilitationPercent':              { 'index': 13, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'orderCapacity':                    { 'index': 14, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'isMarketMakingOrder':              { 'index': 15, 'type': 'bool', }, 
				'crossRequestReason':               { 'index': 16, 'type': 'ubyte', 'enum': 'OmCrossRequestReason', }, 
				'facilitationPositionOpenClose':    { 'index': 17, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'sellShortExempt':                  { 'index': 18, 'type': 'bool', }, 
				'accountSynonym':                   { 'index': 19, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '50'},
				                                      ],
				                                    },
				'marginType':                       { 'index': 20, 'type': 'ubyte', 'enum': 'OmMarginType', }, 
				'iosAccountExchangeCrossReference': { 'index': 21, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                      'meta-fields': [
					                                  {'field': 'deprecated' , 'value' : 'true'},
					                                  {'field': 'maxStringLength' , 'value' : '10'},
				                                      ],
				                                    },
				'lotSize':                          { 'index': 22, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'flowSpecificAustralia':            { 'index': 23, 'type': 'table', 'tablename': 'FlowSpecificAustralia', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'destinationMembershipId':          { 'index': 24, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '30'},
				                                      ],
				                                    },
			}, 
		}, 
		'VikingOrderQueueState': {
			'id': 326, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'upstreamOrderId':      { 'index': 0, 'type': 'string', }, 
				'vikingOrderState':     { 'index': 1, 'type': 'ubyte', 'enum': 'OmVikingOrderState', }, 
				'lineHandlerSessionId': { 'index': 2, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'notificationId':       { 'index': 3, 'type': 'int', }, 
			}, 
		}, 
		'VikingOrderReinstateCommand': {
			'id': 317, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':     { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'vikingRouteLookup': { 'index': 1, 'type': 'table', 'tablename': 'VikingRouteLookup', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
			}, 
		}, 
		'VikingOrderReject': {
			'id': 75, 
			'version': 6, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'orderId':                 { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'rejectingSystem':         { 'index': 2, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                             'meta-fields': [
					                         {'field': 'deprecated' , 'value' : 'true'},
				                             ],
				                           },
				'rejectReasons':           { 'index': 3, 'type': 'table', 'tablename': 'RejectReason', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'quantityRemaining':       { 'index': 4, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executedQuantity':        { 'index': 5, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'applicationStripe':       { 'index': 6, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '18'},
				                             ],
				                           },
				'prevExchangeOrderId':     { 'index': 7, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '32'},
				                             ],
				                           },
				'orderVersion':            { 'index': 8, 'type': 'uint', }, 
				'destinationMembershipId': { 'index': 9, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'lastVikingId':            { 'index': 10, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'flowSpecificCanada':      { 'index': 11, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingPersistTranData': {
			'id': 299, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'tranType':           { 'index': 0, 'type': 'int', }, 
				'vikingIdKey':        { 'index': 1, 'type': 'string', }, 
				'orderId':            { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'orderVersion':       { 'index': 3, 'type': 'uint', }, 
				'exchangeOrderId':    { 'index': 4, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '64'},
				                        ],
				                      },
				'omSvrDatastream':    { 'index': 5, 'type': 'string', }, 
				'lhSvrDatastream':    { 'index': 6, 'type': 'string', }, 
				'isGtc':              { 'index': 7, 'type': 'bool', }, 
				'expirationDate':     { 'index': 8, 'type': 'int', }, 
				'messageDataId':      { 'index': 9, 'type': 'string', }, 
				'messageData':        { 'index': 10, 'type': 'binary', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'blob'},
				                        ],
				                      },
				'messageDataTableId': { 'index': 11, 'type': 'int', }, 
				'clientDatastream':   { 'index': 12, 'type': 'string', }, 
				'clientMessageId':    { 'index': 13, 'type': 'string', }, 
			}, 
		}, 
		'VikingQuote': {
			'id': 84, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'executionCurrency': { 'index': 0, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '3'},
				                       ],
				                     },
				'eventType':         { 'index': 1, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'orderId':           { 'index': 2, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '29'},
				                       ],
				                     },
				'groupId':           { 'index': 3, 'type': 'string', }, 
				'productId':         { 'index': 4, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '100'},
				                       ],
				                     },
				'productIdType':     { 'index': 5, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'updateTimestamp':   { 'index': 6, 'type': 'int', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'datetime'},
				                       ],
				                     },
				'bidPrice':          { 'index': 7, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'askPrice':          { 'index': 8, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'bidSize':           { 'index': 9, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'askSize':           { 'index': 10, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'commandHeader':     { 'index': 11, 'type': 'table', 'tablename': 'CommandHeader', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'vikingMarketId':    { 'index': 12, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '16'},
				                       ],
				                     },
				'orderCapacity':     { 'index': 13, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'principalType':     { 'index': 14, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'traderExchangeId':  { 'index': 15, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '30'},
				                       ],
				                     },
				'quoteCancelReason': { 'index': 16, 'type': 'ubyte', 'enum': 'OmQuoteCancelReason', }, 
			}, 
		}, 
		'VikingQuoteAck': {
			'id': 87, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'orderId':         { 'index': 0, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '29'},
				                     ],
				                   },
				'groupId':         { 'index': 1, 'type': 'string', }, 
				'eventType':       { 'index': 2, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'rejectingSystem': { 'index': 3, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                     'meta-fields': [
					                 {'field': 'deprecated' , 'value' : 'true'},
				                     ],
				                   },
				'rejectReasons':   { 'index': 4, 'type': 'table', 'tablename': 'RejectReason', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                     ],
				                   },
				'updateTimestamp': { 'index': 5, 'type': 'int', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                     ],
				                   },
				'commandHeader':   { 'index': 6, 'type': 'table', 'tablename': 'CommandHeader', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'struct'},
				                     ],
				                   },
			}, 
		}, 
		'VikingRejectCancel': {
			'id': 81, 
			'version': 5, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'orderId':                 { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'rejectingSystem':         { 'index': 2, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                             'meta-fields': [
					                         {'field': 'deprecated' , 'value' : 'true'},
				                             ],
				                           },
				'rejectReasons':           { 'index': 3, 'type': 'table', 'tablename': 'RejectReason', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'quantityRemaining':       { 'index': 4, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executedQuantity':        { 'index': 5, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'applicationStripe':       { 'index': 6, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '18'},
				                             ],
				                           },
				'prevExchangeOrderId':     { 'index': 7, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '32'},
				                             ],
				                           },
				'orderVersion':            { 'index': 8, 'type': 'uint', }, 
				'destinationMembershipId': { 'index': 9, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'flowSpecificCanada':      { 'index': 10, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingRejectCorrection': {
			'id': 82, 
			'version': 5, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'orderId':                 { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'rejectingSystem':         { 'index': 2, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                             'meta-fields': [
					                         {'field': 'deprecated' , 'value' : 'true'},
				                             ],
				                           },
				'rejectReasons':           { 'index': 3, 'type': 'table', 'tablename': 'RejectReason', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'rejectReasonText':        { 'index': 4, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '256'},
				                             ],
				                           },
				'quantityRemaining':       { 'index': 5, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executedQuantity':        { 'index': 6, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'applicationStripe':       { 'index': 7, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '18'},
				                             ],
				                           },
				'prevExchangeOrderId':     { 'index': 8, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '32'},
				                             ],
				                           },
				'orderVersion':            { 'index': 9, 'type': 'uint', }, 
				'destinationMembershipId': { 'index': 10, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'flowSpecificCanada':      { 'index': 11, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingReport': {
			'id': 88, 
			'version': 6, 
			'publishable': 'true', 
			'columns': {
				'quantity':               { 'index': 0, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'buySell':                { 'index': 1, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'creatorId':              { 'index': 2, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                            'meta-fields': [
					                        {'field': 'deprecated' , 'value' : 'true'},
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'executionCurrency':      { 'index': 3, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '3'},
				                            ],
				                          },
				'eventType':              { 'index': 4, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'limitPrice':             { 'index': 5, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'reportId':               { 'index': 6, 'type': 'string', }, 
				'orderId':                { 'index': 7, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'secondaryTradeId':       { 'index': 8, 'type': 'string', }, 
				'partyId':                { 'index': 9, 'type': 'string', }, 
				'partyIdSource':          { 'index': 10, 'type': 'string', }, 
				'counterPartyId':         { 'index': 11, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'counterPartyIdSource':   { 'index': 12, 'type': 'string', }, 
				'version':                { 'index': 13, 'type': 'int', }, 
				'productId':              { 'index': 14, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '100'},
				                            ],
				                          },
				'productIdType':          { 'index': 15, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'productTicker':          { 'index': 16, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'requestedTradeMarket':   { 'index': 17, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '4'},
				                            ],
				                          },
				'marketTradeDate':        { 'index': 18, 'type': 'int', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'date'},
				                            ],
				                          },
				'systemName':             { 'index': 19, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '32'},
				                            ],
				                          },
				'executionTimeGmtOffset': { 'index': 20, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'updateTimestamp':        { 'index': 21, 'type': 'int', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'datetime'},
				                            ],
				                          },
				'reportedPriceDiff':      { 'index': 22, 'type': 'bool', }, 
				'reportedPriceReason':    { 'index': 23, 'type': 'string', }, 
				'publishTrade':           { 'index': 24, 'type': 'bool', }, 
				'basisOfTrade':           { 'index': 25, 'type': 'int', }, 
				'previouslyReported':     { 'index': 26, 'type': 'bool', }, 
				'priceQtyReviewed':       { 'index': 27, 'type': 'bool', }, 
				'clientTrade':            { 'index': 28, 'type': 'bool', }, 
				'isPosDup':               { 'index': 29, 'type': 'bool', }, 
				'publishNow':             { 'index': 30, 'type': 'bool', }, 
				'tradeId':                { 'index': 31, 'type': 'string', }, 
				'firmTradeId':            { 'index': 32, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'orderCapacity':          { 'index': 33, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'tradeType':              { 'index': 34, 'type': 'string', }, 
				'tradeSubType':           { 'index': 35, 'type': 'string', }, 
				'settlementDate':         { 'index': 36, 'type': 'int', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'datetime'},
				                            ],
				                          },
				'productIdCountry':       { 'index': 37, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '2'},
				                            ],
				                          },
				'executionSubVenue':      { 'index': 38, 'type': 'string', }, 
				'currency':               { 'index': 39, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '3'},
				                            ],
				                          },
			}, 
		}, 
		'VikingReportAck': {
			'id': 70, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'reportId':        { 'index': 0, 'type': 'string', }, 
				'version':         { 'index': 1, 'type': 'int', }, 
				'eventType':       { 'index': 2, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'rejectingSystem': { 'index': 3, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                     'meta-fields': [
					                 {'field': 'deprecated' , 'value' : 'true'},
				                     ],
				                   },
				'rejectReasons':   { 'index': 4, 'type': 'table', 'tablename': 'RejectReason', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                     ],
				                   },
				'eventTime':       { 'index': 5, 'type': 'int', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                     ],
				                   },
				'systemName':      { 'index': 6, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '32'},
				                     ],
				                   },
				'receivedTime':    { 'index': 7, 'type': 'int', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                     ],
				                   },
				'reportTime':      { 'index': 8, 'type': 'int', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                     ],
				                   },
				'tradeId':         { 'index': 9, 'type': 'string', }, 
				'firmTradeId':     { 'index': 10, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '29'},
				                     ],
				                   },
			}, 
		}, 
		'VikingReverseRouteLookup': {
			'id': 170, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'lineHandlerSessionId': { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'vikingOrderId':        { 'index': 1, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'upstreamOrderId':      { 'index': 2, 'type': 'string', }, 
				'orderTransactionType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderTransactionType', }, 
				'cancelReason':         { 'index': 4, 'type': 'ubyte', 'enum': 'OmCancelReason', }, 
			}, 
		}, 
		'VikingRouteLookup': {
			'id': 169, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'upstreamComponent':    { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'upstreamOrderId':      { 'index': 1, 'type': 'string', }, 
				'orderVersion':         { 'index': 2, 'type': 'uint', }, 
				'exchangeOrderId':      { 'index': 3, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '64'},
				                          ],
				                        },
				'lastVikingOrderId':    { 'index': 4, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'lineHandlerSessionId': { 'index': 5, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
			}, 
		}, 
		'VikingRouteLookupBySequenceNumber': {
			'id': 177, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'lineHandlerSessionId': { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'messageIdAsInteger':   { 'index': 1, 'type': 'int', }, 
				'upstreamOrderId':      { 'index': 2, 'type': 'string', }, 
				'orderTransactionType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderTransactionType', }, 
				'cancelReason':         { 'index': 4, 'type': 'ubyte', 'enum': 'OmCancelReason', }, 
			}, 
		}, 
		'VikingSessionMessageId': {
			'id': 171, 
			'version': 5, 
			'publishable': 'true', 
			'columns': {
				'sessionId':          { 'index': 0, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'messageStreamId':    { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '20'},
				                        ],
				                      },
				'messageIdAsInteger': { 'index': 2, 'type': 'int', }, 
				'messageIdAsString':  { 'index': 3, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '64'},
				                        ],
				                      },
				'plugInId':           { 'index': 4, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'destinationId':      { 'index': 5, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '20'},
				                        ],
				                      },
				'messageIdType':      { 'index': 6, 'type': 'ubyte', 'enum': 'OmMessageIdType', }, 
				'messageIdAsBinary':  { 'index': 7, 'type': 'binary', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'blob'},
				                        ],
				                      },
				'messageIdAsUInt64':  { 'index': 8, 'type': 'uint64', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'uint64'},
				                        ],
				                      },
			}, 
		}, 
		'VikingSessionState': {
			'id': 174, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'sessionId':              { 'index': 0, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'vikingSessionHeldState': { 'index': 1, 'type': 'ubyte', 'enum': 'OmVikingSessionHeldState', }, 
				'exchangeSessionId':      { 'index': 2, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'vikingSessionDisabled':  { 'index': 3, 'type': 'bool', }, 
			}, 
		}, 
		'VikingSessionStateCommand': {
			'id': 311, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                     { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                                       ],
				                                     },
				'sessionId':                         { 'index': 1, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '29'},
				                                       ],
				                                     },
				'vikingSessionConnectionState':      { 'index': 2, 'type': 'ubyte', 'enum': 'OmVikingSessionConnectionState', }, 
				'vikingSessionHeldState':            { 'index': 3, 'type': 'ubyte', 'enum': 'OmVikingSessionHeldState', }, 
				'marketClassificationSessionStates': { 'index': 4, 'type': 'table', 'tablename': 'MarketClassificationSessionState', # FIELD HAS BEEN DEPRECATED
				                                       'meta-fields': [
					                                   {'field': 'deprecated' , 'value' : 'true'},
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
			}, 
		}, 
		'VikingSuspendQuoting': {
			'id': 85, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'orderId':        { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '29'},
				                    ],
				                  },
				'productId':      { 'index': 1, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '100'},
				                    ],
				                  },
				'currency':       { 'index': 2, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '3'},
				                    ],
				                  },
				'commentText':    { 'index': 3, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '50'},
				                    ],
				                  },
				'eventType':      { 'index': 4, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'commandHeader':  { 'index': 5, 'type': 'table', 'tablename': 'CommandHeader', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'struct'},
				                    ],
				                  },
				'vikingMarketId': { 'index': 6, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '16'},
				                    ],
				                  },
			}, 
		}, 
		'VikingTrade': {
			'id': 94, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'messageId':               { 'index': 0, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'sentTime':                { 'index': 1, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'receivedTime':            { 'index': 2, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'eventType':               { 'index': 3, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'traderExchangeId':        { 'index': 4, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'userName':                { 'index': 5, 'type': 'string', }, 
				'productSynonyms':         { 'index': 6, 'type': 'table', 'tablename': 'ProductSynonym', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'strikePrice':             { 'index': 7, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'expiry':                  { 'index': 8, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'date'},
				                             ],
				                           },
				'exchangeExecutionId':     { 'index': 9, 'type': 'string', }, 
				'executionTime':           { 'index': 10, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'updateTimestamp':         { 'index': 11, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'executionType':           { 'index': 12, 'type': 'ubyte', 'enum': 'OmExecutionType', }, 
				'marketTradeDate':         { 'index': 13, 'type': 'int', # FIELD IS OBSOLETE
				                             'meta-fields': [
					                         {'field': 'obsolete' , 'value' : 'true'},
					                         {'field': 'dictionaryType' , 'value' : 'date'},
				                             ],
				                           },
				'clearingDate':            { 'index': 14, 'type': 'int', # FIELD IS OBSOLETE
				                             'meta-fields': [
					                         {'field': 'obsolete' , 'value' : 'true'},
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'positionOpenClose':       { 'index': 15, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'putCall':                 { 'index': 16, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'buySell':                 { 'index': 17, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'executedQuantity':        { 'index': 18, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'giveUp':                  { 'index': 19, 'type': 'ubyte', 'enum': 'OmGiveUp', }, 
				'apsIndicator':            { 'index': 20, 'type': 'bool', }, 
				'executionPrice':          { 'index': 21, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'averagePrice':            { 'index': 22, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'currency':                { 'index': 23, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '3'},
				                             ],
				                           },
				'commission':              { 'index': 24, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'sourceAccountType':       { 'index': 25, 'type': 'string', }, 
				'sourceAccountId':         { 'index': 26, 'type': 'string', }, 
				'targetAccountType':       { 'index': 27, 'type': 'string', }, 
				'targetAccountId':         { 'index': 28, 'type': 'string', }, 
				'orderId':                 { 'index': 29, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'exchangeOrderId':         { 'index': 30, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'quantity':                { 'index': 31, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'quantityRemaining':       { 'index': 32, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'errorCode':               { 'index': 33, 'type': 'string', }, 
				'commentText':             { 'index': 34, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '50'},
				                             ],
				                           },
				'floorMemberId':           { 'index': 35, 'type': 'string', }, 
				'exchangeMemberId':        { 'index': 36, 'type': 'string', }, 
				'executingMemberId':       { 'index': 37, 'type': 'string', }, 
				'clearingMemberId':        { 'index': 38, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '16'},
				                             ],
				                           },
				'oppositeMemberId':        { 'index': 39, 'type': 'string', }, 
				'carryClearingMemberId':   { 'index': 40, 'type': 'string', }, 
				'contractType':            { 'index': 41, 'type': 'string', }, 
				'contractSubType':         { 'index': 42, 'type': 'string', }, 
				'contractFamily':          { 'index': 43, 'type': 'string', }, 
				'exchangeCode':            { 'index': 44, 'type': 'string', }, 
				'active':                  { 'index': 45, 'type': 'bool', }, 
				'groupId':                 { 'index': 46, 'type': 'string', }, 
				'tradeType':               { 'index': 47, 'type': 'string', }, 
				'tradeSubType':            { 'index': 48, 'type': 'string', }, 
				'executionSubId':          { 'index': 49, 'type': 'string', }, 
				'originalExecutionId':     { 'index': 50, 'type': 'string', }, 
				'ctiCode':                 { 'index': 51, 'type': 'string', }, 
				'spread':                  { 'index': 52, 'type': 'bool', }, 
				'flexTrade':               { 'index': 53, 'type': 'bool', }, 
				'tradingVenue':            { 'index': 54, 'type': 'string', }, 
				'historical':              { 'index': 55, 'type': 'bool', }, 
				'priceQuote':              { 'index': 56, 'type': 'string', }, 
				'roundedPrice':            { 'index': 57, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'residualAmount':          { 'index': 58, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'feeCode':                 { 'index': 59, 'type': 'string', }, 
				'originCode':              { 'index': 60, 'type': 'string', }, 
				'giveOutQuantity':         { 'index': 61, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'reference':               { 'index': 62, 'type': 'string', }, 
				'tradeId':                 { 'index': 63, 'type': 'string', }, 
				'tradeSubId':              { 'index': 64, 'type': 'string', }, 
				'clearingExecutionType':   { 'index': 65, 'type': 'string', }, 
				'acknowledgementType':     { 'index': 66, 'type': 'ubyte', 'enum': 'OmClearingAcknowledgement', }, 
				'executionTypeDesc':       { 'index': 67, 'type': 'string', }, 
				'tradeInstructionDetails': { 'index': 68, 'type': 'table', 'tablename': 'VikingTradeInstructionDetail', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'tradeDate':               { 'index': 69, 'type': 'string', }, 
				'clearingDateStr':         { 'index': 70, 'type': 'string', }, 
				'contractVersion':         { 'index': 71, 'type': 'string', }, 
				'parentSubId':             { 'index': 72, 'type': 'string', }, 
			}, 
		}, 
		'VikingTradeAmendAccept': {
			'id': 411, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':       { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'orderId':             { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'exchangeOrderId':     { 'index': 2, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '64'},
				                         ],
				                       },
				'executionId':         { 'index': 3, 'type': 'string', 'aliases': ['execId'], 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'exchangeExecutionId': { 'index': 4, 'type': 'string', }, 
				'replyCode':           { 'index': 5, 'type': 'int', }, 
				'replyText':           { 'index': 6, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '256'},
				                         ],
				                       },
			}, 
		}, 
		'VikingTradeAmendReject': {
			'id': 412, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':       { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'orderId':             { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'exchangeOrderId':     { 'index': 2, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '64'},
				                         ],
				                       },
				'executionId':         { 'index': 3, 'type': 'string', 'aliases': ['execId'], 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'exchangeExecutionId': { 'index': 4, 'type': 'string', }, 
				'replyCode':           { 'index': 5, 'type': 'int', }, 
				'replyText':           { 'index': 6, 'type': 'string', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
					                     {'field': 'maxStringLength' , 'value' : '256'},
				                         ],
				                       },
				'rejectReasons':       { 'index': 7, 'type': 'table', 'tablename': 'RejectReason', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                         ],
				                       },
			}, 
		}, 
		'VikingTradeAmendRequest': {
			'id': 410, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'orderId':                 { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'exchangeOrderId':         { 'index': 2, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'executionId':             { 'index': 3, 'type': 'string', 'aliases': ['execId'], 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'exchangeExecutionId':     { 'index': 4, 'type': 'string', }, 
				'productSynonyms':         { 'index': 5, 'type': 'table', 'tablename': 'ProductSynonym', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'executionPrice':          { 'index': 6, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executedQuantity':        { 'index': 7, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'exchangeMemberId':        { 'index': 8, 'type': 'string', }, 
				'buySell':                 { 'index': 9, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'contractMultiplier':      { 'index': 10, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executionSubVenue':       { 'index': 11, 'type': 'string', }, 
				'destinationMembershipId': { 'index': 12, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'traderExchangeId':        { 'index': 13, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'orderCapacity':           { 'index': 14, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':              { 'index': 15, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':           { 'index': 16, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'previousTradeData':       { 'index': 17, 'type': 'table', 'tablename': 'PreviousTradeData', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'vikingMarketId':          { 'index': 18, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '16'},
				                             ],
				                           },
				'vikingSubMarketId':       { 'index': 19, 'type': 'string', }, 
				'vikingDestinationId':     { 'index': 20, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '20'},
				                             ],
				                           },
			}, 
		}, 
		'VikingTradeCancelAccept': {
			'id': 426, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'executionId':   { 'index': 2, 'type': 'string', 'aliases': ['execId'], 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
			}, 
		}, 
		'VikingTradeCancelReject': {
			'id': 427, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'executionId':   { 'index': 2, 'type': 'string', 'aliases': ['execId'], 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'rejectReasons': { 'index': 3, 'type': 'table', 'tablename': 'RejectReason', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'collection'},
				                   ],
				                 },
			}, 
		}, 
		'VikingTradeCancelRequest': {
			'id': 425, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':       { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'orderId':             { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'executionId':         { 'index': 2, 'type': 'string', 'aliases': ['execId'], 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'exchangeExecutionId': { 'index': 3, 'type': 'string', }, 
				'productSynonyms':     { 'index': 4, 'type': 'table', 'tablename': 'ProductSynonym', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                         ],
				                       },
				'buySell':             { 'index': 5, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'vikingMarketId':      { 'index': 6, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '16'},
				                         ],
				                       },
				'vikingSubMarketId':   { 'index': 7, 'type': 'string', }, 
			}, 
		}, 
		'VikingTradeInstructionDetail': {
			'id': 300, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'quantity':                { 'index': 0, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'accountId':               { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '50'},
				                             ],
				                           },
				'accountTypeStr':          { 'index': 2, 'type': 'string', }, 
				'originCode':              { 'index': 3, 'type': 'string', }, 
				'ctiCode':                 { 'index': 4, 'type': 'string', }, 
				'positionOpenClose':       { 'index': 5, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'oppositeMemberId':        { 'index': 6, 'type': 'string', }, 
				'carryClearingMemberId':   { 'index': 7, 'type': 'string', }, 
				'instructionSubId':        { 'index': 8, 'type': 'string', }, 
				'clearingAllocationId':    { 'index': 9, 'type': 'string', }, 
				'tradeId':                 { 'index': 10, 'type': 'string', }, 
				'tradeSubId':              { 'index': 11, 'type': 'string', }, 
				'eventType':               { 'index': 12, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'commentText':             { 'index': 13, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '50'},
				                             ],
				                           },
				'buySell':                 { 'index': 14, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'executionPrice':          { 'index': 15, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'expiry':                  { 'index': 16, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'date'},
				                             ],
				                           },
				'clearingInstructionList': { 'index': 17, 'type': 'table', 'tablename': 'ClearingInstructionTypeList', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'tradeUpdateList':         { 'index': 18, 'type': 'table', 'tablename': 'TradeUpdateTypeList', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingTradeReportData': {
			'id': 607, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'executionId':                                 { 'index': 0, 'type': 'string', 'aliases': ['execId'], 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '29'},
				                                                 ],
				                                               },
				'version':                                     { 'index': 1, 'type': 'int', }, 
				'transactionTime':                             { 'index': 2, 'type': 'int', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                 ],
				                                               },
				'transactionTimeMicrosecond':                  { 'index': 3, 'type': 'uint', }, 
				'originalFixMessageText':                      { 'index': 4, 'type': 'string', }, 
				'productId':                                   { 'index': 5, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '100'},
				                                                 ],
				                                               },
				'productIdType':                               { 'index': 6, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'internalProductId':                           { 'index': 7, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '29'},
				                                                 ],
				                                               },
				'internalProductIdType':                       { 'index': 8, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'oatsBranchSequenceNumber':                    { 'index': 9, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '20'},
				                                                 ],
				                                               },
				'fixSide':                                     { 'index': 10, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixShortSaleReason':                          { 'index': 11, 'type': 'int', }, 
				'fixSymbol':                                   { 'index': 12, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '64'},
				                                                 ],
				                                               },
				'fixSymbolSfx':                                { 'index': 13, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '8'},
				                                                 ],
				                                               },
				'fixTradeCondition':                           { 'index': 14, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '128'},
				                                                 ],
				                                               },
				'fixPublishTrdIndicator':                      { 'index': 15, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixAsOfIndicator':                            { 'index': 16, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixOverrideFlag':                             { 'index': 17, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixReversalIndicator':                        { 'index': 18, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixTradeReportType':                          { 'index': 19, 'type': 'int', }, 
				'fixRelatedMarketCenter':                      { 'index': 20, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixTrdSubType':                               { 'index': 21, 'type': 'int', }, 
				'falconTradeReportData':                       { 'index': 22, 'type': 'table', 'tablename': 'FalconTradeReportData', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                 ],
				                                               },
				'quantity':                                    { 'index': 23, 'type': 'double', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                                 ],
				                                               },
				'executionPrice':                              { 'index': 24, 'type': 'double', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                                 ],
				                                               },
				'regulatoryReportDomain':                      { 'index': 25, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'fixNonReportingGuid':                         { 'index': 26, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'tradeReportingVenue':                         { 'index': 27, 'type': 'ubyte', 'enum': 'OmVikingTradeReportingVenue', }, 
				'tradeReportingExecutionEntryTime':            { 'index': 28, 'type': 'int', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                 ],
				                                               },
				'tradeReportingExecutionEntryTimeMicrosecond': { 'index': 29, 'type': 'int', }, 
				'clientOrderCapacity':                         { 'index': 30, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'executionTime':                               { 'index': 31, 'type': 'int', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                 ],
				                                               },
				'executionTimeMicrosecond':                    { 'index': 32, 'type': 'int', }, 
				'executionCapacity':                           { 'index': 33, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionPoint':                              { 'index': 34, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '16'},
				                                                 ],
				                                               },
				'clearingInstruction':                         { 'index': 35, 'type': 'ubyte', 'enum': 'OmClearingInstructionType', }, 
				'customerPartyType':                           { 'index': 36, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'commentText':                                 { 'index': 37, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '50'},
				                                                 ],
				                                               },
				'giveUpContraParty':                           { 'index': 38, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'secDbActReportingDeskId':                     { 'index': 39, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '30'},
				                                                 ],
				                                               },
			}, 
		}, 
		'VikingTradeReportResponseData': {
			'id': 608, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'executionId':                { 'index': 0, 'type': 'string', 'aliases': ['execId'], 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'version':                    { 'index': 1, 'type': 'int', }, 
				'transactionTime':            { 'index': 2, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'transactionTimeMicrosecond': { 'index': 3, 'type': 'uint', }, 
				'originalFixMessageText':     { 'index': 4, 'type': 'string', }, 
				'tradeReportResponse':        { 'index': 5, 'type': 'table', 'tablename': 'TradeReportResponse', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
			}, 
		}, 
	},

	'rcsids' : [
		'$Header: /home/cvs/eqtech/cep/src/kevlar/sampleApplication/config/sampleDictionary.xml,v 1.3 2010/12/15 23:03:07 gerket Exp $',
		'$Header: /home/cvs/eqtech/cep/src/ivshmdb/config/ivShmDbMetaDictionary.xml,v 1.1 2010/04/08 07:29:02 hironk Exp $',
		'$Header: /home/cvs/eqtech/cep/src/om2/config/omDictionary.xml,v 1.1158 2014/11/18 18:18:18 dasand Exp $',
		'$Header: /home/cvs/eqtech/cep/src/rds-distribution/client/config/rdsDictionary.xml,v 1.198 2014/11/22 02:40:05 yongs Exp $',
	]
}

vikingCatalogEnums = {
	'enums': {
		'OmAccountRole': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Primary': 1, 
				'Versus': 2, 
				'DefaultExpense': 3, 
				'Hedge': 4, 
				'BookingExplosion': 5, 
			}, 
		}, 
		'OmAccountSubType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Wash': 1, 
				'Trading': 2, 
			}, 
		}, 
		'OmAccountSynonymType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'GmiAccountSynonym': 1, 
				'AmAccountNumberWithCheck': 2, 
				'AmAccountNumber': 3, 
				'AmAccountSynonym': 4, 
				'GsecAccountSynonym': 5, 
				'IOSAccount': 6, 
			}, 
		}, 
		'OmAccountType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Broker': 1, 
				'Trading': 2, 
				'Control': 3, 
				'Customer': 4, 
				'Wash': 5, 
				'Employee': 6, # VALUE IS OBSOLETE
			}, 
		}, 
		'OmAgencyType': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'AgencyOnly': 1, 
				'AgencyIfPossible': 2, 
				'AgencyOrEquivalent': 3, 
				'AgentForMember': 4, 
				'Bank': 5, 
				'DomesticFinancialInstitution': 6, 
				'ForeignInvestorInstitution': 7, 
				'ImmigrationAndNaturalizationServices': 8, 
				'MutualFund': 9, 
				'NonResidentCitizen': 10, 
				'HighNetWorthIndividual': 11, 
				'CorporateBodies': 12, 
			}, 
		}, 
		'OmAlgorithmicIndicator': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'Algorithmic': 1, 
				'NonAlgorithmic': 2, 
			}, 
		}, 
		'OmApi': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Aps': 1, 
				'None': 2, 
			}, 
		}, 
		'OmArbitrageStrategy': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'IndexArb': 1, 
				'NonIndexArb': 2, 
				'RiskArb': 3, 
			}, 
		}, 
		'OmBrokerBillingType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ImplicitBilling': 1, 
				'DueBilling': 2, 
			}, 
		}, 
		'OmBrokerIdType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'RADAR': 1, 
				'Bloomberg': 2, 
			}, 
		}, 
		'OmBuySell': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Buy': 1, 
				'Sell': 2, 
			}, 
		}, 
		'OmCanadaCrossType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Regular': 1, 
				'Basis': 2, 
				'Contingent': 3, 
				'Internal': 4, 
				'National': 5, 
				'SpecialTradingSession': 6, 
				'Vwap': 7, 
			}, 
		}, 
		'OmCanadaShortMarkingExemptDesignation': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'OrderIsSme': 1, 
				'BuyOrderOfCrossIsSme': 2, 
				'SellOrderOfCrossIsSme': 3, 
				'BuyAndSellOrdersOfCrossAreSme': 4, 
			}, 
		}, 
		'OmCancelReason': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'UserAdministrativeAction': 1, 
				'DestinationDisconnected': 2, 
				'AlgoTerminationAction': 3, 
				'SourceDisconnected': 4, 
			}, 
		}, 
		'OmChargeTypes': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'SalesCredit': 1, 
				'AdditionalCredit': 2, 
				'Markup': 3, 
				'Tax': 4, 
				'Discount': 5, 
				'Commission': 6, 
				'BrokerFee': 7, 
				'ExchangeFee': 8, 
				'FudgeFee': 9, 
				'MiscCharge': 10, 
				'ExtraSalesCredit': 11, 
				'LocalCharges': 12, 
				'AccruedTaxRate': 13, 
				'MiscCommissionPerAlloc': 14, 
				'RegulatoryAgencyFee': 15, 
				'ClearingFee': 16, 
				'AccruedInterest': 17, 
				'Vat': 18, 
				'AgriculturalTax': 19, 
				'ConsumptionTax': 20, 
				'Gst': 21, 
				'PtmLevy': 22, 
				'SalesTax': 23, 
				'StampDuty': 24, 
				'TradingActivityFee': 25, 
				'TransactionLevy': 26, 
				'TransactionTax': 27, 
				'Default': 28, 
				'BrokerageIncome': 29, 
				'SalesMarkup': 30, 
			}, 
		}, 
		'OmChargeUnits': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Absolute': 1, 
				'Percentage': 2, 
				'BasisPoints': 3, 
				'Scale': 4, 
				'Discount': 5, 
				'Extra': 6, 
				'Default': 7, 
				'BasicFloor': 8, 
				'BasicCap': 9, 
				'BasisLimit': 10, 
				'PerShare': 11, 
			}, 
		}, 
		'OmClearingAcknowledgement': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'GiveIn': 1, 
				'GiveOut': 2, 
				'Split': 3, 
				'Update': 4, 
			}, 
		}, 
		'OmClearingInstructionType': {
			'version': 5, 
			'values': {
				'INVALID': 0, 
				'Accept': 1, 
				'GiveOut': 2, 
				'Split': 3, 
				'Update': 4, 
				'RejectTrade': 5, 
				'CancelInstruction': 6, 
				'Act': 7, 
				'Qsr': 8, 
				'NoActClearing': 9, 
				'Agu': 10, 
				'ClientDefault': 11, 
				'ActClearingAsCounterParty': 12, 
				'CorrespondentClearing': 13, 
				'StepOutFinra': 14, 
				'StepOutNasdaq': 15, 
				'StepIn': 16, 
			}, 
		}, 
		'OmCommentType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Client': 1, 
				'SalesTrader': 2, 
				'Trader': 3, 
				'Operations': 4, 
				'Exchange': 5, 
				'PositionKeeping': 6, 
				'GroupingReason': 7, 
				'Booking': 8, 
				'ExemptReason': 9, 
			}, 
		}, 
		'OmConsolidatedRegulatoryCode': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Agency': 1, 
				'ProprietaryProgramTrading': 2, 
				'ProprietaryProgramTradingIndexArb': 3, 
				'IndividualInvestor': 5, 
				'ProprietaryProgramTradingAlgorithmic': 6, # VALUE IS OBSOLETE
				'AgencyProgramAlgorithmic': 7, # VALUE IS OBSOLETE
				'AgencyOtherMemberProgramTradingIndexArb': 8, 
				'AgencyOtherMemberProgramTrading': 9, 
				'Proprietary': 10, 
				'AgencyProgramTradingIndexArb': 11, 
				'AgencyOtherMember': 12, 
				'AgencyProgramTrading': 13, 
				'ProprietaryOptionsClearingCorporationMemberFirm': 14, # VALUE IS OBSOLETE
				'IndividualInvestorProgramTrading': 15, 
				'IndividualInvestorProgramTradingIndexArb': 16, 
				'AgencyDiscretionExercised': 17, # VALUE IS OBSOLETE
				'AgencyProgramTradingDiscretionExercised': 18, # VALUE IS OBSOLETE
				'AgencyProgramTradingIndexArbDiscretionExercised': 19, # VALUE IS OBSOLETE
				'IndividualInvestorDiscretionExercised': 20, # VALUE IS OBSOLETE
			}, 
		}, 
		'OmCreatorIdType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'External': 1, 
				'Program': 2, 
				'Kerberos': 3, 
				'StormUser': 4, 
			}, 
		}, 
		'OmCrossRequestReason': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Arbitrage': 1, 
				'Combination': 2, 
				'ExchangeForPhysical': 3, 
				'PositionConsolidation': 4, 
				'Rollover': 5, 
				'Other': 6, 
				'Facilitation': 7, 
				'PriceImprovement': 8, 
				'FacilitationResponse': 9, 
				'PriceImprovementResponse': 10, 
				'AwayMarketBetterResponse': 11, 
				'AutomatedImprovementMechanism': 12, 
			}, 
		}, 
		'OmCrossingOption': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'CrossOnly': 1, 
				'DoNotCross': 2, 
				'OkToCross': 3, 
			}, 
		}, 
		'OmCustomerPartyType': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Institutional': 1, 
				'BrokerDealer': 2, 
				'Individual': 3, 
				'Employee': 4, 
				'Professional': 5, 
				'OCCMemberFirm': 6, 
				'MarketMaker': 7, 
			}, 
		}, 
		'OmDeclarationType': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'PreDeclaration': 1, 
				'PostDeclaration': 2, 
			}, 
		}, 
		'OmDiscretionaryReferencePriceType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Mid': 1, 
				'Bid': 2, 
				'Ask': 3, 
				'OrderBasePrice': 4, 
			}, 
		}, 
		'OmErrorType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'InstructionError': 1, 
				'ExchangeError': 2, 
			}, 
		}, 
		'OmEventType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'NewTrade': 1, 
				'Amend': 2, 
				'Cancel': 3, 
				'Settlement': 4, 
				'CancelSettlement': 5, 
				'NewCorpAction': 6, 
				'AmendedCorpAction': 7, 
				'CancelledCorpAction': 8, 
				'NewPositionAdjustment': 9, 
				'NewProgram': 10, 
				'AmendProgram': 11, 
				'NewOrder': 12, 
				'AmendOrder': 13, 
				'CleanUp': 14, 
				'NewRequest': 15, 
				'ExpireRequest': 16, 
				'RejectRequest': 17, 
				'NewQuote': 18, 
				'AcceptQuote': 19, 
				'ExpireQuote': 20, 
				'RejectQuote': 21, 
				'CounterQuote': 22, 
				'CancelOrder': 23, 
				'ExpireOrder': 24, 
				'RejectOrder': 25, 
				'AcceptOrder': 26, 
				'UpdateRequest': 27, 
				'CancelRequest': 28, 
				'CashForwardRoll': 29, 
				'NewBusinessProcess': 30, 
				'NewBusinessProcessStep': 31, 
				'UpdateBusinessProcessStep': 32, 
				'NewOrderAccept': 33, 
				'NewOrderReject': 34, 
				'AmendOrderAccept': 35, 
				'AmendOrderReject': 36, 
				'CancelOrderAccept': 37, 
				'CancelOrderReject': 38, 
				'New': 39, 
				'CorrectTrade': 41, 
				'CancelTrade': 42, 
				'Park': 43, 
				'Unpark': 44, 
				'AdminUpdateOrder': 45, 
				'AdminUpdateExecution': 46, 
			}, 
		}, 
		'OmExecutionCancelType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ReturnQuantityToOrder': 1, 
				'DoNotReturnQuantityToOrder': 2, 
			}, 
		}, 
		'OmExecutionCapacity': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Agency': 1, 
				'CrossAsAgent': 2, 
				'CrossAsPrincipal': 3, 
				'Principal': 4, 
				'RisklessPrincipal': 5, 
			}, 
		}, 
		'OmExecutionReason': {
			'version': 5, 
			'values': {
				'INVALID': 0, 
				'AutomatedExecution': 1, 
				'ReceivedFromOtcPool': 2, 
				'ExchangeForPhysical': 3, 
				'ReceivedFromWhiteLabelClient': 4, 
				'ResultOfOnExchangeCross': 5, 
				'ManualExecution': 6, 
			}, 
		}, 
		'OmExecutionTransactionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'New': 1, 
				'Correction': 2, 
				'Cancel': 3, 
			}, 
		}, 
		'OmExecutionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Regular': 1, 
				'StrategyLeg': 2, 
				'Strategy': 3, 
			}, 
		}, 
		'OmExternalSystemType': {
			'version': 10, 
			'values': {
				'INVALID': 0, 
				'Oms': 1, 
				'Apollo': 3, 
				'Viking': 4, 
				'IoiProvider': 5, 
				'PtApp': 6, 
				'RediSigma': 7, 
				'Sport': 8, 
				'ViJoe': 9, 
				'TSecDbSor': 10, 
				'ParentChildManager': 11, 
				'InternalSmartRouter': 12, 
				'OrderBook': 13, 
				'AlgorithmEngine': 14, 
				'FixClient': 15, 
				'TSecDbCrossingEngine': 16, 
				'TSecDbCrossChecker': 17, 
			}, 
		}, 
		'OmFalconTradeReportTransactionType': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'New': 1, 
				'Correction': 2, 
				'Cancel': 3, 
			}, 
		}, 
		'OmFixProcessCode': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'Regular': 1, 
				'SoftDollar': 2, 
				'StepIn': 3, 
				'StepOut': 4, 
				'SoftDollarStepIn': 5, 
				'SoftDollarStepOut': 6, 
				'PlanSponsor': 7, 
				'NasdaqStepOut': 8, 
				'SpecialTrade': 9, 
				'SpecialStepOutTrade': 10, 
				'NasdaqSalesFeeTransfer': 11, 
			}, 
		}, 
		'OmGiveUp': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'GiveIn': 1, 
				'GiveOut': 2, 
				'PendingGiveIn': 3, 
				'PendingGiveOut': 4, 
				'RejectedGiveOut': 5, 
			}, 
		}, 
		'OmHedgeStrategy': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'IndexHedge': 1, 
				'NonIndexHedge': 2, 
			}, 
		}, 
		'OmInstructionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'AcceptTrade': 1, 
				'RejectTrade': 2, 
				'CancelInstruction': 3, 
				'GiveOut': 4, 
				'AcceptPendingGiveIn': 5, 
				'RejectPendingGiveIn': 6, 
				'CancelPendingGiveOut': 7, 
				'Unset': 8, 
			}, 
		}, 
		'OmInterventionOption': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'NoManualIntervention': 1, 
				'ManualInterventionOk': 2, 
				'ManualInterventionRequested': 3, 
			}, 
		}, 
		'OmKoreaReportType': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'IndexArbitrage': 1, 
				'NonIndexArbitrage': 2, 
				'SingleStockFuturesArbitrage': 3, 
				'ETFArbitrageIndexArbitrafeAvailable': 4, 
				'ETFCreateIndexArbitrageAvailable': 5, 
				'ETFArbitrageNonIndexArbitrage': 6, 
				'ETFCreateNonIndexArbitrage': 7, 
				'ELWHedge': 8, 
				'ETFHedge': 9, 
				'SFOHedge': 10, 
				'OTCHedge': 11, 
			}, 
		}, 
		'OmLiquidityIndicatorType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'TookLiquidity': 1, 
				'ProvidedLiquidity': 2, 
				'RoutedAway': 3, 
				'Auction': 4, 
			}, 
		}, 
		'OmMarginType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'MarginOpen3Month': 1, 
				'MarginOpen6Month': 2, 
				'GeneralMarginOpen': 3, 
				'MarginClose3Month': 4, 
				'MarginClose6Month': 5, 
				'GeneralMarginClose': 6, 
			}, 
		}, 
		'OmMarketProtectionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Percentage': 1, 
				'Ticks': 2, 
			}, 
		}, 
		'OmMarketSession': {
			'version': 6, 
			'values': {
				'INVALID': 0, 
				'SingleSession': 1, 
				'DaySession': 2, 
				'EveningSession': 3, 
				'MorningSession': 4, 
				'AfternoonSession': 5, 
				'NyseCrossingSessionII': 6, 
				'ExtendedHoursTrading': 7, 
				'PreOpenSession': 8, 
				'SystemHours': 9, 
				'BatsRegularHoursOnly': 10, 
				'WorkupSessionOnly': 11, 
				'AfterHourClosingPriceSession': 12, 
				'AfterHourSinglePriceSession': 13, 
				'PreOpenAndContinuous': 14, 
			}, 
		}, 
		'OmMarketSessionState': {
			'version': 6, 
			'values': {
				'INVALID': 0, 
				'DaySession': 1, 
				'MorningSession': 2, 
				'AfternoonSession': 3, 
				'EveningSession': 4, 
				'PreOpenSession': 5, 
				'MorningPreOpenSession': 6, 
				'AfternoonPreOpenSession': 7, 
				'EveningPreOpenSession': 8, 
				'ClosingSession': 9, 
				'Closed': 10, 
				'NonIncreaseSession': 11, 
				'NonCancelSession': 12, 
				'SpecialPreOpenSessionStart': 13, 
				'SpecialPreOpenSessionEnd': 14, 
				'KoreaSpecialOverlapSession': 15, 
				'AfterHourClosingPriceSession': 16, 
				'AfterHourSinglePriceSession': 17, 
				'PreOpenAndContinuous': 18, # VALUE IS OBSOLETE
				'LunchBreak': 19, 
				'OrderQueueingPreOpenSession': 20, 
				'PeriodicCallAuctionSessionStart': 21, 
				'PeriodicCallAuctionSessionEnd': 22, 
			}, 
		}, 
		'OmMessageFormat': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Fix': 1, 
				'Iv': 2, 
				'Nvp': 3, 
				'Struct': 4, 
			}, 
		}, 
		'OmMessageIdType': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'Integer': 1, 
				'String': 2, 
				'Binary': 3, 
				'UInt64': 4, 
			}, 
		}, 
		'OmNearLegPricePreference': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PriorDaySettlementPrice': 1, 
				'EnginePrice': 2, 
			}, 
		}, 
		'OmNyseBillingIndicator': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'LiquidityTaker': 1, 
				'LiquidityProvider': 2, 
				'Blended': 3, 
				'LiquidityProviderOnOpenGtc': 4, 
				'LiquidityProviderOnOpen': 5, 
				'LiquidityProviderOnClose': 6, 
				'BlendedOnClose': 7, 
			}, 
		}, 
		'OmOffsetDirectionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'SideIndependent': 1, 
				'SideDependent': 2, 
			}, 
		}, 
		'OmOffsetType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Price': 1, 
				'Ticks': 2, 
			}, 
		}, 
		'OmOrderCapacity': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Agency': 1, 
				'Principal': 2, 
				'Combined': 3, 
			}, 
		}, 
		'OmOrderCreationType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Automated': 1, 
				'Manual': 2, 
			}, 
		}, 
		'OmOrderTransactionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'New': 1, 
				'Correction': 2, 
				'Cancel': 3, 
			}, 
		}, 
		'OmOrderType': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'Market': 1, 
				'Limit': 2, 
				'Stop': 3, 
				'StopLimit': 4, 
				'PegBid': 5, 
				'PegMid': 6, 
				'PegAsk': 7, 
				'Pegged': 8, 
				'LimitSweep': 9, 
				'MarketToLimit': 10, 
				'AtBestLimit': 11, 
			}, 
		}, 
		'OmOrderbookVisibilityType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Visible': 1, 
				'Dark': 2, 
			}, 
		}, 
		'OmPegScopeType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'DestinationBBO': 1, 
				'RegionalBBO': 2, 
			}, 
		}, 
		'OmPegType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Mid': 1, 
				'Bid': 2, 
				'Ask': 3, 
				'Last': 4, 
			}, 
		}, 
		'OmPositionEffect': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ClosesPosition': 1, 
				'OpensPosition': 2, 
				'RollsPosition': 3, 
			}, 
		}, 
		'OmPrincipalType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Proprietary': 1, 
				'CustomerFacilitation': 2, 
				'RisklessPrincipal': 3, 
				'MarketMaking': 4, 
			}, 
		}, 
		'OmProductIdType': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'ProductMaster': 1, 
				'Ticker': 2, 
				'Cusip': 3, 
				'Sedol': 4, 
				'Quik': 5, 
				'Isin': 6, 
				'Ric': 7, 
				'Autex': 8, 
				'CommonCode': 9, 
				'GoldmanSachsNumber': 10, 
				'JapaneseNumber': 11, 
				'ValorenNumber': 12, 
				'KassenverinNumber': 13, 
				'CurrencyCode': 14, 
				'Sicovam': 15, 
				'AbiiItalianNumber': 16, 
				'WertPapierKursNumber': 17, 
				'Gl': 18, 
				'Aorta': 19, 
				'Rts': 20, 
				'TimberHill': 21, 
				'BloombergId': 22, 
				'SpComstock': 23, 
				'TiffeNumber': 24, 
				'PrimeId': 25, 
				'MaceGpid': 26, 
				'ConvertibleBondId': 27, 
				'Gsuid': 28, 
				'Gmi': 29, 
				'FuturesProductServer': 30, 
				'SecDbEti': 31, 
				'Rjo': 32, 
				'StateRegistrationNumber': 33, 
				'DepositoryClearingCompanyCode': 34, 
				'BloombergIdRoot': 35, 
				'Gss': 36, 
				'LocalMarketSymbol': 37, 
				'Ops': 38, 
				'Lmax': 39, 
			}, 
		}, 
		'OmProductInstrumentType': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Equity': 1, 
				'Option': 2, 
				'Future': 3, 
				'ConvertibleBond': 4, 
				'Strategy': 5, 
			}, 
		}, 
		'OmPutCall': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Put': 1, 
				'Call': 2, 
			}, 
		}, 
		'OmQuoteCancelReason': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'QuoteExecutionSeen': 1, 
				'QuotingStoppedBySystem': 2, 
				'QuotingStoppedByTrader': 3, 
			}, 
		}, 
		'OmRegulatoryReportDomain': {
			'version': 20, 
			'values': {
				'INVALID': 0, 
				'USPT': 1, 
				'GSX3': 2, 
				'USQT': 3, 
				'USSharesTrading': 4, 
				'USGSAT': 5, 
				'USGSATSOR': 6, 
				'USInstitutionalSales': 7, 
				'USSigmaSOR': 8, 
				'USSigmaX': 9, 
				'USPTTrading': 10, 
				'USPTSales': 11, 
				'USListedOptions': 12, 
				'PWM': 13, 
				'USQTETF': 14, 
				'USGSET': 15, 
				'CANSigmaX': 16, 
				'USAGEX': 17, 
				'USSPGSales': 18, 
				'USOptionsAGEX': 19, 
				'USInstitutionalOptionSales': 20, 
				'GSSSecuritiesLending': 21, 
				'USPWMWeb': 22, 
				'CASharesTrading': 23, 
				'USCreditETF': 24, 
				'EMEAListedOptions': 25, 
				'USFICCSSG': 26, 
				'USFICCListedPreferred': 27, 
				'USFICCHYDistressed': 28, 
				'USEMM': 29, 
			}, 
		}, 
		'OmRejectReasonType': {
			'version': 12, 
			'values': {
				'INVALID': 0, 
				'UnknownProduct': 2, 
				'ExchangeClosed': 3, 
				'ExceedsLimit': 4, 
				'TooLateToEnter': 5, 
				'UnknownOrder': 6, 
				'DuplicateOrder': 7, 
				'DuplicateOfAVerbalOrder': 8, 
				'StaleOrder': 9, 
				'NotRejected': 15, 
				'InvalidCommandMessage': 17, 
				'CommitFailed': 18, 
				'ExchangeUnavailable': 19, 
				'UnknownExecution': 20, 
				'UnknownIoi': 21, 
				'UnknownBasket': 22, 
				'DuplicateBasket': 23, 
				'BrokerOption': 24, 
				'InternalError': 25, 
				'PendingCancelOrPendingCorrection': 26, 
				'TooLateToCancel': 27, 
				'UnknownAlgorithm': 28, 
				'InvalidAlgorithmParameter': 29, 
				'InvalidAlgorithmParameterCorrection': 30, 
				'InvalidAlgorithmNameCorrection': 31, 
				'InvalidAlgorithmStartEndTime': 32, 
				'InvalidOrderType': 33, 
				'CreditLimitExceeded': 34, 
				'FatFingerLimitExceeded': 35, 
				'ComplianceRestricted': 36, 
				'InvalidTimeInForce': 37, 
				'PriceOutOfDailyRange': 38, 
				'InvalidLotSize': 39, 
				'InvalidTickSize': 40, 
				'QuantityAmendUpNotAllowed': 41, 
				'QuantityAmendDownNotAllowed': 42, 
				'InvalidSide': 43, 
				'ExchangeReject': 44, 
				'DuplicateExternalReference': 45, 
				'InvalidExternalReference': 46, 
				'ImmediateOrCancelTermination': 47, 
				'MaximumQuantityExceeded': 48, 
				'MaximumPercentageOfAdvExceeded': 49, 
				'MaximumNotionalValueExceeded': 50, 
				'LimitPriceTooAgressive': 51, # VALUE IS OBSOLETE
				'LimitPriceTooPassive': 52, 
				'LimitPriceTooAggressive': 53, 
				'DuplicateExecution': 54, 
				'CrossWatchBreach': 55, 
				'UnknownIndication': 56, 
				'RiskControlsEvaluationError': 57, 
				'AggregateControlFailure': 58, 
				'InvalidDestination': 59, 
			}, 
		}, 
		'OmRejectingSystem': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'Engine': 1, 
				'Rules': 2, 
				'Viking': 3, 
				'Exchange': 4, 
				'SmartRouter': 5, 
				'AlgorithmicEngine': 6, 
				'OmReinstater': 7, 
				'MatchingEngine': 8, 
			}, 
		}, 
		'OmRepositoryActionType': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Insert': 1, 
				'Update': 2, 
				'Delete': 3, 
				'Log': 4, 
				'UpdateVersion': 5, 
				'InsertOrUpdate': 6, 
				'InsertOrUpdateAndIncrementVersion': 7, 
				'LogToReplayGuard': 8, 
			}, 
		}, 
		'OmSEFPartyRole': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'SEFExecutingFirm': 1, 
				'SEFOrderOriginationFirm': 2, 
				'SEFSponsoringFirm': 3, 
				'SEFBeneficiary': 4, 
				'SEFEnteringTrader': 5, 
				'SEFIntroducingBroker': 6, 
				'SEFLocationId': 7, 
				'SEFDeskId': 8, 
			}, 
		}, 
		'OmSEFTradeClearingInstruction': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'SEFClearAgainstCCP': 1, 
				'SEFExcludeCCPClearing': 2, 
			}, 
		}, 
		'OmSettlementBoardOverride': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'LocalBoardSettlement': 1, 
				'ForeignBoardSettlement': 2, 
			}, 
		}, 
		'OmSettlementDateCalcMethod': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Regular': 1, 
				'TradeDate': 2, 
				'NextDay': 3, 
				'TPlus2': 4, 
				'TPlus3': 5, 
				'TPlus4': 6, 
				'TPlus5': 7, 
				'Future': 8, 
				'WhenAndIfIssued': 9, 
				'SellersOption': 10, 
				'DelayDelivery': 11, 
				'WiPlus1': 12, 
				'WiPlus2': 13, 
				'WiPlus3': 14, 
				'WiPlus4': 15, 
				'WiPlus5': 16, 
			}, 
		}, 
		'OmSeverity': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Warning': 1, 
				'Error': 2, 
			}, 
		}, 
		'OmSmartRoutingOption': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'OkToSmartRoute': 1, 
				'DoNotSmartRoute': 2, 
			}, 
		}, 
		'OmTimeInForce': {
			'version': 5, 
			'values': {
				'INVALID': 0, 
				'Day': 1, 
				'GoodTillDate': 2, 
				'GoodTillCancelled': 3, 
				'ImmediateOrCancel': 4, 
				'ValidUntilNextAuction': 5, 
				'Open': 6, 
				'Close': 7, 
				'Auction': 8, 
				'Extended': 9, 
				'SessionOrClose': 10, 
				'BlockCrossingSession': 11, 
				'GoodInTradingSession': 12, 
				'GoodTillTime': 13, 
				'Core': 14, 
				'GoodForMilliseconds': 15, 
				'GoodForScheduledAuction': 16, 
			}, 
		}, 
		'OmTradeReportState': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ReportRejectedByGateway': 1, 
				'ReportHeld': 2, 
				'ReportIssuedOrResponsePending': 3, 
				'ReportAcceptedByTradeReportFacility': 4, 
				'ReportRejectedByTradeReportFacility': 5, 
				'ReportedByAlternateParty': 6, 
			}, 
		}, 
		'OmTradeReportingExecutionType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'AutomatedTradingExecution': 1, 
				'AutomatedBrokerExecution': 2, 
				'MarketMakerTrade': 3, 
			}, 
		}, 
		'OmTradeReportingType': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'DoNotReportTrade': 1, 
				'ReportWithoutPublication': 2, 
				'ReportWithPublication': 3, 
				'DelayedPublication': 4, 
				'DelayedPublicationRelease': 5, 
			}, 
		}, 
		'OmTradeStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Active': 1, 
				'Cancelled': 2, 
				'Replace': 3, 
			}, 
		}, 
		'OmTradeType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Trade': 1, 
				'GiveUp': 2, 
				'Posting': 3, 
			}, 
		}, 
		'OmTradeUpdateType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Account': 1, 
				'AccountType': 2, 
				'CtiCode': 3, 
				'OpenClose': 4, 
				'Origin': 5, 
				'FeeCode': 6, 
			}, 
		}, 
		'OmTradingPhase': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PreOpen': 1, 
				'Open': 2, 
				'ExtendedHoursTrading': 3, 
			}, 
		}, 
		'OmVikingMarketIdType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PrimeId': 1, 
				'EMMAId': 2, 
			}, 
		}, 
		'OmVikingOrderState': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'New': 1, 
				'NewDelivered': 2, 
				'Amend': 3, 
				'AmendDelivered': 4, 
				'Cancel': 5, 
				'CancelDelivered': 6, 
			}, 
		}, 
		'OmVikingSessionConnectionState': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Connected': 1, 
				'NotConnected': 2, 
			}, 
		}, 
		'OmVikingSessionHeldState': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'SessionOnHold': 1, 
				'SessionNotOnHold': 2, 
			}, 
		}, 
		'OmVikingTradeReportingVenue': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'NasdaqTRF': 1, 
				'FinraORF': 2, 
			}, 
		}, 
	}
}

