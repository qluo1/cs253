om2CompleteCatalog = {
	'tables': {
		'AcceptApprovalRequestCommand': {
			'id': 677, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'approvalTypes': { 'index': 2, 'type': 'table', 'tablename': 'ApprovalTypeListMember', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'collection'},
				                   ],
				                 },
				'approvalId':    { 'index': 3, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '12'},
				                   ],
				                 },
			}, 
		}, 
		'AcceptBasketCommand': {
			'id': 335, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'basketId':           { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'externalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'AcceptCancelBasketCommand': {
			'id': 339, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'basketId':           { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'externalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'AcceptCancelExecutionCommand': {
			'id': 690, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'executionId':            { 'index': 0, 'type': 'string', 'aliases': ['execId'], 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'commandHeader':          { 'index': 1, 'type': 'table', 'tablename': 'CommandHeader', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'struct'},
				                            ],
				                          },
				'execExternalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'collection'},
				                            ],
				                          },
			}, 
		}, 
		'AcceptCancelOrderCommand': {
			'id': 52, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'orderId':            { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
			}, 
		}, 
		'AcceptCorrectBasketCommand': {
			'id': 340, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'basketId':           { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'externalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'AcceptCorrectOrderCommand': {
			'id': 46, 
			'version': 8, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                     { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                                       ],
				                                     },
				'externalReferences':                { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'orderId':                           { 'index': 2, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '29'},
				                                       ],
				                                     },
				'quantity':                          { 'index': 3, 'type': 'double', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'real'},
				                                       ],
				                                     },
				'opaqueOrderDataItemsAdd':           { 'index': 4, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', # FIELD IS OBSOLETE
				                                       'meta-fields': [
					                                   {'field': 'obsolete' , 'value' : 'true'},
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'opaqueOrderDataItemsRemove':        { 'index': 5, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', # FIELD IS OBSOLETE
				                                       'meta-fields': [
					                                   {'field': 'obsolete' , 'value' : 'true'},
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'opaqueOrderDataItemsToRemove':      { 'index': 6, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', # FIELD HAS BEEN DEPRECATED
				                                       'meta-fields': [
					                                   {'field': 'deprecated' , 'value' : 'true'},
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'opaqueOrderDataItemsToSet':         { 'index': 7, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', # FIELD HAS BEEN DEPRECATED
				                                       'meta-fields': [
					                                   {'field': 'deprecated' , 'value' : 'true'},
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'externalReferencesToRemove':        { 'index': 8, 'type': 'table', 'tablename': 'ExternalReference', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'externalReferencesToAdd':           { 'index': 9, 'type': 'table', 'tablename': 'ExternalReference', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'tradingAlgorithmPrivateParameters': { 'index': 10, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '1024'},
				                                       ],
				                                     },
				'exchangeOrderId':                   { 'index': 11, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '64'},
				                                       ],
				                                     },
				'appliedControlLayers':              { 'index': 12, 'type': 'table', 'tablename': 'AppliedControlLayer', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
			}, 
		}, 
		'AcceptLocateRequestCommand': {
			'id': 371, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':         { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'orderId':               { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'locateRequestId':       { 'index': 2, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '37'},
				                           ],
				                         },
				'locateInformationList': { 'index': 3, 'type': 'table', 'tablename': 'LocateInformation', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
			}, 
		}, 
		'AcceptOrderCommand': {
			'id': 42, 
			'version': 18, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                     { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                                       ],
				                                     },
				'externalReferences':                { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'orderId':                           { 'index': 2, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '29'},
				                                       ],
				                                     },
				'executedQuantity':                  { 'index': 3, 'type': 'double', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'real'},
				                                       ],
				                                     },
				'quantityRemaining':                 { 'index': 4, 'type': 'double', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'real'},
				                                       ],
				                                     },
				'destinationSystemOwner':            { 'index': 5, 'type': 'string', # FIELD IS OBSOLETE
				                                       'meta-fields': [
					                                   {'field': 'obsolete' , 'value' : 'true'},
					                                   {'field': 'maxStringLength' , 'value' : '10'},
				                                       ],
				                                     },
				'owner':                             { 'index': 6, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '32'},
				                                       ],
				                                     },
				'destinationOwner':                  { 'index': 7, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '32'},
				                                       ],
				                                     },
				'exchangeOrderId':                   { 'index': 8, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '64'},
				                                       ],
				                                     },
				'opaqueOrderDataItemsAdd':           { 'index': 9, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', # FIELD IS OBSOLETE
				                                       'meta-fields': [
					                                   {'field': 'obsolete' , 'value' : 'true'},
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'opaqueOrderDataItemsRemove':        { 'index': 10, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', # FIELD IS OBSOLETE
				                                       'meta-fields': [
					                                   {'field': 'obsolete' , 'value' : 'true'},
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'opaqueOrderDataItemsToRemove':      { 'index': 11, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'opaqueOrderDataItemsToSet':         { 'index': 12, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'creatorMarketDataStamps':           { 'index': 13, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'informationBarrierId':              { 'index': 14, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '12'},
				                                       ],
				                                     },
				'tradingAlgorithmPrivateParameters': { 'index': 15, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '1024'},
				                                       ],
				                                     },
				'quantity':                          { 'index': 16, 'type': 'double', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'real'},
				                                       ],
				                                     },
				'appliedControlLayers':              { 'index': 17, 'type': 'table', 'tablename': 'AppliedControlLayer', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'outboundComment':                   { 'index': 18, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '128'},
				                                       ],
				                                     },
			}, 
		}, 
		'AcceptReserveLocateCommand': {
			'id': 377, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'posDupId': { 'index': 0, 'type': 'string', }, 
			}, 
		}, 
		'Account': {
			'id': 67, 
			'version': 4, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbMergeIntoChild' , 'value' : 'orders/pendingCorrection/orderInstructionData/accounts/accountAliases,orders/orderInstructionData/accounts/accountAliases,executions/executionData/accounts/accountAliases,orders/orderCorrection/diffToPrevious/accounts/accountAliases'},
			],
			'columns': {
				'accountAliases': { 'index': 0, 'type': 'table', 'tablename': 'AccountAlias', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'collection'},
				                    ],
				                  },
				'accountRole':    { 'index': 1, 'type': 'ubyte', 'enum': 'OmAccountRole', }, 
				'accountType':    { 'index': 2, 'type': 'ubyte', 'enum': 'OmAccountType', }, 
				'accountSubType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmAccountSubType', # FIELD IS OBSOLETE
				                    'meta-fields': [
					                {'field': 'obsolete' , 'value' : 'true'},
				                    ],
				                  },
				'entity':         { 'index': 4, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '9'},
				                    ],
				                  },
				'aggUnitName':    { 'index': 5, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '16'},
				                    ],
				                  },
			}, 
		}, 
		'AccountAlias': {
			'id': 39, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'accountSynonymType': { 'index': 0, 'type': 'ubyte', 'enum': 'OmAccountSynonymType', }, 
				'accountSynonym':     { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '50'},
				                        ],
				                      },
			}, 
		}, 
		'AcknowledgeSuspendedExecutionCommand': {
			'id': 350, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'executionId':        { 'index': 2, 'type': 'string', 'aliases': ['execId'], 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
			}, 
		}, 
		'AdminUpdateExecution': {
			'id': 106, 
			'version': 10, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'executionId':                  { 'index': 1, 'type': 'string', 'aliases': ['execId'], 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'orderId':                      { 'index': 2, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'executionStatus':              { 'index': 3, 'type': 'ubyte', 'enum': 'OmExecutionStatus', }, 
				'internalProductId':            { 'index': 4, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'internalProductIdType':        { 'index': 5, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'buySell':                      { 'index': 6, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'sellShort':                    { 'index': 7, 'type': 'bool', }, 
				'sellShortExempt':              { 'index': 8, 'type': 'bool', }, 
				'quantity':                     { 'index': 9, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'executionPrice':               { 'index': 10, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'executionNetPrice':            { 'index': 11, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'settlementPrice':              { 'index': 12, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'settlementNetPrice':           { 'index': 13, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'executionTime':                { 'index': 14, 'type': 'int', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                  ],
				                                },
				'executionTimeGmtOffset':       { 'index': 15, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'accounts':                     { 'index': 16, 'type': 'table', 'tablename': 'Account', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'accountsToAdd':                { 'index': 17, 'type': 'table', 'tablename': 'Account', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'accountsToRemove':             { 'index': 18, 'type': 'table', 'tablename': 'Account', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'settlementDateCalcMethod':     { 'index': 19, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'marketTradeDate':              { 'index': 20, 'type': 'int', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'date'},
				                                  ],
				                                },
				'settlementDate':               { 'index': 21, 'type': 'int', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                  ],
				                                },
				'executionCapacity':            { 'index': 22, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionPoint':               { 'index': 23, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '16'},
				                                  ],
				                                },
				'subExecutionPoint':            { 'index': 24, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '16'},
				                                  ],
				                                },
				'charges':                      { 'index': 25, 'type': 'table', 'tablename': 'Charge', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'chargesAdd':                   { 'index': 26, 'type': 'table', 'tablename': 'Charge', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'chargesRemove':                { 'index': 27, 'type': 'table', 'tablename': 'Charge', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'executionCurrency':            { 'index': 28, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '3'},
				                                  ],
				                                },
				'settlementCurrency':           { 'index': 29, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '3'},
				                                  ],
				                                },
				'exchangeRates':                { 'index': 30, 'type': 'table', 'tablename': 'ExchangeRate', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'exchangeRatesAdd':             { 'index': 31, 'type': 'table', 'tablename': 'ExchangeRate', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'exchangeRatesRemove':          { 'index': 32, 'type': 'table', 'tablename': 'ExchangeRate', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'useExternalReferenceTable':    { 'index': 33, 'type': 'bool', }, 
				'execExternalReferences':       { 'index': 34, 'type': 'table', 'tablename': 'ExternalReference', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'execExternalReferencesAdd':    { 'index': 35, 'type': 'table', 'tablename': 'ExternalReference', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'execExternalReferencesRemove': { 'index': 36, 'type': 'table', 'tablename': 'ExternalReference', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'useRelationshipTable':         { 'index': 37, 'type': 'bool', }, 
				'relatedEntities':              { 'index': 38, 'type': 'table', 'tablename': 'RelatedEntity', # FIELD HAS BEEN DEPRECATED
				                                  'meta-fields': [
					                              {'field': 'deprecated' , 'value' : 'true'},
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'relatedEntitiesAdd':           { 'index': 39, 'type': 'table', 'tablename': 'RelatedEntity', # FIELD HAS BEEN DEPRECATED
				                                  'meta-fields': [
					                              {'field': 'deprecated' , 'value' : 'true'},
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'relatedEntitiesRemove':        { 'index': 40, 'type': 'table', 'tablename': 'RelatedEntity', # FIELD HAS BEEN DEPRECATED
				                                  'meta-fields': [
					                              {'field': 'deprecated' , 'value' : 'true'},
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'executionTransactionType':     { 'index': 41, 'type': 'ubyte', 'enum': 'OmExecutionTransactionType', }, 
				'creatorId':                    { 'index': 42, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                  'meta-fields': [
					                              {'field': 'deprecated' , 'value' : 'true'},
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'settlementCalendar':           { 'index': 43, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '16'},
				                                  ],
				                                },
				'executionVenue':               { 'index': 44, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '16'},
				                                  ],
				                                },
				'counterPartyId':               { 'index': 45, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'executionTimeLocal':           { 'index': 46, 'type': 'int', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                  ],
				                                },
				'executionType':                { 'index': 47, 'type': 'ubyte', 'enum': 'OmExecutionType', }, 
				'tradeReportingType':           { 'index': 48, 'type': 'ubyte', 'enum': 'OmTradeReportingType', }, 
				'shouldPostEvent':              { 'index': 49, 'type': 'bool', }, 
				'eventPostDirection':           { 'index': 50, 'type': 'ubyte', 'enum': 'OmEventPostDirection', }, 
				'relatedEntityIndexes':         { 'index': 51, 'type': 'table', 'tablename': 'RelatedEntityIndex', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'relatedEntityIndexesAdd':      { 'index': 52, 'type': 'table', 'tablename': 'RelatedEntityIndex', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'relatedEntityIndexesRemove':   { 'index': 53, 'type': 'table', 'tablename': 'RelatedEntityIndex', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'liquidityIndicator':           { 'index': 54, 'type': 'ubyte', 'enum': 'OmLiquidityIndicatorType', }, 
				'clearingMemberId':             { 'index': 55, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '16'},
				                                  ],
				                                },
				'parameterizedExecutionPrice':  { 'index': 56, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'resolveAllPrices':             { 'index': 57, 'type': 'bool', }, 
				'intraEntityIndicator':         { 'index': 58, 'type': 'ubyte', 'enum': 'OmIntraEntityIndicator', }, 
				'originalPartyTypes':           { 'index': 59, 'type': 'ubyte', 'enum': 'OmOriginalPartyTypes', }, 
				'regNmsExemptionType':          { 'index': 60, 'type': 'ubyte', 'enum': 'OmRegNmsExemptionType', }, 
				'secShortSellExemptionReason':  { 'index': 61, 'type': 'ubyte', 'enum': 'OmSecShortSellExemptionReason', }, 
				'regRepCode':                   { 'index': 62, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '5'},
				                                  ],
				                                },
				'isReinstated':                 { 'index': 63, 'type': 'bool', }, 
				'referenceCharges':             { 'index': 64, 'type': 'table', 'tablename': 'Charge', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'referenceChargesAdd':          { 'index': 65, 'type': 'table', 'tablename': 'Charge', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'referenceChargesRemove':       { 'index': 66, 'type': 'table', 'tablename': 'Charge', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
			}, 
		}, 
		'AdminUpdateOrder': {
			'id': 105, 
			'version': 65, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                        { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                                          ],
				                                        },
				'orderId':                              { 'index': 1, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '29'},
				                                          ],
				                                        },
				'buySell':                              { 'index': 2, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'quantity':                             { 'index': 3, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'orderType':                            { 'index': 4, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'internalProductId':                    { 'index': 5, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '29'},
				                                          ],
				                                        },
				'internalProductIdType':                { 'index': 6, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'timeInForce':                          { 'index': 7, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'limitPrice':                           { 'index': 8, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'notHeld':                              { 'index': 9, 'type': 'bool', }, 
				'executionPointOverride':               { 'index': 10, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '16'},
				                                          ],
				                                        },
				'executionCurrency':                    { 'index': 11, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '3'},
				                                          ],
				                                        },
				'settlementCurrency':                   { 'index': 12, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '3'},
				                                          ],
				                                        },
				'maxTrancheSize':                       { 'index': 13, 'type': 'double', 'aliases': ['displaySize'], 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'orderCapacity':                        { 'index': 14, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':                           { 'index': 15, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':                        { 'index': 16, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'crossConsent':                         { 'index': 17, 'type': 'ubyte', 'enum': 'OmCrossingOption', }, 
				'productIdType':                        { 'index': 18, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'productId':                            { 'index': 19, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '100'},
				                                          ],
				                                        },
				'productIdMarket':                      { 'index': 20, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '4'},
				                                          ],
				                                        },
				'productIdCountry':                     { 'index': 21, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '2'},
				                                          ],
				                                        },
				'charges':                              { 'index': 22, 'type': 'table', 'tablename': 'Charge', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'chargesAdd':                           { 'index': 23, 'type': 'table', 'tablename': 'Charge', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'chargesRemove':                        { 'index': 24, 'type': 'table', 'tablename': 'Charge', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'stopPrice':                            { 'index': 25, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'settlementDateCalcMethod':             { 'index': 26, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'settlementDate':                       { 'index': 27, 'type': 'int', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                          ],
				                                        },
				'startDateTime':                        { 'index': 28, 'type': 'int', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                          ],
				                                        },
				'expirationDateTime':                   { 'index': 29, 'type': 'int', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                          ],
				                                        },
				'sellShort':                            { 'index': 30, 'type': 'bool', }, 
				'sellShortExempt':                      { 'index': 31, 'type': 'bool', }, 
				'positionOpenClose':                    { 'index': 32, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'tradingAlgorithm':                     { 'index': 33, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '32'},
				                                          ],
				                                        },
				'capitalCommitQuantity':                { 'index': 34, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'capitalCommitPrice':                   { 'index': 35, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'protectionType':                       { 'index': 36, 'type': 'ubyte', 'enum': 'OmProtectionType', }, 
				'verbalAgreementTimestamp':             { 'index': 37, 'type': 'int', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                          ],
				                                        },
				'capitalCommitTime':                    { 'index': 38, 'type': 'int', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                          ],
				                                        },
				'capitalCommitType':                    { 'index': 39, 'type': 'ubyte', 'enum': 'OmCapitalCommitType', }, 
				'comments':                             { 'index': 40, 'type': 'table', 'tablename': 'Comment', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'commentsAdd':                          { 'index': 41, 'type': 'table', 'tablename': 'Comment', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'commentsRemove':                       { 'index': 42, 'type': 'table', 'tablename': 'Comment', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'clientConsents':                       { 'index': 43, 'type': 'ubyte', 'enum': 'OmClientConsents', }, 
				'allOrNone':                            { 'index': 44, 'type': 'bool', }, 
				'customerOeId':                         { 'index': 45, 'type': 'string', 'aliases': ['customerOeid'], 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '32'},
				                                          ],
				                                        },
				'customerUser':                         { 'index': 46, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '32'},
				                                          ],
				                                        },
				'fixLineId':                            { 'index': 47, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '32'},
				                                          ],
				                                        },
				'accounts':                             { 'index': 48, 'type': 'table', 'tablename': 'Account', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'accountsToAdd':                        { 'index': 49, 'type': 'table', 'tablename': 'Account', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'accountsToRemove':                     { 'index': 50, 'type': 'table', 'tablename': 'Account', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'customerFixAcronym':                   { 'index': 51, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '20'},
				                                          ],
				                                        },
				'allocationAccounts':                   { 'index': 52, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'allocationAccountsAdd':                { 'index': 53, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'allocationAccountsRemove':             { 'index': 54, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'fixTextInstruction':                   { 'index': 55, 'type': 'string', 'aliases': ['clientAccountName','clientFixAccount'], 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '32'},
				                                          ],
				                                        },
				'traderExchangeId':                     { 'index': 56, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '30'},
				                                          ],
				                                        },
				'ignoreOddLotCheck':                    { 'index': 57, 'type': 'bool', }, 
				'ignoreAggressionCheck':                { 'index': 58, 'type': 'bool', }, 
				'contractForDifferences':               { 'index': 59, 'type': 'bool', }, 
				'operationsDesk':                       { 'index': 60, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '20'},
				                                          ],
				                                        },
				'serviceOffering':                      { 'index': 61, 'type': 'ubyte', 'enum': 'OmServiceOffering', }, 
				'bookingFlowStyle':                     { 'index': 62, 'type': 'ubyte', 'enum': 'OmBookingFlowStyle', }, 
				'eligibleForAutoCombine':               { 'index': 63, 'type': 'bool', }, 
				'isElectronicBooking':                  { 'index': 64, 'type': 'bool', }, 
				'smartRouteConsent':                    { 'index': 65, 'type': 'ubyte', 'enum': 'OmSmartRoutingOption', }, 
				'siEligibility':                        { 'index': 66, 'type': 'ubyte', 'enum': 'OmSiEligibility', }, 
				'pegOffset':                            { 'index': 67, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'minExecutableQuantity':                { 'index': 68, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'reportingVenue':                       { 'index': 69, 'type': 'ubyte', 'enum': 'OmReportingVenue', }, 
				'primaryStatus':                        { 'index': 70, 'type': 'ubyte', 'enum': 'OmPrimaryStatus', }, 
				'useExternalReferenceTable':            { 'index': 71, 'type': 'bool', }, 
				'externalReferences':                   { 'index': 72, 'type': 'table', 'tablename': 'ExternalReference', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'externalReferencesAdd':                { 'index': 73, 'type': 'table', 'tablename': 'ExternalReference', # FIELD HAS BEEN DEPRECATED
				                                          'meta-fields': [
					                                      {'field': 'deprecated' , 'value' : 'true'},
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'externalReferencesRemove':             { 'index': 74, 'type': 'table', 'tablename': 'ExternalReference', # FIELD HAS BEEN DEPRECATED
				                                          'meta-fields': [
					                                      {'field': 'deprecated' , 'value' : 'true'},
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'useRelationshipTable':                 { 'index': 75, 'type': 'bool', }, 
				'relatedEntities':                      { 'index': 76, 'type': 'table', 'tablename': 'RelatedEntity', # FIELD HAS BEEN DEPRECATED
				                                          'meta-fields': [
					                                      {'field': 'deprecated' , 'value' : 'true'},
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'relatedEntitiesAdd':                   { 'index': 77, 'type': 'table', 'tablename': 'RelatedEntity', # FIELD HAS BEEN DEPRECATED
				                                          'meta-fields': [
					                                      {'field': 'deprecated' , 'value' : 'true'},
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'relatedEntitiesRemove':                { 'index': 78, 'type': 'table', 'tablename': 'RelatedEntity', # FIELD HAS BEEN DEPRECATED
				                                          'meta-fields': [
					                                      {'field': 'deprecated' , 'value' : 'true'},
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'routeStatus':                          { 'index': 79, 'type': 'ubyte', 'enum': 'OmRouteStatus', }, 
				'messageId':                            { 'index': 80, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '64'},
				                                          ],
				                                        },
				'correctionStatus':                     { 'index': 81, 'type': 'ubyte', 'enum': 'OmCorrectionStatus', }, 
				'completionReason':                     { 'index': 82, 'type': 'ubyte', 'enum': 'OmCompletionReason', }, 
				'cancelStatus':                         { 'index': 83, 'type': 'ubyte', 'enum': 'OmCancelStatus', }, 
				'executedQuantity':                     { 'index': 84, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'quantityRemaining':                    { 'index': 85, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'dailyExecutedQuantity':                { 'index': 86, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'averagePrice':                         { 'index': 87, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'averageNetPrice':                      { 'index': 88, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'splitQuantity':                        { 'index': 89, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'splitQuantityRemaining':               { 'index': 90, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'splitQuantityExecuted':                { 'index': 91, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'quantityExecutedFromChildren':         { 'index': 92, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'splitQuantityAveragePrice':            { 'index': 93, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'rejectingSystem':                      { 'index': 94, 'type': 'ubyte', 'enum': 'OmRejectingSystem', }, 
				'splitQuantityAverageNetPrice':         { 'index': 95, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'splitQuantityUnsent':                  { 'index': 96, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'unsentAcceptCancel':                   { 'index': 97, 'type': 'bool', }, 
				'cancelAcceptExecutedQuantity':         { 'index': 98, 'type': 'int', }, 
				'createDateTime':                       { 'index': 99, 'type': 'int', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                          ],
				                                        },
				'smartRouter':                          { 'index': 100, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '12'},
				                                          ],
				                                        },
				'orderBook':                            { 'index': 101, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '12'},
				                                          ],
				                                        },
				'parentsSmartRouter':                   { 'index': 102, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '12'},
				                                          ],
				                                        },
				'gamePlanType':                         { 'index': 103, 'type': 'ubyte', 'enum': 'OmGamePlanType', }, 
				'childQuantityPending':                 { 'index': 104, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'childQuantityRejected':                { 'index': 105, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'childQuantityOpen':                    { 'index': 106, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'childQuantityPendingCorrect':          { 'index': 107, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'childQuantityCorrectAccepted':         { 'index': 108, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'childQuantityCorrectRejected':         { 'index': 109, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'childQuantityPendingCancel':           { 'index': 110, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'childQuantityCancelAccepted':          { 'index': 111, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'childQuantityCancelRejected':          { 'index': 112, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'exchangeExecutedQuantity':             { 'index': 113, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'shouldPostEvent':                      { 'index': 114, 'type': 'bool', }, 
				'eventPostDirection':                   { 'index': 115, 'type': 'ubyte', 'enum': 'OmEventPostDirection', }, 
				'sourceSystemName':                     { 'index': 116, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '32'},
				                                          ],
				                                        },
				'sourceSystemType':                     { 'index': 117, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'destinationSystemName':                { 'index': 118, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '32'},
				                                          ],
				                                        },
				'destinationSystemType':                { 'index': 119, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'minDiscretionaryQuantity':             { 'index': 120, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'minSpreadConstraint':                  { 'index': 121, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'maxSpreadConstraint':                  { 'index': 122, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'isSalesManagedOrder':                  { 'index': 123, 'type': 'bool', }, 
				'isTraderAssignmentOrder':              { 'index': 124, 'type': 'bool', }, 
				'isTraderManagedOrder':                 { 'index': 125, 'type': 'bool', }, 
				'isInternallyRoutableOrder':            { 'index': 126, 'type': 'bool', }, 
				'creatorId':                            { 'index': 127, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                          'meta-fields': [
					                                      {'field': 'deprecated' , 'value' : 'true'},
					                                      {'field': 'maxStringLength' , 'value' : '29'},
				                                          ],
				                                        },
				'clientProductId':                      { 'index': 128, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '64'},
				                                          ],
				                                        },
				'subExecutionPointOverride':            { 'index': 129, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '16'},
				                                          ],
				                                        },
				'isTradingChildOrder':                  { 'index': 130, 'type': 'bool', }, 
				'accessId':                             { 'index': 131, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '29'},
				                                          ],
				                                        },
				'relatedEntityIndexes':                 { 'index': 132, 'type': 'table', 'tablename': 'RelatedEntityIndex', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'relatedEntityIndexesAdd':              { 'index': 133, 'type': 'table', 'tablename': 'RelatedEntityIndex', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'relatedEntityIndexesRemove':           { 'index': 134, 'type': 'table', 'tablename': 'RelatedEntityIndex', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'gamePlanState':                        { 'index': 135, 'type': 'int', }, 
				'cancelNewStatus':                      { 'index': 136, 'type': 'ubyte', 'enum': 'OmCancelNewStatus', }, 
				'cancelNewVersion':                     { 'index': 137, 'type': 'uint', }, 
				'tradingPhase':                         { 'index': 138, 'type': 'ubyte', 'enum': 'OmTradingPhase', # FIELD HAS BEEN DEPRECATED
				                                          'meta-fields': [
					                                      {'field': 'deprecated' , 'value' : 'true'},
				                                          ],
				                                        },
				'liquidityIndicator':                   { 'index': 139, 'type': 'ubyte', 'enum': 'OmLiquidityIndicatorType', # FIELD IS OBSOLETE
				                                          'meta-fields': [
					                                      {'field': 'obsolete' , 'value' : 'true'},
				                                          ],
				                                        },
				'routingStrategy':                      { 'index': 140, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '50'},
				                                          ],
				                                        },
				'clearingMemberId':                     { 'index': 141, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '16'},
				                                          ],
				                                        },
				'doNotIncrease':                        { 'index': 142, 'type': 'bool', }, 
				'doNotReduce':                          { 'index': 143, 'type': 'bool', }, 
				'interMarketSweep':                     { 'index': 144, 'type': 'bool', }, 
				'destinationMarketOnly':                { 'index': 145, 'type': 'bool', }, 
				'accessIdType':                         { 'index': 146, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'partOfProgram':                        { 'index': 147, 'type': 'bool', }, 
				'arbitrageStrategy':                    { 'index': 148, 'type': 'ubyte', 'enum': 'OmArbitrageStrategy', }, 
				'algorithmicIndicator':                 { 'index': 149, 'type': 'ubyte', 'enum': 'OmAlgorithmicIndicator', }, 
				'trancheSizeDisplayRange':              { 'index': 150, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'shouldIndicateOrder':                  { 'index': 151, 'type': 'bool', }, 
				'indicationQuantity':                   { 'index': 152, 'type': 'int', }, 
				'ignoreImbalanceCheck':                 { 'index': 153, 'type': 'bool', }, 
				'tradeViaInternalAlgorithm':            { 'index': 154, 'type': 'bool', }, 
				'minimumDisplaySize':                   { 'index': 155, 'type': 'double', # FIELD IS OBSOLETE
				                                          'meta-fields': [
					                                      {'field': 'obsolete' , 'value' : 'true'},
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'maximumDisplaySize':                   { 'index': 156, 'type': 'double', # FIELD IS OBSOLETE
				                                          'meta-fields': [
					                                      {'field': 'obsolete' , 'value' : 'true'},
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'sigmaAlgorithm':                       { 'index': 157, 'type': 'ubyte', 'enum': 'OmSigmaAlgorithm', }, 
				'sigmaAlgorithmParameters':             { 'index': 158, 'type': 'table', 'tablename': 'SigmaAlgorithmParameter', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'dropCopyOms':                          { 'index': 159, 'type': 'string', }, 
				'parameterizedLimitPrice':              { 'index': 160, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                                          ],
				                                        },
				'resolveAllPrices':                     { 'index': 161, 'type': 'bool', }, 
				'isGsamAdvisory':                       { 'index': 162, 'type': 'bool', }, 
				'isSolicitedOrder':                     { 'index': 163, 'type': 'bool', }, 
				'isPartialOutEligible':                 { 'index': 164, 'type': 'bool', }, 
				'interventionConsent':                  { 'index': 165, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
				'brokerBillingType':                    { 'index': 166, 'type': 'ubyte', 'enum': 'OmBrokerBillingType', }, 
				'aggUnitName':                          { 'index': 167, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                          'meta-fields': [
					                                      {'field': 'deprecated' , 'value' : 'true'},
					                                      {'field': 'maxStringLength' , 'value' : '16'},
				                                          ],
				                                        },
				'restrictedTradingListOverride':        { 'index': 168, 'type': 'table', 'tablename': 'RestrictedTradingListOverride', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                                          ],
				                                        },
				'firstExecutionTime':                   { 'index': 169, 'type': 'int', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                          ],
				                                        },
				'firstExecutionTimeMicrosecond':        { 'index': 170, 'type': 'int', }, 
				'orderCompletionTime':                  { 'index': 171, 'type': 'int', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                          ],
				                                        },
				'orderCompletionTimeMicrosecond':       { 'index': 172, 'type': 'int', }, 
				'profitSplitOption':                    { 'index': 173, 'type': 'ubyte', 'enum': 'OmProfitSplitOption', }, 
				'facilitatedOrders':                    { 'index': 174, 'type': 'table', 'tablename': 'OrderId', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'facilitatingOrders':                   { 'index': 175, 'type': 'table', 'tablename': 'OrderId', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'primaryPartyType':                     { 'index': 176, 'type': 'ubyte', 'enum': 'OmPrimaryPartyType', }, 
				'customerPartyType':                    { 'index': 177, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'visibilityGroups':                     { 'index': 178, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'sendWithheld':                         { 'index': 179, 'type': 'bool', }, 
				'regNmsExemptionType':                  { 'index': 180, 'type': 'ubyte', 'enum': 'OmRegNmsExemptionType', }, 
				'currentOwner':                         { 'index': 181, 'type': 'string', # FIELD IS OBSOLETE
				                                          'meta-fields': [
					                                      {'field': 'obsolete' , 'value' : 'true'},
					                                      {'field': 'maxStringLength' , 'value' : '10'},
				                                          ],
				                                        },
				'sourceSystemOwner':                    { 'index': 182, 'type': 'string', # FIELD IS OBSOLETE
				                                          'meta-fields': [
					                                      {'field': 'obsolete' , 'value' : 'true'},
					                                      {'field': 'maxStringLength' , 'value' : '10'},
				                                          ],
				                                        },
				'destinationSystemOwner':               { 'index': 183, 'type': 'string', # FIELD IS OBSOLETE
				                                          'meta-fields': [
					                                      {'field': 'obsolete' , 'value' : 'true'},
					                                      {'field': 'maxStringLength' , 'value' : '10'},
				                                          ],
				                                        },
				'clientConsentsName':                   { 'index': 184, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '30'},
				                                          ],
				                                        },
				'regulatoryReportDomain':               { 'index': 185, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'sourceRegulatoryReportDomain':         { 'index': 186, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'destinationOwner':                     { 'index': 187, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '32'},
				                                          ],
				                                        },
				'owner':                                { 'index': 188, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '32'},
				                                          ],
				                                        },
				'sourceOwner':                          { 'index': 189, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '20'},
				                                          ],
				                                        },
				'shouldAdvertiseExecutions':            { 'index': 190, 'type': 'bool', }, 
				'locateRequesterIdPreferenceList':      { 'index': 191, 'type': 'table', 'tablename': 'LocateRequesterIdPreferenceListMember', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'marketSession':                        { 'index': 192, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'childCount':                           { 'index': 193, 'type': 'int', }, 
				'smartRouterReworkCount':               { 'index': 194, 'type': 'int', }, 
				'clientOrderCapacity':                  { 'index': 195, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'locateInformationList':                { 'index': 196, 'type': 'table', 'tablename': 'LocateInformation', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'locateInformationsToAdd':              { 'index': 197, 'type': 'table', 'tablename': 'LocateInformation', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'locateInformationsToRemove':           { 'index': 198, 'type': 'table', 'tablename': 'LocateInformation', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'locateRequesterIdPreferencesToAdd':    { 'index': 199, 'type': 'table', 'tablename': 'LocateRequesterIdPreferenceListMember', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'locateRequesterIdPreferencesToRemove': { 'index': 200, 'type': 'table', 'tablename': 'LocateRequesterIdPreferenceListMember', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'tsorAlgorithm':                        { 'index': 201, 'type': 'string', # FIELD IS OBSOLETE
				                                          'meta-fields': [
					                                      {'field': 'obsolete' , 'value' : 'true'},
					                                      {'field': 'maxStringLength' , 'value' : '16'},
				                                          ],
				                                        },
				'tsorAlgorithmParameters':              { 'index': 202, 'type': 'string', # FIELD IS OBSOLETE
				                                          'meta-fields': [
					                                      {'field': 'obsolete' , 'value' : 'true'},
					                                      {'field': 'maxStringLength' , 'value' : '128'},
				                                          ],
				                                        },
				'tradingAlgorithmEngine':               { 'index': 203, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '32'},
				                                          ],
				                                        },
				'secShortSellExemptionReason':          { 'index': 204, 'type': 'ubyte', 'enum': 'OmSecShortSellExemptionReason', }, 
				'indicationPolicyParameters':           { 'index': 205, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '20'},
				                                          ],
				                                        },
				'provideLiquidityOnly':                 { 'index': 206, 'type': 'bool', }, 
				'testCaseOverrideId':                   { 'index': 207, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '29'},
				                                          ],
				                                        },
				'consolidatedRegulatoryCode':           { 'index': 208, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'advertisingPolicyParameters':          { 'index': 209, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '20'},
				                                          ],
				                                        },
				'targetQuoteId':                        { 'index': 210, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '32'},
				                                          ],
				                                        },
				'disableProductLookup':                 { 'index': 211, 'type': 'bool', }, 
				'fixClientInformation':                 { 'index': 212, 'type': 'table', 'tablename': 'FixClientInformation', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                                          ],
				                                        },
				'brokerDealerOatsAttributes':           { 'index': 213, 'type': 'table', 'tablename': 'BrokerDealerOatsAttributes', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                                          ],
				                                        },
				'isLateAuctionOrder':                   { 'index': 214, 'type': 'bool', }, 
				'approvalInformationsToAdd':            { 'index': 215, 'type': 'table', 'tablename': 'ApprovalInformation', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'approvalInformationsToRemove':         { 'index': 216, 'type': 'table', 'tablename': 'ApprovalInformation', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'regRepCode':                           { 'index': 217, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '5'},
				                                          ],
				                                        },
				'customerOeIdType':                     { 'index': 218, 'type': 'ubyte', 'enum': 'OmOrganizationalEntityIdType', }, 
				'parentGamePlanType':                   { 'index': 219, 'type': 'ubyte', 'enum': 'OmGamePlanType', }, 
				'externalReferencesToRemove':           { 'index': 220, 'type': 'table', 'tablename': 'ExternalReference', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'externalReferencesToAdd':              { 'index': 221, 'type': 'table', 'tablename': 'ExternalReference', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'isCompositeOrder':                     { 'index': 222, 'type': 'bool', }, 
				'isCompositeLegOrder':                  { 'index': 223, 'type': 'bool', }, 
				'isOptionStrategyEquityLeg':            { 'index': 224, 'type': 'bool', }, 
				'capitalCommitCategory':                { 'index': 225, 'type': 'ubyte', 'enum': 'OmCapitalCommitCategory', }, 
				'clientAlgorithmCategory':              { 'index': 226, 'type': 'ubyte', 'enum': 'OmClientAlgorithmCategory', }, 
				'isReinstated':                         { 'index': 227, 'type': 'bool', }, 
				'averagePriceInExecutionCurrency':      { 'index': 228, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'clientCustomerPartyType':              { 'index': 229, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'relatedOptionOrderExternalReferences': { 'index': 230, 'type': 'table', 'tablename': 'ExternalReference', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'externalTradingAlgorithmDetails':      { 'index': 231, 'type': 'table', 'tablename': 'ExternalTradingAlgorithmDetails', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                                          ],
				                                        },
				'clientAccessId':                       { 'index': 232, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '29'},
				                                          ],
				                                        },
				'referenceCharges':                     { 'index': 233, 'type': 'table', 'tablename': 'Charge', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'referenceChargesAdd':                  { 'index': 234, 'type': 'table', 'tablename': 'Charge', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'referenceChargesRemove':               { 'index': 235, 'type': 'table', 'tablename': 'Charge', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'isClientRequestedSendWithheldOrder':   { 'index': 236, 'type': 'bool', }, 
				'clientPrincipalType':                  { 'index': 237, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'minExecutableNotionalValue':           { 'index': 238, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'minSingleExecutionQuantity':           { 'index': 239, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
				'minSingleExecutionNotionalValue':      { 'index': 240, 'type': 'double', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'real'},
				                                          ],
				                                        },
			}, 
		}, 
		'AdminUpdateOrderCommandContext': {
			'id': 675, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'shouldPostEvent':    { 'index': 0, 'type': 'bool', }, 
				'eventPostDirection': { 'index': 1, 'type': 'ubyte', 'enum': 'OmEventPostDirection', }, 
			}, 
		}, 
		'AdvisorApplyPlacementsCommand': {
			'id': 531, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':        { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'orderId':              { 'index': 1, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'advisorPlacementData': { 'index': 2, 'type': 'table', 'tablename': 'AdvisorPlacementData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
			}, 
		}, 
		'AdvisorPlacementData': {
			'id': 530, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'placementDetails':        { 'index': 0, 'type': 'table', 'tablename': 'PlacementDetail', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'advisorPlacementTimeout': { 'index': 1, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'isFinalAdvisorPlacement': { 'index': 2, 'type': 'bool', }, 
			}, 
		}, 
		'AdvisorRequestPlacementsCommand': {
			'id': 529, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':              { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
				'orderId':                    { 'index': 1, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'version':                    { 'index': 2, 'type': 'int', }, 
				'marketParticipantId':        { 'index': 3, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '4'},
				                                ],
				                              },
				'accessId':                   { 'index': 4, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'buySell':                    { 'index': 5, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'sellShort':                  { 'index': 6, 'type': 'bool', }, 
				'sellShortExempt':            { 'index': 7, 'type': 'bool', }, 
				'productId':                  { 'index': 8, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '100'},
				                                ],
				                              },
				'productIdType':              { 'index': 9, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'quantityRemaining':          { 'index': 10, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'orderType':                  { 'index': 11, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'timeInForce':                { 'index': 12, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'limitPrice':                 { 'index': 13, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'createDateTime':             { 'index': 14, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'createDateTimeMicroseconds': { 'index': 15, 'type': 'int', }, 
				'bidPrice':                   { 'index': 16, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'askPrice':                   { 'index': 17, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'stopPrice':                  { 'index': 18, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
			}, 
		}, 
		'AggUnitPositionStamp': {
			'id': 353, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'aggUnitName':     { 'index': 0, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '16'},
				                     ],
				                   },
				'aggUnitPosition': { 'index': 1, 'type': 'double', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'real'},
				                     ],
				                   },
				'productId':       { 'index': 2, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '100'},
				                     ],
				                   },
				'productIdType':   { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'marketDataState': { 'index': 4, 'type': 'ubyte', 'enum': 'OmMarketDataState', }, 
			}, 
		}, 
		'AllocationAccount': {
			'id': 35, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'accountId':          { 'index': 0, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '50'},
				                        ],
				                      },
				'allocationQuantity': { 'index': 1, 'type': 'double', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'real'},
				                        ],
				                      },
			}, 
		}, 
		'ApolloAdaptorStatus': {
			'id': 415, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'adaptorName':   { 'index': 0, 'type': 'string', }, 
				'adaptorStatus': { 'index': 1, 'type': 'ubyte', 'enum': 'OmApolloAdaptorState', }, 
			}, 
		}, 
		'ApolloOrderReinstateCommand': {
			'id': 719, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'fixLineId':                { 'index': 0, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '32'},
				                              ],
				                            },
				'externalReferences':       { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'apolloTurnaroundInfoList': { 'index': 2, 'type': 'table', 'tablename': 'ApolloTurnaroundInfo', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
			}, 
		}, 
		'ApolloOrderStatus': {
			'id': 72, 
			'version': 36, 
			'publishable': 'true', 
			'columns': {
				'orderId':                          { 'index': 0, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '29'},
				                                      ],
				                                    },
				'buySell':                          { 'index': 1, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'quantity':                         { 'index': 2, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'orderType':                        { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'timeInForce':                      { 'index': 4, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'limitPrice':                       { 'index': 5, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'notHeld':                          { 'index': 6, 'type': 'bool', }, 
				'maxTrancheSize':                   { 'index': 7, 'type': 'double', 'aliases': ['displaySize'], 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'orderCapacity':                    { 'index': 8, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':                       { 'index': 9, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':                    { 'index': 10, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'productIdType':                    { 'index': 11, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'productId':                        { 'index': 12, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '100'},
				                                      ],
				                                    },
				'stopPrice':                        { 'index': 13, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'settlementDateCalcMethod':         { 'index': 14, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'settlementDate':                   { 'index': 15, 'type': 'int', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                      ],
				                                    },
				'expirationDateTime':               { 'index': 16, 'type': 'int', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                      ],
				                                    },
				'sellShort':                        { 'index': 17, 'type': 'bool', }, 
				'sellShortExempt':                  { 'index': 18, 'type': 'bool', }, 
				'positionOpenClose':                { 'index': 19, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'comments':                         { 'index': 20, 'type': 'table', 'tablename': 'Comment', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'allOrNone':                        { 'index': 21, 'type': 'bool', }, 
				'useExternalReferenceTable':        { 'index': 22, 'type': 'bool', # FIELD IS OBSOLETE
				                                      'meta-fields': [
					                                  {'field': 'obsolete' , 'value' : 'true'},
				                                      ],
				                                    },
				'externalReferences':               { 'index': 23, 'type': 'table', 'tablename': 'ExternalReference', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'executedQuantity':                 { 'index': 24, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'quantityRemaining':                { 'index': 25, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'averagePrice':                     { 'index': 26, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'averageNetPrice':                  { 'index': 27, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'eventTime':                        { 'index': 28, 'type': 'int', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                      ],
				                                    },
				'creatorId':                        { 'index': 29, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                      'meta-fields': [
					                                  {'field': 'deprecated' , 'value' : 'true'},
					                                  {'field': 'maxStringLength' , 'value' : '29'},
				                                      ],
				                                    },
				'rejectReasons':                    { 'index': 30, 'type': 'table', 'tablename': 'RejectReason', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'execId':                           { 'index': 31, 'type': 'string', 'aliases': ['executionId'], 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '29'},
				                                      ],
				                                    },
				'executionQuantity':                { 'index': 32, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'executionPrice':                   { 'index': 33, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'executionNetPrice':                { 'index': 34, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'settlementPrice':                  { 'index': 35, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'settlementNetPrice':               { 'index': 36, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'executionTime':                    { 'index': 37, 'type': 'int', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                      ],
				                                    },
				'executionCapacity':                { 'index': 38, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionPoint':                   { 'index': 39, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '16'},
				                                      ],
				                                    },
				'subExecutionPoint':                { 'index': 40, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '16'},
				                                      ],
				                                    },
				'fixOrderStatus':                   { 'index': 41, 'type': 'ubyte', 'enum': 'OmFixOrderStatus', }, 
				'originalFixMessage':               { 'index': 42, 'type': 'binary', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'blob'},
				                                      ],
				                                    },
				'oldExternalReferences':            { 'index': 43, 'type': 'table', 'tablename': 'ExternalReference', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'fixLineId':                        { 'index': 44, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '32'},
				                                      ],
				                                    },
				'fixExecutionId':                   { 'index': 45, 'type': 'string', }, 
				'oldFixExecutionId':                { 'index': 46, 'type': 'string', }, 
				'executionTransactionType':         { 'index': 47, 'type': 'ubyte', 'enum': 'OmExecutionTransactionType', }, 
				'executionCurrency':                { 'index': 48, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '3'},
				                                      ],
				                                    },
				'settlementCurrency':               { 'index': 49, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '3'},
				                                      ],
				                                    },
				'fixExecType':                      { 'index': 50, 'type': 'ubyte', 'enum': 'OmFixOrderStatus', }, 
				'executionType':                    { 'index': 51, 'type': 'ubyte', 'enum': 'OmExecutionType', }, 
				'customerUser':                     { 'index': 52, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '32'},
				                                      ],
				                                    },
				'executionVenue':                   { 'index': 53, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '16'},
				                                      ],
				                                    },
				'tradeReportingType':               { 'index': 54, 'type': 'ubyte', 'enum': 'OmTradeReportingType', }, 
				'executionTimeLocal':               { 'index': 55, 'type': 'int', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                      ],
				                                    },
				'clientProductId':                  { 'index': 56, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '64'},
				                                      ],
				                                    },
				'complianceOrderId':                { 'index': 57, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '200'},
				                                      ],
				                                    },
				'buyToCover':                       { 'index': 58, 'type': 'bool', }, 
				'locateInformationList':            { 'index': 59, 'type': 'table', 'tablename': 'LocateInformation', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'liquidityIndicator':               { 'index': 60, 'type': 'ubyte', 'enum': 'OmLiquidityIndicatorType', }, 
				'executionLastMarket':              { 'index': 61, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '16'},
				                                      ],
				                                    },
				'nyseBillingIndicator':             { 'index': 62, 'type': 'ubyte', 'enum': 'OmNyseBillingIndicator', }, 
				'commandHeader':                    { 'index': 63, 'type': 'table', 'tablename': 'CommandHeader', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'clientAccountName':                { 'index': 64, 'type': 'string', 'aliases': ['clientFixAccount','fixTextInstruction'], 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '32'},
				                                      ],
				                                    },
				'accessId':                         { 'index': 65, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '29'},
				                                      ],
				                                    },
				'counterPartyId':                   { 'index': 66, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '29'},
				                                      ],
				                                    },
				'clientProductIdSuffix':            { 'index': 67, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '8'},
				                                      ],
				                                    },
				'apolloOrderStatusInternal':        { 'index': 68, 'type': 'table', 'tablename': 'ApolloOrderStatusInternal', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'exchangeBillingCode':              { 'index': 69, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '7'},
				                                      ],
				                                    },
				'exchangeAccessFee':                { 'index': 70, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'executionTimeMicrosecond':         { 'index': 71, 'type': 'int', }, 
				'crossPartyOrderCapacity':          { 'index': 72, 'type': 'table', 'tablename': 'CrossPartyOrderCapacity', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'isExecFromDarkOrder':              { 'index': 73, 'type': 'bool', }, 
				'exchangeRate':                     { 'index': 74, 'type': 'table', 'tablename': 'ExchangeRate', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'vikingOrderId':                    { 'index': 75, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '29'},
				                                      ],
				                                    },
				'marketSession':                    { 'index': 76, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'exchangeExecutionId':              { 'index': 77, 'type': 'string', }, 
				'whiteLabelDataId':                 { 'index': 78, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '20'},
				                                      ],
				                                    },
				'marginType':                       { 'index': 79, 'type': 'ubyte', 'enum': 'OmMarginType', }, 
				'flowSpecificCanada':               { 'index': 80, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'execFlowSpecificCanada':           { 'index': 81, 'type': 'table', 'tablename': 'ExecFlowSpecificCanada', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'fixClientInformation':             { 'index': 82, 'type': 'table', 'tablename': 'FixClientInformation', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'brokerDealerOatsAttributes':       { 'index': 83, 'type': 'table', 'tablename': 'BrokerDealerOatsAttributes', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'dropCopyFixClientInformationList': { 'index': 84, 'type': 'table', 'tablename': 'FixClientInformation', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'destinationTraderId':              { 'index': 85, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '30'},
				                                      ],
				                                    },
				'destinationMembershipId':          { 'index': 86, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '30'},
				                                      ],
				                                    },
				'partOfProgram':                    { 'index': 87, 'type': 'bool', }, 
				'hideMembershipIdAtDestination':    { 'index': 88, 'type': 'bool', }, 
				'isCompositeOrder':                 { 'index': 89, 'type': 'bool', }, 
				'isCompositeLegOrder':              { 'index': 90, 'type': 'bool', }, 
				'compositeExternalReference':       { 'index': 91, 'type': 'table', 'tablename': 'ExternalReference', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'oldCompositeExternalReference':    { 'index': 92, 'type': 'table', 'tablename': 'ExternalReference', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'fixOrderAttributes':               { 'index': 93, 'type': 'table', 'tablename': 'FixOrderAttributes', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'averagePriceInExecutionCurrency':  { 'index': 94, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'apolloTurnaroundInfoList':         { 'index': 95, 'type': 'table', 'tablename': 'ApolloTurnaroundInfo', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'averageExchangeRate':              { 'index': 96, 'type': 'table', 'tablename': 'ExchangeRate', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
			}, 
		}, 
		'ApolloOrderStatusInternal': {
			'id': 359, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'accounts': { 'index': 0, 'type': 'table', 'tablename': 'Account', 
				              'meta-fields': [
					          {'field': 'dictionaryType' , 'value' : 'collection'},
				              ],
				            },
			}, 
		}, 
		'ApolloReverseRouteLookupBySequenceNumber': {
			'id': 414, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'destinationAdaptorName': { 'index': 0, 'type': 'string', }, 
				'sequenceNumber':         { 'index': 1, 'type': 'int', }, 
				'tradingSessionId':       { 'index': 2, 'type': 'int', }, 
				'apolloInternalId':       { 'index': 3, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '55'},
				                            ],
				                          },
			}, 
		}, 
		'ApolloRouteLookup': {
			'id': 413, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'apolloInternalId':       { 'index': 0, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '55'},
				                            ],
				                          },
				'messageUniqueId':        { 'index': 1, 'type': 'string', }, 
				'tradingSessionId':       { 'index': 2, 'type': 'int', }, 
				'sourceAdaptorName':      { 'index': 3, 'type': 'string', }, 
				'destinationAdaptorName': { 'index': 4, 'type': 'string', }, 
			}, 
		}, 
		'ApolloTurnaroundInfo': {
			'id': 718, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'apolloTurnaroundTag':   { 'index': 0, 'type': 'int', }, 
				'apolloTurnaroundValue': { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '256'},
				                           ],
				                         },
			}, 
		}, 
		'AppliedControlLayer': {
			'id': 693, 
			'version': 12, 
			'publishable': 'true', 
			'columns': {
				'controlSystem':                              { 'index': 0, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'controlLayer':                               { 'index': 1, 'type': 'ubyte', 'enum': 'OmControlLayer', }, 
				'sizeNotionalUSDResult':                      { 'index': 2, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'sizeADVResult':                              { 'index': 3, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'priceAggressiveResult':                      { 'index': 4, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'pricePassiveResult':                         { 'index': 5, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'transactionFrequencyResult':                 { 'index': 6, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'extantOrdersPerVenueResult':                 { 'index': 7, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'compoundSizeControlResult':                  { 'index': 8, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'eventFrequencyResult':                       { 'index': 9, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'childPriceAggressivenessResult':             { 'index': 10, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'requiresMarketDataResult':                   { 'index': 11, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'incorrectTimeInForceForMarketSessionResult': { 'index': 12, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'aggregateCreditExposureResult':              { 'index': 13, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'aggregateDeltaExposureResult':               { 'index': 14, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'aggregateGrossExecutedResult':               { 'index': 15, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'aggregateNetExecutedResult':                 { 'index': 16, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'eventCountResult':                           { 'index': 17, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'controlValidationAction':                    { 'index': 18, 'type': 'ubyte', 'enum': 'OmValidationAction', }, 
				'aggregateExecutedSharesResult':              { 'index': 19, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'aggregateOrderPriceImpactControlResult':     { 'index': 20, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'aggregateGrossSharesResult':                 { 'index': 21, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'exchangePriceAndCurrencyResult':             { 'index': 22, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'externalREGS144aRestrictionResult':          { 'index': 23, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
				'rtlResult':                                  { 'index': 24, 'type': 'ubyte', 'enum': 'OmControlResult', }, 
			}, 
		}, 
		'ApplyCorporateActionToOrderCommand': {
			'id': 533, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                    { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'orderId':                          { 'index': 1, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '29'},
				                                      ],
				                                    },
				'corporateActionId':                { 'index': 2, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '10'},
				                                      ],
				                                    },
				'corporateActionType':              { 'index': 3, 'type': 'ubyte', 'enum': 'OmCorporateActionType', }, 
				'gtcActionType':                    { 'index': 4, 'type': 'ubyte', 'enum': 'OmGtcActionType', }, 
				'limitPrice':                       { 'index': 5, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'stopPrice':                        { 'index': 6, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'lastCorporateActionEffectiveDate': { 'index': 7, 'type': 'int', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'date'},
				                                      ],
				                                    },
			}, 
		}, 
		'ApplyCorporateActionToOrderCommandContext': {
			'id': 534, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'corporateActionId':   { 'index': 0, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '10'},
				                         ],
				                       },
				'corporateActionType': { 'index': 1, 'type': 'ubyte', 'enum': 'OmCorporateActionType', }, 
				'gtcActionType':       { 'index': 2, 'type': 'ubyte', 'enum': 'OmGtcActionType', }, 
			}, 
		}, 
		'ApprovalCorrection': {
			'id': 682, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'quantity':         { 'index': 0, 'type': 'double', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'real'},
				                      ],
				                    },
				'limitPrice':       { 'index': 1, 'type': 'double', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'real'},
				                      ],
				                    },
				'accounts':         { 'index': 2, 'type': 'table', 'tablename': 'Account', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                      ],
				                    },
				'charges':          { 'index': 3, 'type': 'table', 'tablename': 'Charge', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                      ],
				                    },
				'investorId':       { 'index': 4, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '50'},
				                      ],
				                    },
				'referenceCharges': { 'index': 5, 'type': 'table', 'tablename': 'Charge', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                      ],
				                    },
			}, 
		}, 
		'ApprovalInformation': {
			'id': 315, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'orderId':        { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '29'},
				                    ],
				                  },
				'approvalType':   { 'index': 1, 'type': 'ubyte', 'enum': 'OmApprovalType', }, 
				'approvalStatus': { 'index': 2, 'type': 'ubyte', 'enum': 'OmApprovalStatus', }, 
				'approver':       { 'index': 3, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '10'},
				                    ],
				                  },
				'approvalText':   { 'index': 4, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '256'},
				                    ],
				                  },
			}, 
		}, 
		'ApprovalTypeListMember': {
			'id': 683, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'approvalType': { 'index': 0, 'type': 'ubyte', 'enum': 'OmApprovalType', }, 
			}, 
		}, 
		'BasketExternalReference': {
			'id': 520, 
			'version': 1, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAlias' , 'value' : 'SecondaryBasketExternalReference'},
			],
			'columns': {
				'basketCategory':    { 'index': 0, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '16'},
				                       ],
				                     },
				'externalReference': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
			}, 
		}, 
		'BasketId': {
			'id': 506, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'basketId': { 'index': 0, 'type': 'string', 
				              'meta-fields': [
					          {'field': 'maxStringLength' , 'value' : '29'},
				              ],
				            },
			}, 
		}, 
		'BasketInstructionData': {
			'id': 503, 
			'version': 18, 
			'publishable': 'true', 
			'columns': {
				'basketId':                    { 'index': 0, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'basketName':                  { 'index': 1, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'basketType':                  { 'index': 2, 'type': 'ubyte', 'enum': 'OmBasketType', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
				                                 ],
				                               },
				'orderCount':                  { 'index': 3, 'type': 'int', }, 
				'primaryStatus':               { 'index': 4, 'type': 'ubyte', 'enum': 'OmPrimaryStatus', }, 
				'cancelStatus':                { 'index': 5, 'type': 'ubyte', 'enum': 'OmCancelStatus', }, 
				'correctionStatus':            { 'index': 6, 'type': 'ubyte', 'enum': 'OmCorrectionStatus', }, 
				'completionReason':            { 'index': 7, 'type': 'ubyte', 'enum': 'OmCompletionReason', }, 
				'creatorId':                   { 'index': 8, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'relatedEntities':             { 'index': 9, 'type': 'table', 'tablename': 'RelatedEntity', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'routeStatus':                 { 'index': 10, 'type': 'ubyte', 'enum': 'OmRouteStatus', # FIELD IS OBSOLETE
				                                 'meta-fields': [
					                             {'field': 'obsolete' , 'value' : 'true'},
				                                 ],
				                               },
				'destinationPartition':        { 'index': 11, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'sourceSystemName':            { 'index': 12, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'sourceSystemType':            { 'index': 13, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'destinationSystemName':       { 'index': 14, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'destinationSystemType':       { 'index': 15, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'opaqueBasketData':            { 'index': 16, 'type': 'binary', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'blob'},
				                                 ],
				                               },
				'accessId':                    { 'index': 17, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'externalReferences':          { 'index': 18, 'type': 'table', 'tablename': 'ExternalReference', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'basketRtlCategory':           { 'index': 19, 'type': 'table', 'tablename': 'BasketRtlCategory', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'calculatedBasketRtlCategory': { 'index': 20, 'type': 'table', 'tablename': 'BasketRtlCategory', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'createDateTime':              { 'index': 21, 'type': 'int', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                 ],
				                               },
				'basketDescription':           { 'index': 22, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '50'},
				                                 ],
				                               },
				'automationStrategy':          { 'index': 23, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '16'},
				                                 ],
				                               },
				'basketCategory':              { 'index': 24, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '16'},
				                                 ],
				                               },
				'visibilityGroups':            { 'index': 25, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'owner':                       { 'index': 26, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'dssEventId':                  { 'index': 27, 'type': 'string', }, 
				'interventionConsent':         { 'index': 28, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
				'downRippleHandler':           { 'index': 29, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'downParentChildManager':      { 'index': 30, 'type': 'ubyte', 'enum': 'OmParentChildManagerType', }, 
				'upRippleHandler':             { 'index': 31, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'upParentChildManager':        { 'index': 32, 'type': 'ubyte', 'enum': 'OmParentChildManagerType', }, 
				'isReinstated':                { 'index': 33, 'type': 'bool', }, 
			}, 
		}, 
		'BasketNotification': {
			'id': 146, 
			'version': 2, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAlias' , 'value' : 'Basket'},
			    {'field': 'rdbInheritParentKeys' , 'value' : 'false'},
			    {'field': 'rdbAdditionalKeyPart' , 'value' : 'baskets/basketVersion,baskets/basketInstructionData/basketId'},
			    {'field': 'rdbProcessAttribute' , 'value' : 'baskets/basketVersion,baskets/basketInstructionData/basketId'},
			    {'field': 'rdbAsOwnTable' , 'value' : 'baskets_basketPendingCorrection'},
			],
			'columns': {
				'version':                 { 'index': 0, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'rdbAlias' , 'value' : 'basketVersion'},
				                             ],
				                           },
				'basketInstructionData':   { 'index': 1, 'type': 'table', 'tablename': 'BasketInstructionData', 
				                             'meta-fields': [
					                         {'field': 'rdbAlias' , 'value' : ''},
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'basketPendingCorrection': { 'index': 2, 'type': 'table', 'tablename': 'BasketPendingCorrection', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'relatedEntityIndexes':    { 'index': 3, 'type': 'table', 'tablename': 'RelatedEntityIndex', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
			}, 
		}, 
		'BasketPendingCorrection': {
			'id': 102, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'basketId':                 { 'index': 0, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'basketInstructionData':    { 'index': 1, 'type': 'table', 'tablename': 'BasketInstructionData', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                              ],
				                            },
				'pendingCorrectionVersion': { 'index': 2, 'type': 'int', }, 
			}, 
		}, 
		'BasketRtlCategory': {
			'id': 374, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'isGoodBasket':        { 'index': 0, 'type': 'bool', }, 
				'isStandardBasket':    { 'index': 1, 'type': 'bool', }, 
				'isNonStandardBasket': { 'index': 2, 'type': 'bool', }, 
			}, 
		}, 
		'BasketUpdate': {
			'id': 128, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'basketInstructionData':   { 'index': 0, 'type': 'table', 'tablename': 'BasketInstructionData', # FIELD IS OBSOLETE
				                             'meta-fields': [
					                         {'field': 'obsolete' , 'value' : 'true'},
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'basketPendingCorrection': { 'index': 1, 'type': 'table', 'tablename': 'BasketPendingCorrection', # FIELD IS OBSOLETE
				                             'meta-fields': [
					                         {'field': 'obsolete' , 'value' : 'true'},
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'currentBasket':           { 'index': 2, 'type': 'table', 'tablename': 'BasketNotification', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'previousBasket':          { 'index': 3, 'type': 'table', 'tablename': 'BasketNotification', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'eventData':               { 'index': 4, 'type': 'table', 'tablename': 'EventData', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'BrokerDealerOatsAttributes': {
			'id': 603, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'manualOrderIndicator':             { 'index': 0, 'type': 'bool', }, 
				'customerDirectedOrder':            { 'index': 1, 'type': 'bool', }, 
				'customerOrderHandlingInstruction': { 'index': 2, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '30'},
				                                      ],
				                                    },
				'orderHandlingInstructionSource':   { 'index': 3, 'type': 'int', }, 
				'deskType':                         { 'index': 4, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                      'meta-fields': [
					                                  {'field': 'deprecated' , 'value' : 'true'},
					                                  {'field': 'maxStringLength' , 'value' : '2'},
				                                      ],
				                                    },
				'deskTypeSource':                   { 'index': 5, 'type': 'int', # FIELD HAS BEEN DEPRECATED
				                                      'meta-fields': [
					                                  {'field': 'deprecated' , 'value' : 'true'},
				                                      ],
				                                    },
				'deskOrderHandlingInstruction':     { 'index': 6, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                      'meta-fields': [
					                                  {'field': 'deprecated' , 'value' : 'true'},
					                                  {'field': 'maxStringLength' , 'value' : '30'},
				                                      ],
				                                    },
				'originatingDepartmentId':          { 'index': 7, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '3'},
				                                      ],
				                                    },
				'informationBarrierId':             { 'index': 8, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                      'meta-fields': [
					                                  {'field': 'deprecated' , 'value' : 'true'},
					                                  {'field': 'maxStringLength' , 'value' : '12'},
				                                      ],
				                                    },
				'receivingDepartmentId':            { 'index': 9, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '3'},
				                                      ],
				                                    },
				'orderOriginationCode':             { 'index': 10, 'type': 'int', }, 
				'ownerType':                        { 'index': 11, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '2'},
				                                      ],
				                                    },
				'regulatoryTimestamps':             { 'index': 12, 'type': 'table', 'tablename': 'RegulatoryTimestamp', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
			}, 
		}, 
		'BrokerInfo': {
			'id': 711, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'brokerId':     { 'index': 0, 'type': 'string', }, 
				'brokerIdType': { 'index': 1, 'type': 'ubyte', 'enum': 'OmBrokerIdType', }, 
			}, 
		}, 
		'BusinessObject': {
			'id': 69, 
			'version': 14, 
			'publishable': 'true', 
			'columns': {
				'repositoryAction':                   { 'index': 0, 'type': 'ubyte', 'enum': 'OmRepositoryActionType', }, 
				'newVersion':                         { 'index': 1, 'type': 'uint', }, 
				'oldVersion':                         { 'index': 2, 'type': 'uint', }, 
				'eventData':                          { 'index': 3, 'type': 'table', 'tablename': 'EventData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'orderInstructionData':               { 'index': 4, 'type': 'table', 'tablename': 'OrderInstructionData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'orderStatusData':                    { 'index': 5, 'type': 'table', 'tablename': 'OrderStatusData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'sequencedMessageData':               { 'index': 6, 'type': 'table', 'tablename': 'SequencedMessageData', # FIELD HAS BEEN DEPRECATED
				                                        'meta-fields': [
					                                    {'field': 'deprecated' , 'value' : 'true'},
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'uniqueIdData':                       { 'index': 7, 'type': 'table', 'tablename': 'UniqueIdData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'externalReference':                  { 'index': 8, 'type': 'table', 'tablename': 'ExternalReference', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'posDupIdData':                       { 'index': 9, 'type': 'table', 'tablename': 'PosDupIdData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'executionData':                      { 'index': 10, 'type': 'table', 'tablename': 'ExecutionData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'failoverInformationData':            { 'index': 11, 'type': 'table', 'tablename': 'FailoverInformationData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'pendingCorrection':                  { 'index': 12, 'type': 'table', 'tablename': 'PendingCorrection', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'pendingCancel':                      { 'index': 13, 'type': 'table', 'tablename': 'PendingCancel', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'execExternalReference':              { 'index': 14, 'type': 'table', 'tablename': 'ExternalReference', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'parkedEventData':                    { 'index': 15, 'type': 'table', 'tablename': 'ParkedEventData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'externalOrderReferenceIndex':        { 'index': 16, 'type': 'table', 'tablename': 'ExternalOrderReferenceIndex', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'externalExecutionReferenceIndex':    { 'index': 17, 'type': 'table', 'tablename': 'ExternalExecutionReferenceIndex', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'transactionalProductWrapperData':    { 'index': 18, 'type': 'table', 'tablename': 'TransactionalProductWrapperData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'basketInstructionData':              { 'index': 19, 'type': 'table', 'tablename': 'BasketInstructionData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'basketPendingCorrection':            { 'index': 20, 'type': 'table', 'tablename': 'BasketPendingCorrection', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'relatedEntityIndex':                 { 'index': 21, 'type': 'table', 'tablename': 'RelatedEntityIndex', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'sequencedMessageNotificationStatus': { 'index': 22, 'type': 'table', 'tablename': 'SequencedMessageNotificationStatus', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'orderCorrection':                    { 'index': 23, 'type': 'table', 'tablename': 'OrderCorrection', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'externalBasketReferenceIndex':       { 'index': 24, 'type': 'table', 'tablename': 'ExternalBasketReferenceIndex', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'messageWrapperData':                 { 'index': 25, 'type': 'table', 'tablename': 'MessageWrapperData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'orderHistorySummary':                { 'index': 26, 'type': 'table', 'tablename': 'OrderHistorySummary', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'externalIndicationReferenceIndex':   { 'index': 27, 'type': 'table', 'tablename': 'ExternalIndicationReferenceIndex', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'externalLiquidityReferenceIndex':    { 'index': 28, 'type': 'table', 'tablename': 'ExternalLiquidityReferenceIndex', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
			}, 
		}, 
		'CancelAllExecutionsForOrderCommand': {
			'id': 357, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':         { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'orderId':               { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'executionCancelReason': { 'index': 2, 'type': 'ubyte', 'enum': 'OmExecutionCancelCorrectReason', }, 
			}, 
		}, 
		'CancelExecutionCommand': {
			'id': 49, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':         { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'externalReferences':    { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
				'executionId':           { 'index': 2, 'type': 'string', 'aliases': ['execId'], 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'orderId':               { 'index': 3, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'executionCancelReason': { 'index': 4, 'type': 'ubyte', 'enum': 'OmExecutionCancelCorrectReason', }, 
			}, 
		}, 
		'CancelMatchedExecutionsCommand': {
			'id': 180, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':         { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'executionId1':          { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'executionId2':          { 'index': 2, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'executionCancelReason': { 'index': 3, 'type': 'ubyte', 'enum': 'OmExecutionCancelCorrectReason', }, 
			}, 
		}, 
		'CancelReject': {
			'id': 83, 
			'version': 6, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                    { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'orderId':                          { 'index': 1, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '29'},
				                                      ],
				                                    },
				'externalReferences':               { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'rejectReasons':                    { 'index': 3, 'type': 'table', 'tablename': 'RejectReason', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'cancelRejectInResponseTo':         { 'index': 4, 'type': 'ubyte', 'enum': 'OmCancelRejectInResponseTo', }, 
				'fixOrderStatus':                   { 'index': 5, 'type': 'ubyte', 'enum': 'OmFixOrderStatus', }, 
				'oldExternalReferences':            { 'index': 6, 'type': 'table', 'tablename': 'ExternalReference', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'customerUser':                     { 'index': 7, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '32'},
				                                      ],
				                                    },
				'fixLineId':                        { 'index': 8, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '32'},
				                                      ],
				                                    },
				'dropCopyFixClientInformationList': { 'index': 9, 'type': 'table', 'tablename': 'FixClientInformation', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'isCompositeOrder':                 { 'index': 10, 'type': 'bool', }, 
				'isCompositeLegOrder':              { 'index': 11, 'type': 'bool', }, 
				'apolloTurnaroundInfoList':         { 'index': 12, 'type': 'table', 'tablename': 'ApolloTurnaroundInfo', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
			}, 
		}, 
		'CategoryCreditInformation': {
			'id': 474, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'creditCategoryType':        { 'index': 0, 'type': 'ubyte', 'enum': 'OmCreditCategoryType', }, 
				'assignedCreditValue':       { 'index': 1, 'type': 'double', 
				                               'meta-fields': [
					                           {'field': 'dictionaryType' , 'value' : 'real'},
				                               ],
				                             },
				'allocatedCreditValue':      { 'index': 2, 'type': 'double', 
				                               'meta-fields': [
					                           {'field': 'dictionaryType' , 'value' : 'real'},
				                               ],
				                             },
				'availableCreditValue':      { 'index': 3, 'type': 'double', 
				                               'meta-fields': [
					                           {'field': 'dictionaryType' , 'value' : 'real'},
				                               ],
				                             },
				'percentageUsedCreditValue': { 'index': 4, 'type': 'double', 
				                               'meta-fields': [
					                           {'field': 'dictionaryType' , 'value' : 'real'},
				                               ],
				                             },
				'creditUsedValue':           { 'index': 5, 'type': 'double', 
				                               'meta-fields': [
					                           {'field': 'dictionaryType' , 'value' : 'real'},
				                               ],
				                             },
			}, 
		}, 
		'Charge': {
			'id': 20, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'chargeType':     { 'index': 0, 'type': 'ubyte', 'enum': 'OmChargeTypes', }, 
				'chargeUnits':    { 'index': 1, 'type': 'ubyte', 'enum': 'OmChargeUnits', }, 
				'chargeAmount':   { 'index': 2, 'type': 'double', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'real'},
				                    ],
				                  },
				'chargeCurrency': { 'index': 3, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '3'},
				                    ],
				                  },
			}, 
		}, 
		'ClearExecutionIsSuspendAlertableCommand': {
			'id': 347, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'executionId':        { 'index': 2, 'type': 'string', 'aliases': ['execId'], 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
			}, 
		}, 
		'ClearOrderBlockCommand': {
			'id': 329, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':  { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'struct'},
				                    ],
				                  },
				'orderBlockData': { 'index': 1, 'type': 'table', 'tablename': 'OrderBlockData', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'struct'},
				                    ],
				                  },
			}, 
		}, 
		'ClearingInstructionTypeList': {
			'id': 304, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'clearingInstruction': { 'index': 0, 'type': 'ubyte', 'enum': 'OmClearingInstructionType', }, 
			}, 
		}, 
		'ClearingProduct': {
			'id': 181, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'exchangeCode':           { 'index': 0, 'type': 'string', }, 
				'clearingProductCode':    { 'index': 1, 'type': 'string', }, 
				'clearingSubProductCode': { 'index': 2, 'type': 'string', }, 
				'contractFamilyCode':     { 'index': 3, 'type': 'string', }, 
				'contractType':           { 'index': 4, 'type': 'string', }, 
				'contractSubType':        { 'index': 5, 'type': 'string', }, 
				'contractVersion':        { 'index': 6, 'type': 'string', }, 
				'strikePrice':            { 'index': 7, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'putCall':                { 'index': 8, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'expiryYear':             { 'index': 9, 'type': 'int', }, 
				'expiryMonth':            { 'index': 10, 'type': 'int', }, 
				'expiryDay':              { 'index': 11, 'type': 'int', }, 
				'flex':                   { 'index': 12, 'type': 'bool', }, 
			}, 
		}, 
		'ClientIndicationInterest': {
			'id': 699, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'clientInterestId': { 'index': 0, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '20'},
				                      ],
				                    },
			}, 
		}, 
		'ClientParty': {
			'id': 107, 
			'version': 7, 
			'publishable': 'true', 
			'columns': {
				'clientFixAcronym':          { 'index': 0, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '20'},
				                               ],
				                             },
				'clientFixAccount':          { 'index': 1, 'type': 'string', 'aliases': ['clientAccountName','fixTextInstruction'], 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '32'},
				                               ],
				                             },
				'clientStarId':              { 'index': 2, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '10'},
				                               ],
				                             },
				'clientUserId':              { 'index': 3, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '32'},
				                               ],
				                             },
				'clientOeId':                { 'index': 4, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '32'},
				                               ],
				                             },
				'clientAdotId':              { 'index': 5, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '20'},
				                               ],
				                             },
				'clientOeIdType':            { 'index': 6, 'type': 'ubyte', 'enum': 'OmOrganizationalEntityIdType', }, 
				'clientLegalEntityId':       { 'index': 7, 'type': 'int', }, 
				'isSDRUSPerson':             { 'index': 8, 'type': 'bool', }, 
				'isClientWithoutInvestorID': { 'index': 9, 'type': 'bool', }, 
			}, 
		}, 
		'ClusterLockAcquireCommand': {
			'id': 56, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'lockName':     { 'index': 0, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '255'},
				                  ],
				                },
				'lockClientId': { 'index': 1, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '511'},
				                  ],
				                },
			}, 
		}, 
		'ClusterLockClearCommand': {
			'id': 59, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'lockName':     { 'index': 0, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '255'},
				                  ],
				                },
				'lockClientId': { 'index': 1, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '511'},
				                  ],
				                },
			}, 
		}, 
		'ClusterLockFailureResponse': {
			'id': 61, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'lockName':          { 'index': 0, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '255'},
				                       ],
				                     },
				'lockFailureReason': { 'index': 1, 'type': 'ubyte', 'enum': 'OmLockFailureReason', }, 
				'lockCommand':       { 'index': 2, 'type': 'ubyte', 'enum': 'OmLockCommand', }, 
			}, 
		}, 
		'ClusterLockReadCommand': {
			'id': 58, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'lockName':     { 'index': 0, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '255'},
				                  ],
				                },
				'lockClientId': { 'index': 1, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '511'},
				                  ],
				                },
			}, 
		}, 
		'ClusterLockReleaseCommand': {
			'id': 57, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'lockName':     { 'index': 0, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '255'},
				                  ],
				                },
				'lockClientId': { 'index': 1, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '511'},
				                  ],
				                },
			}, 
		}, 
		'ClusterLockSuccessResponse': {
			'id': 60, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'lockName':     { 'index': 0, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '255'},
				                  ],
				                },
				'lockClientId': { 'index': 1, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '511'},
				                  ],
				                },
				'lockState':    { 'index': 2, 'type': 'ubyte', 'enum': 'OmLockState', }, 
				'lockCommand':  { 'index': 3, 'type': 'ubyte', 'enum': 'OmLockCommand', }, 
			}, 
		}, 
		'CodeTracePoint': {
			'id': 713, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'codeTracePointType':          { 'index': 0, 'type': 'ubyte', 'enum': 'OmCodeTracePointType', }, 
				'codeTracePointIsComplete':    { 'index': 1, 'type': 'bool', }, 
				'codeTracePointStringContext': { 'index': 2, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'codeTracePointBinaryContext': { 'index': 3, 'type': 'binary', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'blob'},
				                                 ],
				                               },
			}, 
		}, 
		'Command': {
			'id': 361, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'messageData':   { 'index': 0, 'type': 'binary', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'blob'},
				                   ],
				                 },
				'messageFormat': { 'index': 1, 'type': 'ubyte', 'enum': 'OmMessageFormat', }, 
				'tableId':       { 'index': 2, 'type': 'int', }, 
			}, 
		}, 
		'CommandCheckpointData': {
			'id': 14, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'sequenceName':    { 'index': 0, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '50'},
				                     ],
				                   },
				'serviceType':     { 'index': 1, 'type': 'ubyte', 'enum': 'OmServiceType', # FIELD HAS BEEN DEPRECATED
				                     'meta-fields': [
					                 {'field': 'deprecated' , 'value' : 'true'},
				                     ],
				                   },
				'messageId':       { 'index': 2, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                     'meta-fields': [
					                 {'field': 'deprecated' , 'value' : 'true'},
					                 {'field': 'maxStringLength' , 'value' : '64'},
				                     ],
				                   },
				'interfaceType':   { 'index': 3, 'type': 'uint', }, 
				'binaryMessageId': { 'index': 4, 'type': 'binary', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'blob'},
				                     ],
				                   },
			}, 
		}, 
		'CommandHeader': {
			'id': 29, 
			'version': 5, 
			'publishable': 'true', 
			'columns': {
				'commandTime':    { 'index': 0, 'type': 'int', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                    ],
				                  },
				'isPosDup':       { 'index': 1, 'type': 'bool', }, 
				'posDupId':       { 'index': 2, 'type': 'string', }, 
				'sourceMessage':  { 'index': 3, 'type': 'binary', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'blob'},
				                    ],
				                  },
				'systemName':     { 'index': 4, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '32'},
				                    ],
				                  },
				'creatorId':      { 'index': 5, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '29'},
				                    ],
				                  },
				'creatorIdType':  { 'index': 6, 'type': 'ubyte', 'enum': 'OmCreatorIdType', }, 
				'eventTrailData': { 'index': 7, 'type': 'table', 'tablename': 'EventTrailData', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'struct'},
				                    ],
				                  },
				'systemType':     { 'index': 8, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
			}, 
		}, 
		'CommandReject': {
			'id': 73, 
			'version': 5, 
			'publishable': 'true', 
			'columns': {
				'posDupId':                         { 'index': 0, 'type': 'string', }, 
				'rejectReasonText':                 { 'index': 1, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '256'},
				                                      ],
				                                    },
				'rejectReasonType':                 { 'index': 2, 'type': 'ubyte', 'enum': 'OmRejectReasonType', }, 
				'commandHeader':                    { 'index': 3, 'type': 'table', 'tablename': 'CommandHeader', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'dropCopyFixClientInformationList': { 'index': 4, 'type': 'table', 'tablename': 'FixClientInformation', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
			}, 
		}, 
		'CommandRequest': {
			'id': 97, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'requestResponseCommand': { 'index': 0, 'type': 'table', 'tablename': 'RequestResponseCommand', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'struct'},
				                            ],
				                          },
				'responseVerbosity':      { 'index': 1, 'type': 'ubyte', 'enum': 'OmResponseVerbosity', }, 
			}, 
		}, 
		'CommandResponse': {
			'id': 98, 
			'version': 9, 
			'publishable': 'true', 
			'columns': {
				'posDupId':                { 'index': 0, 'type': 'string', }, 
				'wasCommandSuccessful':    { 'index': 1, 'type': 'bool', }, 
				'orderStatusData':         { 'index': 2, 'type': 'table', 'tablename': 'OrderStatusData', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'orderInstructionData':    { 'index': 3, 'type': 'table', 'tablename': 'OrderInstructionData', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'pendingCorrection':       { 'index': 4, 'type': 'table', 'tablename': 'PendingCorrection', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'pendingCancel':           { 'index': 5, 'type': 'table', 'tablename': 'PendingCancel', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'executionData':           { 'index': 6, 'type': 'table', 'tablename': 'ExecutionData', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'rejectReasons':           { 'index': 7, 'type': 'table', 'tablename': 'RejectReason', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'basketInstructionData':   { 'index': 8, 'type': 'table', 'tablename': 'BasketInstructionData', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'basketPendingCorrection': { 'index': 9, 'type': 'table', 'tablename': 'BasketPendingCorrection', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'eventIdWrapper':          { 'index': 10, 'type': 'table', 'tablename': 'EventIdWrapper', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'relatedEntityIndexes':    { 'index': 11, 'type': 'table', 'tablename': 'RelatedEntityIndex', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'testCaseOverride':        { 'index': 12, 'type': 'table', 'tablename': 'TestCaseOverrideData', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'indicationData':          { 'index': 13, 'type': 'table', 'tablename': 'IndicationData', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'liquidityData':           { 'index': 14, 'type': 'table', 'tablename': 'LiquidityData', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'validationResponse':      { 'index': 15, 'type': 'table', 'tablename': 'ValidationResponse', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'Comment': {
			'id': 21, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commentType':  { 'index': 0, 'type': 'ubyte', 'enum': 'OmCommentType', }, 
				'commentValue': { 'index': 1, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '255'},
				                  ],
				                },
			}, 
		}, 
		'ConditionalRoutingEvent': {
			'id': 360, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'internalEventSequenceNumber': { 'index': 0, 'type': 'int', }, 
				't2EvaluationTrace':           { 'index': 1, 'type': 'binary', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'blob'},
				                                 ],
				                               },
			}, 
		}, 
		'Constraint': {
			'id': 115, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'constraint':            { 'index': 0, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'rdbAlias' , 'value' : 'constraintName'},
					                       {'field': 'maxStringLength' , 'value' : '32'},
				                           ],
				                         },
				'constraintDescription': { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '150'},
				                           ],
				                         },
			}, 
		}, 
		'CorrectExecutionCommand': {
			'id': 48, 
			'version': 20, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':               { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'externalReferences':          { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'executionId':                 { 'index': 2, 'type': 'string', 'aliases': ['execId'], 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'sellShort':                   { 'index': 3, 'type': 'bool', }, 
				'sellShortExempt':             { 'index': 4, 'type': 'bool', }, 
				'quantity':                    { 'index': 5, 'type': 'double', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                 ],
				                               },
				'executionPrice':              { 'index': 6, 'type': 'double', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                 ],
				                               },
				'executionNetPrice':           { 'index': 7, 'type': 'double', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                 ],
				                               },
				'settlementPrice':             { 'index': 8, 'type': 'double', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                 ],
				                               },
				'settlementNetPrice':          { 'index': 9, 'type': 'double', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                 ],
				                               },
				'executionTime':               { 'index': 10, 'type': 'int', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                 ],
				                               },
				'executionTimeGmtOffset':      { 'index': 11, 'type': 'double', # FIELD IS OBSOLETE
				                                 'meta-fields': [
					                             {'field': 'obsolete' , 'value' : 'true'},
					                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                 ],
				                               },
				'accounts':                    { 'index': 12, 'type': 'table', 'tablename': 'Account', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'settlementDateCalcMethod':    { 'index': 13, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'marketTradeDate':             { 'index': 14, 'type': 'int', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'date'},
				                                 ],
				                               },
				'settlementDate':              { 'index': 15, 'type': 'int', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                 ],
				                               },
				'executionCapacity':           { 'index': 16, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionPoint':              { 'index': 17, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '16'},
				                                 ],
				                               },
				'subExecutionPoint':           { 'index': 18, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '16'},
				                                 ],
				                               },
				'charges':                     { 'index': 19, 'type': 'table', 'tablename': 'Charge', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'executionCurrency':           { 'index': 20, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '3'},
				                                 ],
				                               },
				'settlementCurrency':          { 'index': 21, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '3'},
				                                 ],
				                               },
				'exchangeRates':               { 'index': 22, 'type': 'table', 'tablename': 'ExchangeRate', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'tradeReportingType':          { 'index': 23, 'type': 'ubyte', 'enum': 'OmTradeReportingType', }, 
				'executionTimeLocal':          { 'index': 24, 'type': 'int', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                 ],
				                               },
				'counterPartyId':              { 'index': 25, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'executionReason':             { 'index': 26, 'type': 'ubyte', 'enum': 'OmExecutionReason', }, 
				'isOtherSideShortSell':        { 'index': 27, 'type': 'bool', }, 
				'isOtherSideShortSellExempt':  { 'index': 28, 'type': 'bool', }, 
				'parameterizedExecutionPrice': { 'index': 29, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'resolveAllPrices':            { 'index': 30, 'type': 'bool', # FIELD IS OBSOLETE
				                                 'meta-fields': [
					                             {'field': 'obsolete' , 'value' : 'true'},
				                                 ],
				                               },
				'intraEntityIndicator':        { 'index': 31, 'type': 'ubyte', 'enum': 'OmIntraEntityIndicator', }, 
				'originalPartyTypes':          { 'index': 32, 'type': 'ubyte', 'enum': 'OmOriginalPartyTypes', }, 
				'counterPartyBreakdown':       { 'index': 33, 'type': 'table', 'tablename': 'CounterPartyBreakdown', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'clearingInstruction':         { 'index': 34, 'type': 'ubyte', 'enum': 'OmClearingInstructionType', }, 
				'executionSession':            { 'index': 35, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'tradeReportModifiers':        { 'index': 36, 'type': 'ubyte', 'enum': 'OmTradeReportModifiers', }, 
				'consolidatedRegulatoryCode':  { 'index': 37, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'isSourceExecution':           { 'index': 38, 'type': 'bool', }, 
				'tradeReportingExecutionType': { 'index': 39, 'type': 'ubyte', 'enum': 'OmTradeReportingExecutionType', }, 
				'crossPartyOrderCapacity':     { 'index': 40, 'type': 'table', 'tablename': 'CrossPartyOrderCapacity', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'regNmsExemptionType':         { 'index': 41, 'type': 'ubyte', 'enum': 'OmRegNmsExemptionType', }, 
				'secShortSellExemptionReason': { 'index': 42, 'type': 'ubyte', 'enum': 'OmSecShortSellExemptionReason', }, 
				'isAdministrativeOverride':    { 'index': 43, 'type': 'bool', }, 
				'delayedPublicationTime':      { 'index': 44, 'type': 'int', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                 ],
				                               },
				'executionType':               { 'index': 45, 'type': 'ubyte', 'enum': 'OmExecutionType', }, 
				'executionCorrectReason':      { 'index': 46, 'type': 'ubyte', 'enum': 'OmExecutionCancelCorrectReason', }, 
				'deliverProspectusToClient':   { 'index': 47, 'type': 'bool', }, 
				'referenceCharges':            { 'index': 48, 'type': 'table', 'tablename': 'Charge', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
			}, 
		}, 
		'CorrectMatchedExecutionsCommand': {
			'id': 179, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':          { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'struct'},
				                            ],
				                          },
				'executionId1':           { 'index': 1, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'executionId2':           { 'index': 2, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'executionPrice':         { 'index': 3, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'executionCorrectReason': { 'index': 4, 'type': 'ubyte', 'enum': 'OmExecutionCancelCorrectReason', }, 
			}, 
		}, 
		'CounterPartyBreakdown': {
			'id': 373, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'counterPartyId': { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '29'},
				                    ],
				                  },
				'quantity':       { 'index': 1, 'type': 'double', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'real'},
				                    ],
				                  },
			}, 
		}, 
		'CreateBasketCommand': {
			'id': 500, 
			'version': 13, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':               { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'basketId':                    { 'index': 1, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'basketName':                  { 'index': 2, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'basketType':                  { 'index': 3, 'type': 'ubyte', 'enum': 'OmBasketType', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
				                                 ],
				                               },
				'orderCount':                  { 'index': 4, 'type': 'int', }, 
				'creatorId':                   { 'index': 5, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'destinationPartition':        { 'index': 6, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'opaqueBasketData':            { 'index': 7, 'type': 'binary', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'blob'},
				                                 ],
				                               },
				'accessId':                    { 'index': 8, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'externalReferences':          { 'index': 9, 'type': 'table', 'tablename': 'ExternalReference', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'basketRtlCategory':           { 'index': 10, 'type': 'table', 'tablename': 'BasketRtlCategory', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'calculatedBasketRtlCategory': { 'index': 11, 'type': 'table', 'tablename': 'BasketRtlCategory', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'basketDescription':           { 'index': 12, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '50'},
				                                 ],
				                               },
				'automationStrategy':          { 'index': 13, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '16'},
				                                 ],
				                               },
				'basketCategory':              { 'index': 14, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '16'},
				                                 ],
				                               },
				'visibilityGroups':            { 'index': 15, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'owner':                       { 'index': 16, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'interventionConsent':         { 'index': 17, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
			}, 
		}, 
		'CreateChildBasketCommand': {
			'id': 504, 
			'version': 14, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':               { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'basketId':                    { 'index': 1, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'childBasketId':               { 'index': 2, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
					                             {'field': 'maxStringLength' , 'value' : '128'},
				                                 ],
				                               },
				'basketName':                  { 'index': 3, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'basketType':                  { 'index': 4, 'type': 'ubyte', 'enum': 'OmBasketType', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
				                                 ],
				                               },
				'orderCount':                  { 'index': 5, 'type': 'int', }, 
				'creatorId':                   { 'index': 6, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'opaqueBasketData':            { 'index': 7, 'type': 'binary', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'blob'},
				                                 ],
				                               },
				'accessId':                    { 'index': 8, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'externalReferences':          { 'index': 9, 'type': 'table', 'tablename': 'ExternalReference', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'parentExternalReferences':    { 'index': 10, 'type': 'table', 'tablename': 'ExternalReference', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'basketRtlCategory':           { 'index': 11, 'type': 'table', 'tablename': 'BasketRtlCategory', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'calculatedBasketRtlCategory': { 'index': 12, 'type': 'table', 'tablename': 'BasketRtlCategory', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'basketDescription':           { 'index': 13, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '50'},
				                                 ],
				                               },
				'automationStrategy':          { 'index': 14, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '16'},
				                                 ],
				                               },
				'basketCategory':              { 'index': 15, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '16'},
				                                 ],
				                               },
				'visibilityGroups':            { 'index': 16, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'owner':                       { 'index': 17, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'interventionConsent':         { 'index': 18, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
			}, 
		}, 
		'CreateChildMultiLegOrderCommand': {
			'id': 540, 
			'version': 14, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                              { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'externalReferences':                         { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'parentExternalReferences':                   { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'quantity':                                   { 'index': 3, 'type': 'double', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                                ],
				                                              },
				'orderType':                                  { 'index': 4, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'timeInForce':                                { 'index': 5, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'allOrNone':                                  { 'index': 6, 'type': 'bool', }, 
				'limitPrice':                                 { 'index': 7, 'type': 'double', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                                ],
				                                              },
				'orderCapacity':                              { 'index': 8, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':                                 { 'index': 9, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':                              { 'index': 10, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'primaryPartyType':                           { 'index': 11, 'type': 'ubyte', 'enum': 'OmPrimaryPartyType', }, 
				'customerPartyType':                          { 'index': 12, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'accounts':                                   { 'index': 13, 'type': 'table', 'tablename': 'Account', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'destinationId':                              { 'index': 14, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '20'},
				                                                ],
				                                              },
				'executionPointOverride':                     { 'index': 15, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '16'},
				                                                ],
				                                              },
				'executionCurrency':                          { 'index': 16, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '3'},
				                                                ],
				                                              },
				'settlementCurrency':                         { 'index': 17, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '3'},
				                                                ],
				                                              },
				'tradingAlgorithm':                           { 'index': 18, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '32'},
				                                                ],
				                                              },
				'tradingAlgorithmEngine':                     { 'index': 19, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '32'},
				                                                ],
				                                              },
				'tradingAlgorithmParameters':                 { 'index': 20, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '1024'},
				                                                ],
				                                              },
				'regulatoryReportDomain':                     { 'index': 21, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'sourceRegulatoryReportDomain':               { 'index': 22, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'crossConsent':                               { 'index': 23, 'type': 'ubyte', 'enum': 'OmCrossingOption', }, 
				'smartRouteConsent':                          { 'index': 24, 'type': 'ubyte', 'enum': 'OmSmartRoutingOption', }, 
				'capitalCommitCategory':                      { 'index': 25, 'type': 'ubyte', 'enum': 'OmCapitalCommitCategory', }, 
				'serviceOffering':                            { 'index': 26, 'type': 'ubyte', 'enum': 'OmServiceOffering', }, 
				'isSolicitedOrder':                           { 'index': 27, 'type': 'bool', }, 
				'notHeld':                                    { 'index': 28, 'type': 'bool', }, 
				'visibilityGroups':                           { 'index': 29, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'destinationVisibilityGroups':                { 'index': 30, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'regRepCode':                                 { 'index': 31, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '5'},
				                                                ],
				                                              },
				'directedRegRepCode':                         { 'index': 32, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '5'},
				                                                ],
				                                              },
				'isTraderManagedOrder':                       { 'index': 33, 'type': 'bool', }, 
				'isTradingChildOrder':                        { 'index': 34, 'type': 'bool', }, 
				'restrictedTradingListOverride':              { 'index': 35, 'type': 'table', 'tablename': 'RestrictedTradingListOverride', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'isClientBookable':                           { 'index': 36, 'type': 'bool', }, 
				'marketMakerExchangeRepresented':             { 'index': 37, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '4'},
				                                                ],
				                                              },
				'marketMakerId':                              { 'index': 38, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '5'},
				                                                ],
				                                              },
				'marketMakerOCCClearingAccount':              { 'index': 39, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '5'},
				                                                ],
				                                              },
				'isMarketMakerClientOptionSpecialistInClass': { 'index': 40, 'type': 'bool', }, 
				'clientLegalEntityId':                        { 'index': 41, 'type': 'int', }, 
				'isClientStockSpecialistInUnderlier':         { 'index': 42, 'type': 'bool', }, 
				'isPHLXOffFloorOrder':                        { 'index': 43, 'type': 'bool', }, 
				'isCloakedOrder':                             { 'index': 44, 'type': 'bool', }, 
				'legInformationList':                         { 'index': 45, 'type': 'table', 'tablename': 'LegInformation', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'automationStrategy':                         { 'index': 46, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '16'},
				                                                ],
				                                              },
				'interventionConsent':                        { 'index': 47, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
				'executionAttributionStrategy':               { 'index': 48, 'type': 'ubyte', 'enum': 'OmExecutionAttributionStrategy', }, 
				'flowIdentifier':                             { 'index': 49, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'destinationFlowIdentifier':                  { 'index': 50, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'destinationSubId':                           { 'index': 51, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '20'},
				                                                ],
				                                              },
				'sourceFlowIdentifier':                       { 'index': 52, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'sourceSystemDoesBooking':                    { 'index': 53, 'type': 'bool', }, 
				'sourceOwner':                                { 'index': 54, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '20'},
				                                                ],
				                                              },
				'destinationEntityIndicator':                 { 'index': 55, 'type': 'ubyte', 'enum': 'OmDestinationEntityIndicator', }, 
				'creatorMarketDataStamps':                    { 'index': 56, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'tradingCountryOverride':                     { 'index': 57, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '2'},
				                                                ],
				                                              },
				'indicationPolicyParameters':                 { 'index': 58, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '20'},
				                                                ],
				                                              },
				'owner':                                      { 'index': 59, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '32'},
				                                                ],
				                                              },
				'parentOrderGsuid':                           { 'index': 60, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '29'},
				                                                ],
				                                              },
				'autoForward':                                { 'index': 61, 'type': 'bool', }, 
				'sendWithheld':                               { 'index': 62, 'type': 'bool', }, 
				'doNotRoute':                                 { 'index': 63, 'type': 'bool', }, 
				'doNotAutoAcceptParentOnSplit':               { 'index': 64, 'type': 'bool', }, 
				'comments':                                   { 'index': 65, 'type': 'table', 'tablename': 'Comment', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'primaryBasketExternalReference':             { 'index': 66, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'crossRequestReason':                         { 'index': 67, 'type': 'ubyte', 'enum': 'OmCrossRequestReason', }, 
				'crossMatchingId':                            { 'index': 68, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '30'},
				                                                ],
				                                              },
				'crossMatchingExternalReference':             { 'index': 69, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'facilitationPercent':                        { 'index': 70, 'type': 'double', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                                ],
				                                              },
				'facilitationPrice':                          { 'index': 71, 'type': 'double', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                                ],
				                                              },
				'facilitationStepUpPrice':                    { 'index': 72, 'type': 'double', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                                ],
				                                              },
				'algorithmicIndicator':                       { 'index': 73, 'type': 'ubyte', 'enum': 'OmAlgorithmicIndicator', }, 
				'opaqueOrderDataItemsToSet':                  { 'index': 74, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'opaqueOrderDataItemsToRemove':               { 'index': 75, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'clearingFirm':                               { 'index': 76, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '5'},
				                                                ],
				                                              },
				'clientConsents':                             { 'index': 77, 'type': 'ubyte', 'enum': 'OmClientConsents', }, 
				'clientConsentsName':                         { 'index': 78, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '30'},
				                                                ],
				                                              },
				'destinationDoNotRoute':                      { 'index': 79, 'type': 'bool', }, 
			}, 
		}, 
		'CreateChildOrderCommand': {
			'id': 41, 
			'version': 137, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                                  { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'externalReferences':                             { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'quantity':                                       { 'index': 2, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'orderType':                                      { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'timeInForce':                                    { 'index': 4, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'limitPrice':                                     { 'index': 5, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'notHeld':                                        { 'index': 6, 'type': 'bool', }, 
				'executionPointOverride':                         { 'index': 7, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'executionCurrency':                              { 'index': 8, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '3'},
				                                                    ],
				                                                  },
				'settlementCurrency':                             { 'index': 9, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '3'},
				                                                    ],
				                                                  },
				'maxTrancheSize':                                 { 'index': 10, 'type': 'double', 'aliases': ['displaySize'], 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'orderCapacity':                                  { 'index': 11, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':                                     { 'index': 12, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':                                  { 'index': 13, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'crossConsent':                                   { 'index': 14, 'type': 'ubyte', 'enum': 'OmCrossingOption', }, 
				'charges':                                        { 'index': 15, 'type': 'table', 'tablename': 'Charge', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'stopPrice':                                      { 'index': 16, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'settlementDateCalcMethod':                       { 'index': 17, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'settlementDate':                                 { 'index': 18, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'startDateTime':                                  { 'index': 19, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'expirationDateTime':                             { 'index': 20, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'sellShort':                                      { 'index': 21, 'type': 'bool', }, 
				'sellShortExempt':                                { 'index': 22, 'type': 'bool', }, 
				'positionOpenClose':                              { 'index': 23, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'tradingAlgorithm':                               { 'index': 24, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'capitalCommitQuantity':                          { 'index': 25, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'capitalCommitPrice':                             { 'index': 26, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'protectionType':                                 { 'index': 27, 'type': 'ubyte', 'enum': 'OmProtectionType', }, 
				'verbalAgreementTimestamp':                       { 'index': 28, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'capitalCommitTime':                              { 'index': 29, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'capitalCommitType':                              { 'index': 30, 'type': 'ubyte', 'enum': 'OmCapitalCommitType', }, 
				'comments':                                       { 'index': 31, 'type': 'table', 'tablename': 'Comment', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'clientConsents':                                 { 'index': 32, 'type': 'ubyte', 'enum': 'OmClientConsents', }, 
				'allOrNone':                                      { 'index': 33, 'type': 'bool', }, 
				'contractForDifferences':                         { 'index': 34, 'type': 'bool', }, 
				'smartRouteConsent':                              { 'index': 35, 'type': 'ubyte', 'enum': 'OmSmartRoutingOption', }, 
				'accounts':                                       { 'index': 36, 'type': 'table', 'tablename': 'Account', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'siEligibility':                                  { 'index': 37, 'type': 'ubyte', 'enum': 'OmSiEligibility', }, 
				'pegOffset':                                      { 'index': 38, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minExecutableQuantity':                          { 'index': 39, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'reportingVenue':                                 { 'index': 40, 'type': 'ubyte', 'enum': 'OmReportingVenue', }, 
				'tradingAlgorithmParameters':                     { 'index': 41, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '1024'},
				                                                    ],
				                                                  },
				'clientStarId':                                   { 'index': 42, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'clientFixAcronym':                               { 'index': 43, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'pegType':                                        { 'index': 44, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffsetType':                                  { 'index': 45, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'pegScope':                                       { 'index': 46, 'type': 'ubyte', 'enum': 'OmPegScopeType', }, 
				'discretionaryReferencePriceType':                { 'index': 47, 'type': 'ubyte', 'enum': 'OmDiscretionaryReferencePriceType', }, 
				'discretionaryOffset':                            { 'index': 48, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'discretionaryOffsetType':                        { 'index': 49, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'orderbookVisibility':                            { 'index': 50, 'type': 'ubyte', 'enum': 'OmOrderbookVisibilityType', }, 
				'minDiscretionaryQuantity':                       { 'index': 51, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minSpreadConstraint':                            { 'index': 52, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'maxSpreadConstraint':                            { 'index': 53, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'offsetDirectionType':                            { 'index': 54, 'type': 'ubyte', 'enum': 'OmOffsetDirectionType', }, 
				'ioiOrderRequestId':                              { 'index': 55, 'type': 'string', }, 
				'basketId':                                       { 'index': 56, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'ptOrderType':                                    { 'index': 57, 'type': 'ubyte', 'enum': 'OmPtOrderType', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'isSalesManagedOrder':                            { 'index': 58, 'type': 'bool', }, 
				'isTraderAssignmentOrder':                        { 'index': 59, 'type': 'bool', }, 
				'isTraderManagedOrder':                           { 'index': 60, 'type': 'bool', }, 
				'isInternallyRoutableOrder':                      { 'index': 61, 'type': 'bool', }, 
				'creatorId':                                      { 'index': 62, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'subExecutionPointOverride':                      { 'index': 63, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'businessUnit':                                   { 'index': 64, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'parentExternalReferences':                       { 'index': 65, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'parentOrderGsuid':                               { 'index': 66, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'executionAttributionStrategy':                   { 'index': 67, 'type': 'ubyte', 'enum': 'OmExecutionAttributionStrategy', }, 
				'doNotRoute':                                     { 'index': 68, 'type': 'bool', }, 
				'clientProductId':                                { 'index': 69, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '64'},
				                                                    ],
				                                                  },
				'isTradingChildOrder':                            { 'index': 70, 'type': 'bool', }, 
				'accessId':                                       { 'index': 71, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'autoForward':                                    { 'index': 72, 'type': 'bool', }, 
				'accessIdType':                                   { 'index': 73, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'partOfProgram':                                  { 'index': 74, 'type': 'bool', }, 
				'arbitrageStrategy':                              { 'index': 75, 'type': 'ubyte', 'enum': 'OmArbitrageStrategy', }, 
				'algorithmicIndicator':                           { 'index': 76, 'type': 'ubyte', 'enum': 'OmAlgorithmicIndicator', }, 
				'trancheSizeDisplayRange':                        { 'index': 77, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'shouldIndicateOrder':                            { 'index': 78, 'type': 'bool', }, 
				'indicationQuantity':                             { 'index': 79, 'type': 'int', }, 
				'ignoreImbalanceCheck':                           { 'index': 80, 'type': 'bool', }, 
				'tradeViaInternalAlgorithm':                      { 'index': 81, 'type': 'bool', }, 
				'minimumDisplaySize':                             { 'index': 82, 'type': 'double', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'maximumDisplaySize':                             { 'index': 83, 'type': 'double', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'sigmaAlgorithm':                                 { 'index': 84, 'type': 'ubyte', 'enum': 'OmSigmaAlgorithm', }, 
				'sigmaAlgorithmParameters':                       { 'index': 85, 'type': 'table', 'tablename': 'SigmaAlgorithmParameter', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'destinationId':                                  { 'index': 86, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'destinationTraderId':                            { 'index': 87, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'locateRequesterIdPreferenceList':                { 'index': 88, 'type': 'table', 'tablename': 'LocateRequesterIdPreferenceListMember', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'doNotWaitForLocateResponse':                     { 'index': 89, 'type': 'bool', }, 
				'isLocateRequested':                              { 'index': 90, 'type': 'bool', }, 
				'parameterizedLimitPrice':                        { 'index': 91, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'resolveAllPrices':                               { 'index': 92, 'type': 'bool', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'isGsamAdvisory':                                 { 'index': 93, 'type': 'bool', }, 
				'isSolicitedOrder':                               { 'index': 94, 'type': 'bool', }, 
				'isPartialOutEligible':                           { 'index': 95, 'type': 'bool', }, 
				'interventionConsent':                            { 'index': 96, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
				'brokerBillingType':                              { 'index': 97, 'type': 'ubyte', 'enum': 'OmBrokerBillingType', }, 
				'aggUnitName':                                    { 'index': 98, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'restrictedTradingListOverride':                  { 'index': 99, 'type': 'table', 'tablename': 'RestrictedTradingListOverride', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'destinationEntityIndicator':                     { 'index': 100, 'type': 'ubyte', 'enum': 'OmDestinationEntityIndicator', }, 
				'profitSplitOption':                              { 'index': 101, 'type': 'ubyte', 'enum': 'OmProfitSplitOption', }, 
				'primaryPartyType':                               { 'index': 102, 'type': 'ubyte', 'enum': 'OmPrimaryPartyType', }, 
				'customerPartyType':                              { 'index': 103, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'visibilityGroups':                               { 'index': 104, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'sendWithheld':                                   { 'index': 105, 'type': 'bool', }, 
				'basketExternalReferences':                       { 'index': 106, 'type': 'table', 'tablename': 'ExternalReference', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'regNmsExemptionType':                            { 'index': 107, 'type': 'ubyte', 'enum': 'OmRegNmsExemptionType', }, 
				'currentOwner':                                   { 'index': 108, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'sourceSystemOwner':                              { 'index': 109, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'clientConsentsName':                             { 'index': 110, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'doNotIncrease':                                  { 'index': 111, 'type': 'bool', }, 
				'doNotReduce':                                    { 'index': 112, 'type': 'bool', }, 
				'locateInformationList':                          { 'index': 113, 'type': 'table', 'tablename': 'LocateInformation', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'regulatoryReportDomain':                         { 'index': 114, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'sourceRegulatoryReportDomain':                   { 'index': 115, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'opaqueOrderData':                                { 'index': 116, 'type': 'binary', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'dictionaryType' , 'value' : 'blob'},
				                                                    ],
				                                                  },
				'creatorMarketDataStamps':                        { 'index': 117, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'isImbalanceOffsetOnly':                          { 'index': 118, 'type': 'bool', }, 
				'owner':                                          { 'index': 119, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'sourceOwner':                                    { 'index': 120, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'automationStrategy':                             { 'index': 121, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'primaryBasketExternalReference':                 { 'index': 122, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'secondaryBasketExternalReferences':              { 'index': 123, 'type': 'table', 'tablename': 'BasketExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'shouldAdvertiseExecutions':                      { 'index': 124, 'type': 'bool', }, 
				'clientOrderCapacity':                            { 'index': 125, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'destinationMarketOnly':                          { 'index': 126, 'type': 'bool', }, 
				'expireAfterMilliseconds':                        { 'index': 127, 'type': 'int', }, 
				'expireOnExecution':                              { 'index': 128, 'type': 'bool', }, 
				'marketSession':                                  { 'index': 129, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'tsorAlgorithm':                                  { 'index': 130, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'tsorAlgorithmParameters':                        { 'index': 131, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '128'},
				                                                    ],
				                                                  },
				'tradingAlgorithmEngine':                         { 'index': 132, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'tradingStyle':                                   { 'index': 133, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'stoppedStockAgreementPrice':                     { 'index': 134, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'secShortSellExemptionReason':                    { 'index': 135, 'type': 'ubyte', 'enum': 'OmSecShortSellExemptionReason', }, 
				'whiteLabelDataId':                               { 'index': 136, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'destinationSubId':                               { 'index': 137, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'indicationPolicyParameters':                     { 'index': 138, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'opaqueOrderDataItemsToRemove':                   { 'index': 139, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'opaqueOrderDataItemsToSet':                      { 'index': 140, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'orderCreationType':                              { 'index': 141, 'type': 'ubyte', 'enum': 'OmOrderCreationType', }, 
				'sourceSystemDoesBooking':                        { 'index': 142, 'type': 'bool', }, 
				'customerOeId':                                   { 'index': 143, 'type': 'string', 'aliases': ['customerOeid'], 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'notEligibleForTrading':                          { 'index': 144, 'type': 'bool', }, 
				'testCaseOverrideId':                             { 'index': 145, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'consolidatedRegulatoryCode':                     { 'index': 146, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'advertisingPolicyParameters':                    { 'index': 147, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'targetQuoteId':                                  { 'index': 148, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'disableProductLookup':                           { 'index': 149, 'type': 'bool', }, 
				'buyToCover':                                     { 'index': 150, 'type': 'bool', }, 
				'interMarketSweep':                               { 'index': 151, 'type': 'bool', }, 
				'destinationMarketId':                            { 'index': 152, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'syntheticType':                                  { 'index': 153, 'type': 'ubyte', 'enum': 'OmSyntheticType', }, 
				'isCrossIntentOrder':                             { 'index': 154, 'type': 'bool', }, 
				'rejectOnLocateFailure':                          { 'index': 155, 'type': 'bool', }, 
				'informationBarrierId':                           { 'index': 156, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '12'},
				                                                    ],
				                                                  },
				'regNmsSweepWaived':                              { 'index': 157, 'type': 'bool', }, 
				'isIrrevocableOrder':                             { 'index': 158, 'type': 'bool', }, 
				'crossRequestReason':                             { 'index': 159, 'type': 'ubyte', 'enum': 'OmCrossRequestReason', }, 
				'crossMatchingId':                                { 'index': 160, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'isLateAuctionOrder':                             { 'index': 161, 'type': 'bool', }, 
				'approvalInformationList':                        { 'index': 162, 'type': 'table', 'tablename': 'ApprovalInformation', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'regRepCode':                                     { 'index': 163, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'isWorkupOrder':                                  { 'index': 164, 'type': 'bool', }, 
				'isCDSPassiveOrder':                              { 'index': 165, 'type': 'bool', }, 
				'workupSessionId':                                { 'index': 166, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '12'},
				                                                    ],
				                                                  },
				'exchangeAccount':                                { 'index': 167, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'minimumIOCPriceImprovement':                     { 'index': 168, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minimumAggressorRestTime':                       { 'index': 169, 'type': 'int', }, 
				'marketParticipantId':                            { 'index': 170, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '4'},
				                                                    ],
				                                                  },
				'customerOeIdType':                               { 'index': 171, 'type': 'ubyte', 'enum': 'OmOrganizationalEntityIdType', }, 
				'isPartialAcceptAmendEligible':                   { 'index': 172, 'type': 'bool', }, 
				'salesAttributionUser':                           { 'index': 173, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'isSolicitedFromEM':                              { 'index': 174, 'type': 'bool', }, 
				'directedRegRepCode':                             { 'index': 175, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'isCloakedOrder':                                 { 'index': 176, 'type': 'bool', }, 
				'isClientBookable':                               { 'index': 177, 'type': 'bool', }, 
				'flowSpecificCanada':                             { 'index': 178, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'regNmsSweepWaivedClientUserId':                  { 'index': 179, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'visibilityUserList':                             { 'index': 180, 'type': 'table', 'tablename': 'VisibilityUserId', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'tradingAlgorithmPrivateParameters':              { 'index': 181, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '1024'},
				                                                    ],
				                                                  },
				'destinationVisibilityGroups':                    { 'index': 182, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'bookingFlowStyle':                               { 'index': 183, 'type': 'ubyte', 'enum': 'OmBookingFlowStyle', }, 
				'syntheticDetails':                               { 'index': 184, 'type': 'table', 'tablename': 'SyntheticDetails', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'fixTextInstruction':                             { 'index': 185, 'type': 'string', 'aliases': ['clientAccountName','clientFixAccount'], 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'hideMembershipIdAtDestination':                  { 'index': 186, 'type': 'bool', }, 
				'isMinimumGuaranteedFillEligible':                { 'index': 187, 'type': 'bool', }, 
				'enhancedLiquidityPools':                         { 'index': 188, 'type': 'table', 'tablename': 'EnhancedLiquidityPoolName', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'exchangeRates':                                  { 'index': 189, 'type': 'table', 'tablename': 'ExchangeRate', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'tradingCountryOverride':                         { 'index': 190, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '2'},
				                                                    ],
				                                                  },
				'providingBins':                                  { 'index': 191, 'type': 'table', 'tablename': 'ProvidingBin', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'matchingBins':                                   { 'index': 192, 'type': 'table', 'tablename': 'MatchingBin', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'routingStrategy':                                { 'index': 193, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'isAggregatedFirmOrder':                          { 'index': 194, 'type': 'bool', }, 
				'preferredMarketMakerId':                         { 'index': 195, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'isDirectedOrderWithAuction':                     { 'index': 196, 'type': 'bool', }, 
				'capitalCommitCategory':                          { 'index': 197, 'type': 'ubyte', 'enum': 'OmCapitalCommitCategory', }, 
				'serviceOffering':                                { 'index': 198, 'type': 'ubyte', 'enum': 'OmServiceOffering', }, 
				'facilitationPercent':                            { 'index': 199, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'facilitationPrice':                              { 'index': 200, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'facilitationPositionOpenClose':                  { 'index': 201, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'facilitationStepUpPrice':                        { 'index': 202, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'crossMatchingExternalReference':                 { 'index': 203, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'marketMakerExchangeRepresented':                 { 'index': 204, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '4'},
				                                                    ],
				                                                  },
				'marketMakerId':                                  { 'index': 205, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'marketMakerOCCClearingAccount':                  { 'index': 206, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'isMarketMakerClientOptionSpecialistInClass':     { 'index': 207, 'type': 'bool', }, 
				'clientLegalEntityId':                            { 'index': 208, 'type': 'int', }, 
				'isClientStockSpecialistInUnderlier':             { 'index': 209, 'type': 'bool', }, 
				'isPHLXOffFloorOrder':                            { 'index': 210, 'type': 'bool', }, 
				'customerUser':                                   { 'index': 211, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'parentsTradingAlgorithmEngine':                  { 'index': 212, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'clientAlgorithmCategory':                        { 'index': 213, 'type': 'ubyte', 'enum': 'OmClientAlgorithmCategory', }, 
				'principalCapacityPrimaryAccountOverride':        { 'index': 214, 'type': 'table', 'tablename': 'Account', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'clientCustomerPartyType':                        { 'index': 215, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'relatedOptionOrderExternalReferences':           { 'index': 216, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'exchangeSubAccount':                             { 'index': 217, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'isCorporateBuyBackOrder':                        { 'index': 218, 'type': 'bool', }, 
				'isSDRUSPerson':                                  { 'index': 219, 'type': 'bool', }, 
				'swapGuaranteedPriceType':                        { 'index': 220, 'type': 'ubyte', 'enum': 'OmSwapGuaranteedPriceType', }, 
				'isDiscretionExercised':                          { 'index': 221, 'type': 'bool', }, 
				'sourceFlowIdentifier':                           { 'index': 222, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'flowIdentifier':                                 { 'index': 223, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'destinationFlowIdentifier':                      { 'index': 224, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isDestinationIndicationOfInterestMatchingOrder': { 'index': 225, 'type': 'bool', }, 
				'disableTransientCoverageVisibility':             { 'index': 226, 'type': 'bool', }, 
				'doNotAutoAcceptParentOnSplit':                   { 'index': 227, 'type': 'bool', }, 
				'externalTradingAlgorithmDetails':                { 'index': 228, 'type': 'table', 'tablename': 'ExternalTradingAlgorithmDetails', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isEnhancedLimitOrder':                           { 'index': 229, 'type': 'bool', }, 
				'isSpecialLimitOrder':                            { 'index': 230, 'type': 'bool', }, 
				'clientAccessId':                                 { 'index': 231, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'allocationOrderId':                              { 'index': 232, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'dealValueRatio':                                 { 'index': 233, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'hedgeValueRatio':                                { 'index': 234, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'disableRealTimeExecutionNotification':           { 'index': 235, 'type': 'bool', }, 
				'appliedControlLayers':                           { 'index': 236, 'type': 'table', 'tablename': 'AppliedControlLayer', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'clearingFirm':                                   { 'index': 237, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'isOptionStrategyEquityLeg':                      { 'index': 238, 'type': 'bool', }, 
				'destinationOwner':                               { 'index': 239, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'isBlockDistributionOrder':                       { 'index': 240, 'type': 'bool', }, 
				'parentPrimaryAccountEntity':                     { 'index': 241, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '9'},
				                                                    ],
				                                                  },
				'referenceCharges':                               { 'index': 242, 'type': 'table', 'tablename': 'Charge', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'executeSynthetically':                           { 'index': 243, 'type': 'bool', }, 
				'destinationRegulatoryReportDomain':              { 'index': 244, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'tradingAlgorithmSequence':                       { 'index': 245, 'type': 'table', 'tablename': 'TradingAlgorithmSequence', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'priceStabilization':                             { 'index': 246, 'type': 'bool', }, 
				'isHighTouchOrderFromLowTouch':                   { 'index': 247, 'type': 'bool', }, 
				'flowSpecificAustralia':                          { 'index': 248, 'type': 'table', 'tablename': 'FlowSpecificAustralia', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'tradingUnitId':                                  { 'index': 249, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '8'},
				                                                    ],
				                                                  },
				'fixLineId':                                      { 'index': 250, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'formatError':                                    { 'index': 251, 'type': 'table', 'tablename': 'FormatError', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'clientPrincipalType':                            { 'index': 252, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'isGiveUpOrder':                                  { 'index': 253, 'type': 'bool', }, 
				'unsuspendParentOnSplit':                         { 'index': 254, 'type': 'bool', }, 
				'destinationDoNotRoute':                          { 'index': 255, 'type': 'bool', }, 
				'fixClientInformation':                           { 'index': 256, 'type': 'table', 'tablename': 'FixClientInformation', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'safeHaborBehaviorRequested':                     { 'index': 257, 'type': 'bool', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'safeHarborBehaviorRequested':                    { 'index': 258, 'type': 'bool', }, 
				'hedgeDestinationId':                             { 'index': 259, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'lastOmsBooksHedge':                              { 'index': 260, 'type': 'bool', }, 
				'currentSystemDoesNotBook':                       { 'index': 261, 'type': 'bool', }, 
				'destinationSystemDoesNotBook':                   { 'index': 262, 'type': 'bool', }, 
				'minExecutableNotionalValue':                     { 'index': 263, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minSingleExecutionQuantity':                     { 'index': 264, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minSingleExecutionNotionalValue':                { 'index': 265, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'isMinExecutableQuantityResidualNotExecutable':   { 'index': 266, 'type': 'bool', }, 
				'isMinExecutableQuantityMinExecutionSize':        { 'index': 267, 'type': 'bool', }, 
				'clientGsRelationship':                           { 'index': 268, 'type': 'ubyte', 'enum': 'OmGsEntity', }, 
				'marginType':                                     { 'index': 269, 'type': 'ubyte', 'enum': 'OmMarginType', }, 
				'bypassSyntheticValidations':                     { 'index': 270, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
			}, 
		}, 
		'CreateChildOrderCommandContext': {
			'id': 674, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'quantity':                { 'index': 0, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'parameterizedLimitPrice': { 'index': 1, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'CreateChildOrderCommandSynchronizationWrapper': {
			'id': 544, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'createChildOrderCommand':                   { 'index': 0, 'type': 'table', 'tablename': 'CreateChildOrderCommand', 
				                                               'meta-fields': [
					                                           {'field': 'dictionaryType' , 'value' : 'struct'},
				                                               ],
				                                             },
				'releaseSendWithheldOrderDelayMicroseconds': { 'index': 1, 'type': 'int', }, 
			}, 
		}, 
		'CreateExecutionCommand': {
			'id': 47, 
			'version': 44, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'orderExternalReferences':                 { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'orderId':                                 { 'index': 2, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '29'},
				                                             ],
				                                           },
				'execExternalReferences':                  { 'index': 3, 'type': 'table', 'tablename': 'ExternalReference', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'sellShort':                               { 'index': 4, 'type': 'bool', }, 
				'sellShortExempt':                         { 'index': 5, 'type': 'bool', }, 
				'quantity':                                { 'index': 6, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'executionPrice':                          { 'index': 7, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'executionNetPrice':                       { 'index': 8, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'settlementPrice':                         { 'index': 9, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'settlementNetPrice':                      { 'index': 10, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'executionTime':                           { 'index': 11, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                             ],
				                                           },
				'executionTimeGmtOffset':                  { 'index': 12, 'type': 'double', # FIELD IS OBSOLETE
				                                             'meta-fields': [
					                                         {'field': 'obsolete' , 'value' : 'true'},
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'accounts':                                { 'index': 13, 'type': 'table', 'tablename': 'Account', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'settlementDateCalcMethod':                { 'index': 14, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'marketTradeDate':                         { 'index': 15, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'date'},
				                                             ],
				                                           },
				'settlementDate':                          { 'index': 16, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                             ],
				                                           },
				'executionCapacity':                       { 'index': 17, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionPoint':                          { 'index': 18, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'subExecutionPoint':                       { 'index': 19, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'charges':                                 { 'index': 20, 'type': 'table', 'tablename': 'Charge', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'executionCurrency':                       { 'index': 21, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '3'},
				                                             ],
				                                           },
				'settlementCurrency':                      { 'index': 22, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '3'},
				                                             ],
				                                           },
				'exchangeRates':                           { 'index': 23, 'type': 'table', 'tablename': 'ExchangeRate', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'marketDataStamps':                        { 'index': 24, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'executionVenue':                          { 'index': 25, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'tradeReportingType':                      { 'index': 26, 'type': 'ubyte', 'enum': 'OmTradeReportingType', }, 
				'executionTimeLocal':                      { 'index': 27, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                             ],
				                                           },
				'relatedEntities':                         { 'index': 28, 'type': 'table', 'tablename': 'RelatedEntity', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'liquidityIndicator':                      { 'index': 29, 'type': 'ubyte', 'enum': 'OmLiquidityIndicatorType', }, 
				'executionLastMarket':                     { 'index': 30, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'nyseBillingIndicator':                    { 'index': 31, 'type': 'ubyte', 'enum': 'OmNyseBillingIndicator', }, 
				'counterPartyId':                          { 'index': 32, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '29'},
				                                             ],
				                                           },
				'executionReason':                         { 'index': 33, 'type': 'ubyte', 'enum': 'OmExecutionReason', }, 
				'isOtherSideShortSell':                    { 'index': 34, 'type': 'bool', }, 
				'isOtherSideShortSellExempt':              { 'index': 35, 'type': 'bool', }, 
				'parameterizedExecutionPrice':             { 'index': 36, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'resolveAllPrices':                        { 'index': 37, 'type': 'bool', # FIELD IS OBSOLETE
				                                             'meta-fields': [
					                                         {'field': 'obsolete' , 'value' : 'true'},
				                                             ],
				                                           },
				'intraEntityIndicator':                    { 'index': 38, 'type': 'ubyte', 'enum': 'OmIntraEntityIndicator', }, 
				'originalPartyTypes':                      { 'index': 39, 'type': 'ubyte', 'enum': 'OmOriginalPartyTypes', }, 
				'counterPartyBreakdown':                   { 'index': 40, 'type': 'table', 'tablename': 'CounterPartyBreakdown', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'clearingInstruction':                     { 'index': 41, 'type': 'ubyte', 'enum': 'OmClearingInstructionType', }, 
				'executionSession':                        { 'index': 42, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'tradeReportModifiers':                    { 'index': 43, 'type': 'ubyte', 'enum': 'OmTradeReportModifiers', }, 
				'consolidatedRegulatoryCode':              { 'index': 44, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'exchangeBillingCode':                     { 'index': 45, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '7'},
				                                             ],
				                                           },
				'isSourceExecution':                       { 'index': 46, 'type': 'bool', }, 
				'tradeReportingExecutionType':             { 'index': 47, 'type': 'ubyte', 'enum': 'OmTradeReportingExecutionType', }, 
				'executionGroupReportId':                  { 'index': 48, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                             'meta-fields': [
					                                         {'field': 'deprecated' , 'value' : 'true'},
				                                             ],
				                                           },
				'executionTimeMicrosecond':                { 'index': 49, 'type': 'int', }, 
				'crossPartyOrderCapacity':                 { 'index': 50, 'type': 'table', 'tablename': 'CrossPartyOrderCapacity', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'regNmsExemptionType':                     { 'index': 51, 'type': 'ubyte', 'enum': 'OmRegNmsExemptionType', }, 
				'owner':                                   { 'index': 52, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '32'},
				                                             ],
				                                           },
				'isExecFromDarkOrder':                     { 'index': 53, 'type': 'bool', }, 
				'isLocateRequested':                       { 'index': 54, 'type': 'bool', }, 
				'manningTriggerExecutionId':               { 'index': 55, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '37'},
				                                             ],
				                                           },
				'internalProductId':                       { 'index': 56, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '29'},
				                                             ],
				                                           },
				'internalProductIdType':                   { 'index': 57, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'exchangeExecutionId':                     { 'index': 58, 'type': 'string', }, 
				'secShortSellExemptionReason':             { 'index': 59, 'type': 'ubyte', 'enum': 'OmSecShortSellExemptionReason', }, 
				'whiteLabelDataId':                        { 'index': 60, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '20'},
				                                             ],
				                                           },
				'doNotBook':                               { 'index': 61, 'type': 'bool', }, 
				'buySell':                                 { 'index': 62, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'isAdministrativeOverride':                { 'index': 63, 'type': 'bool', }, 
				'crossDriverExternalReference':            { 'index': 64, 'type': 'table', 'tablename': 'ExternalReference', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'delayedPublicationTime':                  { 'index': 65, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                             ],
				                                           },
				'electronicBluesheetCode':                 { 'index': 66, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '1'},
				                                             ],
				                                           },
				'orderOriginCode':                         { 'index': 67, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '1'},
				                                             ],
				                                           },
				'isMifidSpecialPriceExecution':            { 'index': 68, 'type': 'bool', }, 
				'executionType':                           { 'index': 69, 'type': 'ubyte', 'enum': 'OmExecutionType', }, 
				'australiaTradeConditionCode':             { 'index': 70, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                             'meta-fields': [
					                                         {'field': 'deprecated' , 'value' : 'true'},
					                                         {'field': 'maxStringLength' , 'value' : '8'},
				                                             ],
				                                           },
				'risklessPrincipalOriginalExecutionPoint': { 'index': 71, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'deliverProspectusToClient':               { 'index': 72, 'type': 'bool', }, 
				'referenceCharges':                        { 'index': 73, 'type': 'table', 'tablename': 'Charge', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'destinationMembershipId':                 { 'index': 74, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '30'},
				                                             ],
				                                           },
				'execFlowSpecificAustralia':               { 'index': 75, 'type': 'table', 'tablename': 'ExecFlowSpecificAustralia', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
			}, 
		}, 
		'CreateGroupedExecutionsCommand': {
			'id': 153, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'createExecutionCommands': { 'index': 1, 'type': 'table', 'tablename': 'CreateExecutionCommand', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
			}, 
		}, 
		'CreateIndicationCommand': {
			'id': 705, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'indicationOwners':                { 'index': 0, 'type': 'table', 'tablename': 'IndicationOwner', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'indicationSideDetails':           { 'index': 1, 'type': 'table', 'tablename': 'IndicationSideDetail', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'manualIndicationIndicator':       { 'index': 2, 'type': 'bool', }, 
				'indicationCapacity':              { 'index': 3, 'type': 'ubyte', 'enum': 'OmIndicationCapacity', }, 
				'expirationDateTime':              { 'index': 4, 'type': 'int', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                     ],
				                                   },
				'comments':                        { 'index': 5, 'type': 'table', 'tablename': 'Comment', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'outboundComment':                 { 'index': 6, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '128'},
				                                     ],
				                                   },
				'externalReferences':              { 'index': 7, 'type': 'table', 'tablename': 'ExternalReference', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'indicationTier':                  { 'index': 8, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '2'},
				                                     ],
				                                   },
				'clientIndicationInterests':       { 'index': 9, 'type': 'table', 'tablename': 'ClientIndicationInterest', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'indicationRoutingType':           { 'index': 10, 'type': 'ubyte', 'enum': 'OmIndicationRoutingType', }, 
				'tradingAlgorithmEngine':          { 'index': 11, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '32'},
				                                     ],
				                                   },
				'indicationCurrency':              { 'index': 12, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '3'},
				                                     ],
				                                   },
				'liquiditySourceIsOrderInHand':    { 'index': 13, 'type': 'bool', }, 
				'liquiditySourceIsTakingPosition': { 'index': 14, 'type': 'bool', }, 
				'liquiditySourceIsBookUnwind':     { 'index': 15, 'type': 'bool', }, 
				'indicationQuality':               { 'index': 16, 'type': 'ubyte', 'enum': 'OmIndicationQuality', }, 
				'productId':                       { 'index': 17, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '100'},
				                                     ],
				                                   },
				'productIdType':                   { 'index': 18, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'commandHeader':                   { 'index': 19, 'type': 'table', 'tablename': 'CommandHeader', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'struct'},
				                                     ],
				                                   },
				'capitalCommitType':               { 'index': 20, 'type': 'ubyte', 'enum': 'OmCapitalCommitType', }, 
				'targetClientParties':             { 'index': 21, 'type': 'table', 'tablename': 'ClientParty', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'relatedEntities':                 { 'index': 22, 'type': 'table', 'tablename': 'RelatedEntity', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'visibilityGroups':                { 'index': 23, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'indicationParameters':            { 'index': 24, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '1024'},
				                                     ],
				                                   },
			}, 
		}, 
		'CreateLiquidityCommand': {
			'id': 733, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':            { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                              ],
				                            },
				'externalReferences':       { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'productId':                { 'index': 2, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '100'},
				                              ],
				                            },
				'productIdType':            { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'liquidityType':            { 'index': 4, 'type': 'ubyte', 'enum': 'OmLiquidityType', }, 
				'liquidityParameters':      { 'index': 5, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '1024'},
				                              ],
				                            },
				'excludedClientParties':    { 'index': 6, 'type': 'table', 'tablename': 'ClientParty', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'targetClientParties':      { 'index': 7, 'type': 'table', 'tablename': 'ClientParty', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'liquiditySourceReason':    { 'index': 8, 'type': 'ubyte', 'enum': 'OmLiquiditySourceReason', }, 
				'liquiditySourceOwners':    { 'index': 9, 'type': 'table', 'tablename': 'IndicationOwner', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'visibilityGroups':         { 'index': 10, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'liquidityBlockingReasons': { 'index': 11, 'type': 'table', 'tablename': 'LiquidityBlockingReason', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'expirationDateTime':       { 'index': 12, 'type': 'int', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'datetime'},
				                              ],
				                            },
				'comments':                 { 'index': 13, 'type': 'table', 'tablename': 'Comment', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'buySell':                  { 'index': 14, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'quantity':                 { 'index': 15, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'remainingQuantity':        { 'index': 16, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'orderType':                { 'index': 17, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'limitPrice':               { 'index': 18, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'pegType':                  { 'index': 19, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffset':                { 'index': 20, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'pegOffsetType':            { 'index': 21, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'executionCurrency':        { 'index': 22, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '3'},
				                              ],
				                            },
				'orderCapacity':            { 'index': 23, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'principalType':            { 'index': 24, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'agencyType':               { 'index': 25, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'liquidityCapacity':        { 'index': 26, 'type': 'ubyte', 'enum': 'OmIndicationCapacity', }, 
				'accounts':                 { 'index': 27, 'type': 'table', 'tablename': 'Account', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'capitalCommitType':        { 'index': 28, 'type': 'ubyte', 'enum': 'OmCapitalCommitType', }, 
				'tradingAlgorithmEngine':   { 'index': 29, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '32'},
				                              ],
				                            },
				'relatedEntities':          { 'index': 30, 'type': 'table', 'tablename': 'RelatedEntity', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
			}, 
		}, 
		'CreateMultiLegOrderCommand': {
			'id': 537, 
			'version': 18, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                              { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'externalReferences':                         { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'quantity':                                   { 'index': 2, 'type': 'double', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                                ],
				                                              },
				'orderType':                                  { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'timeInForce':                                { 'index': 4, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'allOrNone':                                  { 'index': 5, 'type': 'bool', }, 
				'limitPrice':                                 { 'index': 6, 'type': 'double', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                                ],
				                                              },
				'orderCapacity':                              { 'index': 7, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':                                 { 'index': 8, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':                              { 'index': 9, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'primaryPartyType':                           { 'index': 10, 'type': 'ubyte', 'enum': 'OmPrimaryPartyType', }, 
				'customerPartyType':                          { 'index': 11, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'accounts':                                   { 'index': 12, 'type': 'table', 'tablename': 'Account', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'allocationAccounts':                         { 'index': 13, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'destinationId':                              { 'index': 14, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '20'},
				                                                ],
				                                              },
				'executionPointOverride':                     { 'index': 15, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '16'},
				                                                ],
				                                              },
				'executionCurrency':                          { 'index': 16, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '3'},
				                                                ],
				                                              },
				'settlementCurrency':                         { 'index': 17, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '3'},
				                                                ],
				                                              },
				'tradingAlgorithm':                           { 'index': 18, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '32'},
				                                                ],
				                                              },
				'tradingAlgorithmEngine':                     { 'index': 19, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '32'},
				                                                ],
				                                              },
				'tradingAlgorithmParameters':                 { 'index': 20, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '1024'},
				                                                ],
				                                              },
				'regulatoryReportDomain':                     { 'index': 21, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'sourceRegulatoryReportDomain':               { 'index': 22, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'sourceEntityIndicator':                      { 'index': 23, 'type': 'ubyte', 'enum': 'OmSourceEntityIndicator', }, 
				'crossConsent':                               { 'index': 24, 'type': 'ubyte', 'enum': 'OmCrossingOption', }, 
				'smartRouteConsent':                          { 'index': 25, 'type': 'ubyte', 'enum': 'OmSmartRoutingOption', }, 
				'owner':                                      { 'index': 26, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '32'},
				                                                ],
				                                              },
				'automationStrategy':                         { 'index': 27, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '16'},
				                                                ],
				                                              },
				'accessId':                                   { 'index': 28, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '29'},
				                                                ],
				                                              },
				'accessIdType':                               { 'index': 29, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'customerOeId':                               { 'index': 30, 'type': 'string', 'aliases': ['customerOeid'], 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '32'},
				                                                ],
				                                              },
				'customerOeIdType':                           { 'index': 31, 'type': 'ubyte', 'enum': 'OmOrganizationalEntityIdType', }, 
				'interventionConsent':                        { 'index': 32, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
				'tradingUnitId':                              { 'index': 33, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '8'},
				                                                ],
				                                              },
				'fixLineId':                                  { 'index': 34, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '32'},
				                                                ],
				                                              },
				'fixOrderAttributes':                         { 'index': 35, 'type': 'table', 'tablename': 'FixOrderAttributes', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'fixClientInformation':                       { 'index': 36, 'type': 'table', 'tablename': 'FixClientInformation', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'isOptionStrategyEquityLeg':                  { 'index': 37, 'type': 'bool', # FIELD IS OBSOLETE
				                                                'meta-fields': [
					                                            {'field': 'obsolete' , 'value' : 'true'},
				                                                ],
				                                              },
				'legInformationList':                         { 'index': 38, 'type': 'table', 'tablename': 'LegInformation', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'capitalCommitCategory':                      { 'index': 39, 'type': 'ubyte', 'enum': 'OmCapitalCommitCategory', }, 
				'formatError':                                { 'index': 40, 'type': 'table', 'tablename': 'FormatError', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'serviceOffering':                            { 'index': 41, 'type': 'ubyte', 'enum': 'OmServiceOffering', }, 
				'isSolicitedOrder':                           { 'index': 42, 'type': 'bool', }, 
				'notHeld':                                    { 'index': 43, 'type': 'bool', }, 
				'visibilityGroups':                           { 'index': 44, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'destinationVisibilityGroups':                { 'index': 45, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'regRepCode':                                 { 'index': 46, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '5'},
				                                                ],
				                                              },
				'directedRegRepCode':                         { 'index': 47, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '5'},
				                                                ],
				                                              },
				'isTraderManagedOrder':                       { 'index': 48, 'type': 'bool', }, 
				'isTradingChildOrder':                        { 'index': 49, 'type': 'bool', }, 
				'restrictedTradingListOverride':              { 'index': 50, 'type': 'table', 'tablename': 'RestrictedTradingListOverride', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'isClientBookable':                           { 'index': 51, 'type': 'bool', }, 
				'marketMakerExchangeRepresented':             { 'index': 52, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '4'},
				                                                ],
				                                              },
				'marketMakerId':                              { 'index': 53, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '5'},
				                                                ],
				                                              },
				'marketMakerOCCClearingAccount':              { 'index': 54, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '5'},
				                                                ],
				                                              },
				'isMarketMakerClientOptionSpecialistInClass': { 'index': 55, 'type': 'bool', }, 
				'clientLegalEntityId':                        { 'index': 56, 'type': 'int', }, 
				'isClientStockSpecialistInUnderlier':         { 'index': 57, 'type': 'bool', }, 
				'isPHLXOffFloorOrder':                        { 'index': 58, 'type': 'bool', }, 
				'isCloakedOrder':                             { 'index': 59, 'type': 'bool', }, 
				'clearingFirm':                               { 'index': 60, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '5'},
				                                                ],
				                                              },
				'executionAttributionStrategy':               { 'index': 61, 'type': 'ubyte', 'enum': 'OmExecutionAttributionStrategy', }, 
				'isTraderAssignmentOrder':                    { 'index': 62, 'type': 'bool', }, 
				'sourceSystemDoesBooking':                    { 'index': 63, 'type': 'bool', }, 
				'sourceOwner':                                { 'index': 64, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '20'},
				                                                ],
				                                              },
				'destinationSubId':                           { 'index': 65, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '20'},
				                                                ],
				                                              },
				'sourceFlowIdentifier':                       { 'index': 66, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'flowIdentifier':                             { 'index': 67, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'destinationFlowIdentifier':                  { 'index': 68, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'autoForward':                                { 'index': 69, 'type': 'bool', }, 
				'sendWithheld':                               { 'index': 70, 'type': 'bool', }, 
				'doNotRoute':                                 { 'index': 71, 'type': 'bool', }, 
				'comments':                                   { 'index': 72, 'type': 'table', 'tablename': 'Comment', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'primaryBasketExternalReference':             { 'index': 73, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'opaqueOrderDataItemsToSet':                  { 'index': 74, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'opaqueOrderDataItemsToRemove':               { 'index': 75, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
				'manualOrderIndicator':                       { 'index': 76, 'type': 'bool', }, 
				'clientConsents':                             { 'index': 77, 'type': 'ubyte', 'enum': 'OmClientConsents', }, 
				'clientConsentsName':                         { 'index': 78, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '30'},
				                                                ],
				                                              },
				'crossMatchingId':                            { 'index': 79, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '30'},
				                                                ],
				                                              },
				'crossRequestReason':                         { 'index': 80, 'type': 'ubyte', 'enum': 'OmCrossRequestReason', }, 
				'crossMatchingExternalReference':             { 'index': 81, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                ],
				                                              },
				'destinationDoNotRoute':                      { 'index': 82, 'type': 'bool', }, 
				'facilitationStepUpPrice':                    { 'index': 83, 'type': 'double', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                                ],
				                                              },
			}, 
		}, 
		'CreateOrderCommand': {
			'id': 28, 
			'version': 186, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                                  { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'externalReferences':                             { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'buySell':                                        { 'index': 2, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'quantity':                                       { 'index': 3, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'orderType':                                      { 'index': 4, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'timeInForce':                                    { 'index': 5, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'limitPrice':                                     { 'index': 6, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'notHeld':                                        { 'index': 7, 'type': 'bool', }, 
				'executionPointOverride':                         { 'index': 8, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'executionCurrency':                              { 'index': 9, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '3'},
				                                                    ],
				                                                  },
				'settlementCurrency':                             { 'index': 10, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '3'},
				                                                    ],
				                                                  },
				'maxTrancheSize':                                 { 'index': 11, 'type': 'double', 'aliases': ['displaySize'], 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'orderCapacity':                                  { 'index': 12, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':                                     { 'index': 13, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':                                  { 'index': 14, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'crossConsent':                                   { 'index': 15, 'type': 'ubyte', 'enum': 'OmCrossingOption', }, 
				'productIdType':                                  { 'index': 16, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'productId':                                      { 'index': 17, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '100'},
				                                                    ],
				                                                  },
				'productIdMarket':                                { 'index': 18, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '4'},
				                                                    ],
				                                                  },
				'productIdCountry':                               { 'index': 19, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '2'},
				                                                    ],
				                                                  },
				'charges':                                        { 'index': 20, 'type': 'table', 'tablename': 'Charge', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'stopPrice':                                      { 'index': 21, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'settlementDateCalcMethod':                       { 'index': 22, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'settlementDate':                                 { 'index': 23, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'startDateTime':                                  { 'index': 24, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'expirationDateTime':                             { 'index': 25, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'sellShort':                                      { 'index': 26, 'type': 'bool', }, 
				'sellShortExempt':                                { 'index': 27, 'type': 'bool', }, 
				'positionOpenClose':                              { 'index': 28, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'tradingAlgorithm':                               { 'index': 29, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'capitalCommitQuantity':                          { 'index': 30, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'capitalCommitPrice':                             { 'index': 31, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'protectionType':                                 { 'index': 32, 'type': 'ubyte', 'enum': 'OmProtectionType', }, 
				'verbalAgreementTimestamp':                       { 'index': 33, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'capitalCommitTime':                              { 'index': 34, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'capitalCommitType':                              { 'index': 35, 'type': 'ubyte', 'enum': 'OmCapitalCommitType', }, 
				'comments':                                       { 'index': 36, 'type': 'table', 'tablename': 'Comment', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'clientConsents':                                 { 'index': 37, 'type': 'ubyte', 'enum': 'OmClientConsents', }, 
				'allOrNone':                                      { 'index': 38, 'type': 'bool', }, 
				'customerOeId':                                   { 'index': 39, 'type': 'string', 'aliases': ['customerOeid'], 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'customerUser':                                   { 'index': 40, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'fixLineId':                                      { 'index': 41, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'customerFixAcronym':                             { 'index': 42, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'allocationAccounts':                             { 'index': 43, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'fixTextInstruction':                             { 'index': 44, 'type': 'string', 'aliases': ['clientAccountName','clientFixAccount'], 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'contractForDifferences':                         { 'index': 45, 'type': 'bool', }, 
				'smartRouteConsent':                              { 'index': 46, 'type': 'ubyte', 'enum': 'OmSmartRoutingOption', }, 
				'accounts':                                       { 'index': 47, 'type': 'table', 'tablename': 'Account', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'siEligibility':                                  { 'index': 48, 'type': 'ubyte', 'enum': 'OmSiEligibility', }, 
				'pegOffset':                                      { 'index': 49, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minExecutableQuantity':                          { 'index': 50, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'reportingVenue':                                 { 'index': 51, 'type': 'ubyte', 'enum': 'OmReportingVenue', }, 
				'tradingAlgorithmParameters':                     { 'index': 52, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '1024'},
				                                                    ],
				                                                  },
				'clientStarId':                                   { 'index': 53, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'clientFixAcronym':                               { 'index': 54, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'pegType':                                        { 'index': 55, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffsetType':                                  { 'index': 56, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'pegScope':                                       { 'index': 57, 'type': 'ubyte', 'enum': 'OmPegScopeType', }, 
				'discretionaryReferencePriceType':                { 'index': 58, 'type': 'ubyte', 'enum': 'OmDiscretionaryReferencePriceType', }, 
				'discretionaryOffset':                            { 'index': 59, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'discretionaryOffsetType':                        { 'index': 60, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'orderbookVisibility':                            { 'index': 61, 'type': 'ubyte', 'enum': 'OmOrderbookVisibilityType', }, 
				'minDiscretionaryQuantity':                       { 'index': 62, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minSpreadConstraint':                            { 'index': 63, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'maxSpreadConstraint':                            { 'index': 64, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'offsetDirectionType':                            { 'index': 65, 'type': 'ubyte', 'enum': 'OmOffsetDirectionType', }, 
				'ioiOrderRequestId':                              { 'index': 66, 'type': 'string', }, 
				'basketId':                                       { 'index': 67, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'ptOrderType':                                    { 'index': 68, 'type': 'ubyte', 'enum': 'OmPtOrderType', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'isSalesManagedOrder':                            { 'index': 69, 'type': 'bool', }, 
				'isTraderAssignmentOrder':                        { 'index': 70, 'type': 'bool', }, 
				'isTraderManagedOrder':                           { 'index': 71, 'type': 'bool', }, 
				'isInternallyRoutableOrder':                      { 'index': 72, 'type': 'bool', }, 
				'creatorId':                                      { 'index': 73, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'clientProductId':                                { 'index': 74, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '64'},
				                                                    ],
				                                                  },
				'subExecutionPointOverride':                      { 'index': 75, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'businessUnit':                                   { 'index': 76, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'opaqueOrderData':                                { 'index': 77, 'type': 'binary', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'dictionaryType' , 'value' : 'blob'},
				                                                    ],
				                                                  },
				'isTradingChildOrder':                            { 'index': 78, 'type': 'bool', }, 
				'executionAttributionStrategy':                   { 'index': 79, 'type': 'ubyte', 'enum': 'OmExecutionAttributionStrategy', }, 
				'accessId':                                       { 'index': 80, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'destinationRouteId':                             { 'index': 81, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'relatedEntities':                                { 'index': 82, 'type': 'table', 'tablename': 'RelatedEntity', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'isEnhancedLimitOrder':                           { 'index': 83, 'type': 'bool', }, 
				'isSpecialLimitOrder':                            { 'index': 84, 'type': 'bool', }, 
				'tradingPhase':                                   { 'index': 85, 'type': 'ubyte', 'enum': 'OmTradingPhase', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'liquidityIndicator':                             { 'index': 86, 'type': 'ubyte', 'enum': 'OmLiquidityIndicatorType', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'routingStrategy':                                { 'index': 87, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'clearingMemberId':                               { 'index': 88, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'doNotIncrease':                                  { 'index': 89, 'type': 'bool', }, 
				'doNotReduce':                                    { 'index': 90, 'type': 'bool', }, 
				'interMarketSweep':                               { 'index': 91, 'type': 'bool', }, 
				'destinationMarketOnly':                          { 'index': 92, 'type': 'bool', }, 
				'autoForward':                                    { 'index': 93, 'type': 'bool', }, 
				'buyToCover':                                     { 'index': 94, 'type': 'bool', }, 
				'locateInformationList':                          { 'index': 95, 'type': 'table', 'tablename': 'LocateInformation', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'complianceOrderId':                              { 'index': 96, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '200'},
				                                                    ],
				                                                  },
				'accessIdType':                                   { 'index': 97, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'partOfProgram':                                  { 'index': 98, 'type': 'bool', }, 
				'arbitrageStrategy':                              { 'index': 99, 'type': 'ubyte', 'enum': 'OmArbitrageStrategy', }, 
				'algorithmicIndicator':                           { 'index': 100, 'type': 'ubyte', 'enum': 'OmAlgorithmicIndicator', }, 
				'trancheSizeDisplayRange':                        { 'index': 101, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'shouldIndicateOrder':                            { 'index': 102, 'type': 'bool', }, 
				'indicationQuantity':                             { 'index': 103, 'type': 'int', }, 
				'ignoreImbalanceCheck':                           { 'index': 104, 'type': 'bool', }, 
				'tradeViaInternalAlgorithm':                      { 'index': 105, 'type': 'bool', }, 
				'minimumDisplaySize':                             { 'index': 106, 'type': 'double', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'maximumDisplaySize':                             { 'index': 107, 'type': 'double', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'sigmaAlgorithm':                                 { 'index': 108, 'type': 'ubyte', 'enum': 'OmSigmaAlgorithm', }, 
				'sigmaAlgorithmParameters':                       { 'index': 109, 'type': 'table', 'tablename': 'SigmaAlgorithmParameter', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'clientProductIdSuffix':                          { 'index': 110, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '8'},
				                                                    ],
				                                                  },
				'formatError':                                    { 'index': 111, 'type': 'table', 'tablename': 'FormatError', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'dropCopyOms':                                    { 'index': 112, 'type': 'string', }, 
				'requiresTraderApproval':                         { 'index': 113, 'type': 'bool', }, 
				'isIrrevocableOrder':                             { 'index': 114, 'type': 'bool', }, 
				'consolidatedRegulatoryCode':                     { 'index': 115, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'clientAdotId':                                   { 'index': 116, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'destinationId':                                  { 'index': 117, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'sourceSystemDoesBooking':                        { 'index': 118, 'type': 'bool', }, 
				'sourceRegulatoryDeskId':                         { 'index': 119, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'sourceBusinessUnit':                             { 'index': 120, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'sourceEntityIndicator':                          { 'index': 121, 'type': 'ubyte', 'enum': 'OmSourceEntityIndicator', }, 
				'clientListId':                                   { 'index': 122, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '128'},
				                                                    ],
				                                                  },
				'isClientWithoutInvestorID':                      { 'index': 123, 'type': 'bool', }, 
				'destinationTraderId':                            { 'index': 124, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'locateRequesterIdPreferenceList':                { 'index': 125, 'type': 'table', 'tablename': 'LocateRequesterIdPreferenceListMember', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'doNotWaitForLocateResponse':                     { 'index': 126, 'type': 'bool', }, 
				'isLocateRequested':                              { 'index': 127, 'type': 'bool', }, 
				'parameterizedLimitPrice':                        { 'index': 128, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'resolveAllPrices':                               { 'index': 129, 'type': 'bool', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'isGsamAdvisory':                                 { 'index': 130, 'type': 'bool', }, 
				'isSolicitedOrder':                               { 'index': 131, 'type': 'bool', }, 
				'isPartialOutEligible':                           { 'index': 132, 'type': 'bool', }, 
				'interventionConsent':                            { 'index': 133, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
				'aggUnitName':                                    { 'index': 134, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'brokerBillingType':                              { 'index': 135, 'type': 'ubyte', 'enum': 'OmBrokerBillingType', }, 
				'restrictedTradingListOverride':                  { 'index': 136, 'type': 'table', 'tablename': 'RestrictedTradingListOverride', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'profitSplitOption':                              { 'index': 137, 'type': 'ubyte', 'enum': 'OmProfitSplitOption', }, 
				'facilitatedOrders':                              { 'index': 138, 'type': 'table', 'tablename': 'OrderId', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'facilitatingOrders':                             { 'index': 139, 'type': 'table', 'tablename': 'OrderId', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'primaryPartyType':                               { 'index': 140, 'type': 'ubyte', 'enum': 'OmPrimaryPartyType', }, 
				'customerPartyType':                              { 'index': 141, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'visibilityGroups':                               { 'index': 142, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'isMarketMakingOrder':                            { 'index': 143, 'type': 'bool', }, 
				'basketExternalReferences':                       { 'index': 144, 'type': 'table', 'tablename': 'ExternalReference', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'regNmsExemptionType':                            { 'index': 145, 'type': 'ubyte', 'enum': 'OmRegNmsExemptionType', }, 
				'currentOwner':                                   { 'index': 146, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'sourceSystemOwner':                              { 'index': 147, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'clientConsentsName':                             { 'index': 148, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'regulatoryReportDomain':                         { 'index': 149, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'sourceRegulatoryReportDomain':                   { 'index': 150, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'owner':                                          { 'index': 151, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'sourceOwner':                                    { 'index': 152, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'tradingUnitId':                                  { 'index': 153, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '8'},
				                                                    ],
				                                                  },
				'isImbalanceOffsetOnly':                          { 'index': 154, 'type': 'bool', }, 
				'isGiveUpOrder':                                  { 'index': 155, 'type': 'bool', }, 
				'automationStrategy':                             { 'index': 156, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'primaryBasketExternalReference':                 { 'index': 157, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'secondaryBasketExternalReferences':              { 'index': 158, 'type': 'table', 'tablename': 'BasketExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'shouldAdvertiseExecutions':                      { 'index': 159, 'type': 'bool', }, 
				'crossMatchingId':                                { 'index': 160, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'isManningTrigger':                               { 'index': 161, 'type': 'bool', }, 
				'manningTriggerExecutionId':                      { 'index': 162, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '37'},
				                                                    ],
				                                                  },
				'marketSession':                                  { 'index': 163, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'isAlreadyManningProtected':                      { 'index': 164, 'type': 'bool', }, 
				'clientOrderCapacity':                            { 'index': 165, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'destinationMembershipId':                        { 'index': 166, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'expireAfterMilliseconds':                        { 'index': 167, 'type': 'int', }, 
				'expireOnExecution':                              { 'index': 168, 'type': 'bool', }, 
				'tsorAlgorithm':                                  { 'index': 169, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'tsorAlgorithmParameters':                        { 'index': 170, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '128'},
				                                                    ],
				                                                  },
				'tradingAlgorithmEngine':                         { 'index': 171, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'isMinimumGuaranteedFillEligible':                { 'index': 172, 'type': 'bool', }, 
				'tsxRegulationCode':                              { 'index': 173, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '2'},
				                                                    ],
				                                                  },
				'clientMembershipId':                             { 'index': 174, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'tradingStyle':                                   { 'index': 175, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'provideLiquidityOnly':                           { 'index': 176, 'type': 'bool', }, 
				'stoppedStockAgreementPrice':                     { 'index': 177, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'hideMembershipIdAtDestination':                  { 'index': 178, 'type': 'bool', }, 
				'flowSpecificCanada':                             { 'index': 179, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'secShortSellExemptionReason':                    { 'index': 180, 'type': 'ubyte', 'enum': 'OmSecShortSellExemptionReason', }, 
				'fixSenderSubId':                                 { 'index': 181, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'whiteLabelDataId':                               { 'index': 182, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'clientOrderQuantity':                            { 'index': 183, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'marginType':                                     { 'index': 184, 'type': 'ubyte', 'enum': 'OmMarginType', }, 
				'destinationSubId':                               { 'index': 185, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'indicationPolicyParameters':                     { 'index': 186, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'orderCreationType':                              { 'index': 187, 'type': 'ubyte', 'enum': 'OmOrderCreationType', }, 
				'sourceSystemRegulatoryOrderId':                  { 'index': 188, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'enhancedLiquidityPools':                         { 'index': 189, 'type': 'table', 'tablename': 'EnhancedLiquidityPoolName', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'omaRoutingSpecific':                             { 'index': 190, 'type': 'binary', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'blob'},
				                                                    ],
				                                                  },
				'fixClientType':                                  { 'index': 191, 'type': 'ubyte', 'enum': 'OmFixClientType', }, 
				'notEligibleForTrading':                          { 'index': 192, 'type': 'bool', }, 
				'testCaseOverrideId':                             { 'index': 193, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'advertisingPolicyParameters':                    { 'index': 194, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'targetQuoteId':                                  { 'index': 195, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'disableProductLookup':                           { 'index': 196, 'type': 'bool', }, 
				'isAdvisorEligible':                              { 'index': 197, 'type': 'bool', }, 
				'rediReportingInformation':                       { 'index': 198, 'type': 'table', 'tablename': 'RediReportingInformation', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'crossDriverExternalReference':                   { 'index': 199, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'crossIntentOrderId':                             { 'index': 200, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'destinationMembershipPassword':                  { 'index': 201, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'originatorIpAddress':                            { 'index': 202, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'fixClientInformation':                           { 'index': 203, 'type': 'table', 'tablename': 'FixClientInformation', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'syntheticType':                                  { 'index': 204, 'type': 'ubyte', 'enum': 'OmSyntheticType', }, 
				'brokerDealerOatsAttributes':                     { 'index': 205, 'type': 'table', 'tablename': 'BrokerDealerOatsAttributes', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isCrossIntentOrder':                             { 'index': 206, 'type': 'bool', }, 
				'isRisklessPrincipalCrossDriverOrder':            { 'index': 207, 'type': 'bool', }, 
				'isPrincipalCrossDriverOrder':                    { 'index': 208, 'type': 'bool', }, 
				'sendWithheld':                                   { 'index': 209, 'type': 'bool', }, 
				'rejectOnLocateFailure':                          { 'index': 210, 'type': 'bool', }, 
				'informationBarrierId':                           { 'index': 211, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '12'},
				                                                    ],
				                                                  },
				'regNmsSweepWaived':                              { 'index': 212, 'type': 'bool', }, 
				'crossRequestReason':                             { 'index': 213, 'type': 'ubyte', 'enum': 'OmCrossRequestReason', }, 
				'internalProductId':                              { 'index': 214, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'internalProductIdType':                          { 'index': 215, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'isPwmAdvisory':                                  { 'index': 216, 'type': 'bool', }, 
				'investorId':                                     { 'index': 217, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'isLateAuctionOrder':                             { 'index': 218, 'type': 'bool', }, 
				'approvalInformationList':                        { 'index': 219, 'type': 'table', 'tablename': 'ApprovalInformation', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'regRepCode':                                     { 'index': 220, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'isWorkupOrder':                                  { 'index': 221, 'type': 'bool', }, 
				'isCDSPassiveOrder':                              { 'index': 222, 'type': 'bool', }, 
				'workupSessionId':                                { 'index': 223, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '12'},
				                                                    ],
				                                                  },
				'exchangeAccount':                                { 'index': 224, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'minimumIOCPriceImprovement':                     { 'index': 225, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minimumAggressorRestTime':                       { 'index': 226, 'type': 'int', }, 
				'marketParticipantId':                            { 'index': 227, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '4'},
				                                                    ],
				                                                  },
				'customerOeIdType':                               { 'index': 228, 'type': 'ubyte', 'enum': 'OmOrganizationalEntityIdType', }, 
				'isPartialAcceptAmendEligible':                   { 'index': 229, 'type': 'bool', }, 
				'isGsiOrderMarkingTowerStyle':                    { 'index': 230, 'type': 'bool', }, 
				'executeAgencyOnly':                              { 'index': 231, 'type': 'bool', }, 
				'manualOrderIndicator':                           { 'index': 232, 'type': 'bool', }, 
				'salesAttributionUser':                           { 'index': 233, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'isSolicitedFromEM':                              { 'index': 234, 'type': 'bool', }, 
				'directedRegRepCode':                             { 'index': 235, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'isCloakedOrder':                                 { 'index': 236, 'type': 'bool', }, 
				'isClientBookable':                               { 'index': 237, 'type': 'bool', }, 
				'regNmsSweepWaivedClientUserId':                  { 'index': 238, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'visibilityUserList':                             { 'index': 239, 'type': 'table', 'tablename': 'VisibilityUserId', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'liquidityQuoteResponseId':                       { 'index': 240, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'tradingAlgorithmPrivateParameters':              { 'index': 241, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '1024'},
				                                                    ],
				                                                  },
				'destinationVisibilityGroups':                    { 'index': 242, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'bookingFlowStyle':                               { 'index': 243, 'type': 'ubyte', 'enum': 'OmBookingFlowStyle', }, 
				'syntheticDetails':                               { 'index': 244, 'type': 'table', 'tablename': 'SyntheticDetails', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'exchangeRates':                                  { 'index': 245, 'type': 'table', 'tablename': 'ExchangeRate', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'fixOrderAttributes':                             { 'index': 246, 'type': 'table', 'tablename': 'FixOrderAttributes', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'tradingCountryOverride':                         { 'index': 247, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '2'},
				                                                    ],
				                                                  },
				'doNotRoute':                                     { 'index': 248, 'type': 'bool', }, 
				'providingBins':                                  { 'index': 249, 'type': 'table', 'tablename': 'ProvidingBin', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'matchingBins':                                   { 'index': 250, 'type': 'table', 'tablename': 'MatchingBin', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'isAggregatedFirmOrder':                          { 'index': 251, 'type': 'bool', }, 
				'isOptionStrategyEquityLeg':                      { 'index': 252, 'type': 'bool', }, 
				'clearingFirm':                                   { 'index': 253, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'capitalCommitCategory':                          { 'index': 254, 'type': 'ubyte', 'enum': 'OmCapitalCommitCategory', }, 
				'serviceOffering':                                { 'index': 255, 'type': 'ubyte', 'enum': 'OmServiceOffering', }, 
				'marketMakerExchangeRepresented':                 { 'index': 256, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '4'},
				                                                    ],
				                                                  },
				'marketMakerId':                                  { 'index': 257, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'marketMakerOCCClearingAccount':                  { 'index': 258, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'isMarketMakerClientOptionSpecialistInClass':     { 'index': 259, 'type': 'bool', }, 
				'clientLegalEntityId':                            { 'index': 260, 'type': 'int', }, 
				'isClientStockSpecialistInUnderlier':             { 'index': 261, 'type': 'bool', }, 
				'isPHLXOffFloorOrder':                            { 'index': 262, 'type': 'bool', }, 
				'opaqueOrderDataItemsToRemove':                   { 'index': 263, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'opaqueOrderDataItemsToSet':                      { 'index': 264, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'clientAlgorithmCategory':                        { 'index': 265, 'type': 'ubyte', 'enum': 'OmClientAlgorithmCategory', }, 
				'crossIntentOrderIds':                            { 'index': 266, 'type': 'table', 'tablename': 'OrderId', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'clientCustomerPartyType':                        { 'index': 267, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'relatedOptionOrderExternalReferences':           { 'index': 268, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'exchangeSubAccount':                             { 'index': 269, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'settlementBoardOverride':                        { 'index': 270, 'type': 'ubyte', 'enum': 'OmSettlementBoardOverride', }, 
				'isCorporateBuyBackOrder':                        { 'index': 271, 'type': 'bool', }, 
				'isSDRUSPerson':                                  { 'index': 272, 'type': 'bool', }, 
				'swapGuaranteedPriceType':                        { 'index': 273, 'type': 'ubyte', 'enum': 'OmSwapGuaranteedPriceType', }, 
				'isKoreaPostMarginAccountOrder':                  { 'index': 274, 'type': 'bool', }, 
				'isDiscretionExercised':                          { 'index': 275, 'type': 'bool', }, 
				'ignoreExchangePriceRangeCheck':                  { 'index': 276, 'type': 'bool', }, 
				'sourceFlowIdentifier':                           { 'index': 277, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'flowIdentifier':                                 { 'index': 278, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'destinationFlowIdentifier':                      { 'index': 279, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isDestinationIndicationOfInterestMatchingOrder': { 'index': 280, 'type': 'bool', }, 
				'disableTransientCoverageVisibility':             { 'index': 281, 'type': 'bool', }, 
				'australiaTradeConditionCode':                    { 'index': 282, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '8'},
				                                                    ],
				                                                  },
				'externalTradingAlgorithmDetails':                { 'index': 283, 'type': 'table', 'tablename': 'ExternalTradingAlgorithmDetails', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'clientAccessId':                                 { 'index': 284, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'facilitatedParentOrderGsuid':                    { 'index': 285, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'allocationOrderId':                              { 'index': 286, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'dealValueRatio':                                 { 'index': 287, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'hedgeValueRatio':                                { 'index': 288, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'iosAccountExchangeCrossReference':               { 'index': 289, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'disableRealTimeExecutionNotification':           { 'index': 290, 'type': 'bool', }, 
				'appliedControlLayers':                           { 'index': 291, 'type': 'table', 'tablename': 'AppliedControlLayer', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'clientGsRelationship':                           { 'index': 292, 'type': 'ubyte', 'enum': 'OmGsEntity', }, 
				'basisOfQuotation':                               { 'index': 293, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '6'},
				                                                    ],
				                                                  },
				'tradeAgreementDate':                             { 'index': 294, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'counterPartyId':                                 { 'index': 295, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'isAustraliaUndisclosedOrder':                    { 'index': 296, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'destinationAllowedBrokers':                      { 'index': 297, 'type': 'table', 'tablename': 'BrokerInfo', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'isPartOfTwoSidedTradeReport':                    { 'index': 298, 'type': 'bool', }, 
				'isBlockDistributionOrder':                       { 'index': 299, 'type': 'bool', }, 
				'originatorMacAddress':                           { 'index': 300, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'referenceCharges':                               { 'index': 301, 'type': 'table', 'tablename': 'Charge', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'executeSynthetically':                           { 'index': 302, 'type': 'bool', }, 
				'allowedBookingStyleCash':                        { 'index': 303, 'type': 'bool', }, 
				'allowedBookingStyleGiveUp':                      { 'index': 304, 'type': 'bool', }, 
				'allowedBookingStyleCFD':                         { 'index': 305, 'type': 'bool', }, 
				'tradingAlgorithmSequence':                       { 'index': 306, 'type': 'table', 'tablename': 'TradingAlgorithmSequence', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'priceStabilization':                             { 'index': 307, 'type': 'bool', }, 
				'isHighTouchOrderFromLowTouch':                   { 'index': 308, 'type': 'bool', }, 
				'isClientRequestedSendWithheldOrder':             { 'index': 309, 'type': 'bool', }, 
				'flowSpecificAustralia':                          { 'index': 310, 'type': 'table', 'tablename': 'FlowSpecificAustralia', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'selfMatchPreventionId':                          { 'index': 311, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '12'},
				                                                    ],
				                                                  },
				'apolloTurnaroundInfoList':                       { 'index': 312, 'type': 'table', 'tablename': 'ApolloTurnaroundInfo', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'flowSpecificSEF':                                { 'index': 313, 'type': 'table', 'tablename': 'FlowSpecificSEF', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'clientPrincipalType':                            { 'index': 314, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'asiaFflFlowGroup':                               { 'index': 315, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'hedgeStrategy':                                  { 'index': 316, 'type': 'ubyte', 'enum': 'OmHedgeStrategy', }, 
				'clientAggregationId':                            { 'index': 317, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '128'},
				                                                    ],
				                                                  },
				'crossMatchingExternalReference':                 { 'index': 318, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'destinationDoNotRoute':                          { 'index': 319, 'type': 'bool', }, 
				'isOddLot':                                       { 'index': 320, 'type': 'bool', }, 
				'allocationSubAccounts':                          { 'index': 321, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'safeHaborBehaviorRequested':                     { 'index': 322, 'type': 'bool', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'safeHarborBehaviorRequested':                    { 'index': 323, 'type': 'bool', }, 
				'originalOrderId':                                { 'index': 324, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'hedgeDestinationId':                             { 'index': 325, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'lastOmsBooksHedge':                              { 'index': 326, 'type': 'bool', }, 
				'currentSystemDoesNotBook':                       { 'index': 327, 'type': 'bool', }, 
				'destinationSystemDoesNotBook':                   { 'index': 328, 'type': 'bool', }, 
				'minExecutableNotionalValue':                     { 'index': 329, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minSingleExecutionQuantity':                     { 'index': 330, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minSingleExecutionNotionalValue':                { 'index': 331, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'isMinExecutableQuantityResidualNotExecutable':   { 'index': 332, 'type': 'bool', }, 
				'isMinExecutableQuantityMinExecutionSize':        { 'index': 333, 'type': 'bool', }, 
				'principalCapacityPrimaryAccountOverride':        { 'index': 334, 'type': 'table', 'tablename': 'Account', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'bypassSyntheticValidations':                     { 'index': 335, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'facilitationStepUpPrice':                        { 'index': 336, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
			}, 
		}, 
		'CreateOrderCommandContext': {
			'id': 673, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'parameterizedLimitPrice':      { 'index': 0, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'crossIntentOrderId':           { 'index': 1, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                  'meta-fields': [
					                              {'field': 'deprecated' , 'value' : 'true'},
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'crossDriverExternalReference': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
			}, 
		}, 
		'CreateOrderHierarchyCommand': {
			'id': 362, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'commands':      { 'index': 1, 'type': 'table', 'tablename': 'Command', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'collection'},
				                   ],
				                 },
			}, 
		}, 
		'CreateSynchronizedChildOrdersCommand': {
			'id': 591, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                                  { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'createChildOrderCommandSynchronizationWrappers': { 'index': 1, 'type': 'table', 'tablename': 'CreateChildOrderCommandSynchronizationWrapper', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
			}, 
		}, 
		'CreateTestCaseOverrideCommand': {
			'id': 322, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':         { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'testCaseOverrideRules': { 'index': 1, 'type': 'table', 'tablename': 'TestCaseOverrideRule', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
			}, 
		}, 
		'CreditInformationRequest': {
			'id': 470, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'tradingUnitId': { 'index': 0, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '8'},
				                   ],
				                 },
				'accessId':      { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
			}, 
		}, 
		'CreditInformationResponse': {
			'id': 473, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'tradingUnitId':                    { 'index': 0, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '8'},
				                                      ],
				                                    },
				'accessId':                         { 'index': 1, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '29'},
				                                      ],
				                                    },
				'tradingUnitCreditInformationList': { 'index': 2, 'type': 'table', 'tablename': 'TradingUnitCreditInformation', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
			}, 
		}, 
		'CrossOrdersCommand': {
			'id': 395, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'createExecutionCommands': { 'index': 1, 'type': 'table', 'tablename': 'CreateExecutionCommand', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'creatorMarketDataStamps': { 'index': 2, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
			}, 
		}, 
		'CrossPartyOrderCapacity': {
			'id': 160, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'orderCapacity': { 'index': 0, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':    { 'index': 1, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType': { 'index': 2, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
			}, 
		}, 
		'DatastreamReconnectNotificationCandidate': {
			'id': 332, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'orderId':               { 'index': 0, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'destinationSystemName': { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '32'},
				                           ],
				                         },
			}, 
		}, 
		'DestinationParty': {
			'id': 108, 
			'version': 7, 
			'publishable': 'true', 
			'columns': {
				'destinationTraderIdType':       { 'index': 0, 'type': 'ubyte', 'enum': 'OmDestinationTraderIdType', }, 
				'destinationTraderId':           { 'index': 1, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '30'},
				                                   ],
				                                 },
				'destinationMarketId':           { 'index': 2, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '16'},
				                                   ],
				                                 },
				'destinationMembershipId':       { 'index': 3, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '30'},
				                                   ],
				                                 },
				'destinationRouteId':            { 'index': 4, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '20'},
				                                   ],
				                                 },
				'destinationId':                 { 'index': 5, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '20'},
				                                   ],
				                                 },
				'destinationSubId':              { 'index': 6, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '20'},
				                                   ],
				                                 },
				'destinationMembershipPassword': { 'index': 7, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '30'},
				                                   ],
				                                 },
				'destinationAllowedBrokers':     { 'index': 8, 'type': 'table', 'tablename': 'BrokerInfo', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'collection'},
				                                   ],
				                                 },
				'hedgeDestinationId':            { 'index': 9, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '20'},
				                                   ],
				                                 },
			}, 
		}, 
		'DoneForDayOrderCommand': {
			'id': 343, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'orderId':            { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'executedQuantity':   { 'index': 3, 'type': 'double', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'real'},
				                        ],
				                      },
				'quantityRemaining':  { 'index': 4, 'type': 'double', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'real'},
				                        ],
				                      },
			}, 
		}, 
		'EbcsDetails': {
			'id': 692, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'ebcsOverrideType':            { 'index': 0, 'type': 'ubyte', 'enum': 'OmEbscOverrideType', }, 
				'voiceDiscolsureOverrideType': { 'index': 1, 'type': 'ubyte', 'enum': 'OmEbscOverrideType', }, 
				'preTradeMidMarketMark':       { 'index': 2, 'type': 'double', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                 ],
				                               },
			}, 
		}, 
		'EngineState': {
			'id': 64, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'instanceName':                   { 'index': 0, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '64'},
				                                    ],
				                                  },
				'timeOfLastActivity':             { 'index': 1, 'type': 'int', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                    ],
				                                  },
				'processId':                      { 'index': 2, 'type': 'int', }, 
				'processCurrentWorkingDirectory': { 'index': 3, 'type': 'string', }, 
			}, 
		}, 
		'EnhancedLiquidityPoolName': {
			'id': 312, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'enhancedLiquidityPoolName': { 'index': 0, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '5'},
				                               ],
				                             },
			}, 
		}, 
		'EquityLegDetails': {
			'id': 497, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'resetFrequency':   { 'index': 0, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '5'},
				                      ],
				                    },
				'paymentFrequency': { 'index': 1, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '5'},
				                      ],
				                    },
			}, 
		}, 
		'EventData': {
			'id': 26, 
			'version': 18, 
			'publishable': 'true', 
			'columns': {
				'transactionCommitId':        { 'index': 0, 'type': 'string', 'aliases': ['eventGsuid'], 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'eventTime':                  { 'index': 1, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'rdbMergeIntoDateTime' , 'value' : 'eventTimeMicrosecond:eventTimestamp'},
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'eventType':                  { 'index': 2, 'type': 'ubyte', 'enum': 'OmEventType', # FIELD IS OBSOLETE
				                                'meta-fields': [
					                            {'field': 'obsolete' , 'value' : 'true'},
				                                ],
				                              },
				'creatorId':                  { 'index': 3, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'sourceAddresses':            { 'index': 4, 'type': 'table', 'tablename': 'NetworkAddress', # FIELD IS OBSOLETE
				                                'meta-fields': [
					                            {'field': 'obsolete' , 'value' : 'true'},
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
				'rejectReasons':              { 'index': 5, 'type': 'table', 'tablename': 'RejectReason', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'marketDataStamps':           { 'index': 6, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'events':                     { 'index': 7, 'type': 'table', 'tablename': 'EventsElement', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'smartRoutingEvent':          { 'index': 8, 'type': 'table', 'tablename': 'SmartRoutingEvent', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
				'externalEventType':          { 'index': 9, 'type': 'ubyte', 'enum': 'OmExternalEventType', }, 
				'creatorIdType':              { 'index': 10, 'type': 'ubyte', 'enum': 'OmCreatorIdType', }, 
				'isExchangeEvent':            { 'index': 11, 'type': 'bool', }, 
				'eventTimeMicrosecond':       { 'index': 12, 'type': 'int', }, 
				'commandTime':                { 'index': 13, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'eventTrailData':             { 'index': 14, 'type': 'table', 'tablename': 'EventTrailData', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
				'aggUnitPosition':            { 'index': 15, 'type': 'double', # FIELD IS OBSOLETE
				                                'meta-fields': [
					                            {'field': 'obsolete' , 'value' : 'true'},
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'aggUnitPositionStamp':       { 'index': 16, 'type': 'table', 'tablename': 'AggUnitPositionStamp', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
				'eventId':                    { 'index': 17, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'conditionalRoutingEvents':   { 'index': 18, 'type': 'table', 'tablename': 'ConditionalRoutingEvent', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'imbalanceDataStamps':        { 'index': 19, 'type': 'table', 'tablename': 'ImbalanceDataStamp', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'rdsIvShmDbCommitIdInt':      { 'index': 20, 'type': 'int', }, 
				'creatorMarketDataStamps':    { 'index': 21, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'matchingEngineStatusEvents': { 'index': 22, 'type': 'table', 'tablename': 'MatchingEngineStatusEvent', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'sourceSystemName':           { 'index': 23, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '32'},
				                                ],
				                              },
				'sourceSystemType':           { 'index': 24, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
			}, 
		}, 
		'EventIdWrapper': {
			'id': 131, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'eventId':         { 'index': 0, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '29'},
				                     ],
				                   },
				'eventNumber':     { 'index': 1, 'type': 'int', }, 
				'eventDate':       { 'index': 2, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '8'},
				                     ],
				                   },
				'eventSystemName': { 'index': 3, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '32'},
				                     ],
				                   },
			}, 
		}, 
		'EventNotification': {
			'id': 145, 
			'version': 4, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbPersistIvComId' , 'value' : 'true'},
			    {'field': 'rdbAlias' , 'value' : 'Event'},
			    {'field': 'rdbInheritParentKeys' , 'value' : 'false'},
			    {'field': 'rdbMessageKeyPart' , 'value' : 'eventData/eventId'},
			],
			'columns': {
				'eventData':                            { 'index': 0, 'type': 'table', 'tablename': 'EventData', 
				                                          'meta-fields': [
					                                      {'field': 'rdbAlias' , 'value' : ''},
					                                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                                          ],
				                                        },
				'orders':                               { 'index': 1, 'type': 'table', 'tablename': 'OrderNotification', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'executions':                           { 'index': 2, 'type': 'table', 'tablename': 'ExecutionNotification', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'baskets':                              { 'index': 3, 'type': 'table', 'tablename': 'BasketNotification', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'indications':                          { 'index': 4, 'type': 'table', 'tablename': 'IndicationNotification', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'indicationSessionTransmissionDetails': { 'index': 5, 'type': 'table', 'tablename': 'IndicationSessionTransmissionDetailNotification', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
				'liquidities':                          { 'index': 6, 'type': 'table', 'tablename': 'LiquidityNotification', 
				                                          'meta-fields': [
					                                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                                          ],
				                                        },
			}, 
		}, 
		'EventParametersElement': {
			'id': 104, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'orderId': { 'index': 0, 'type': 'string', 
				             'meta-fields': [
					         {'field': 'maxStringLength' , 'value' : '29'},
				             ],
				           },
				'execId':  { 'index': 1, 'type': 'string', 'aliases': ['executionId'], 
				             'meta-fields': [
					         {'field': 'maxStringLength' , 'value' : '29'},
				             ],
				           },
			}, 
		}, 
		'EventTrailData': {
			'id': 348, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'eventTrailId':           { 'index': 0, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '320'},
				                            ],
				                          },
				'eventTrailHopCount':     { 'index': 1, 'type': 'uint', }, 
				'isEventTrailTerminator': { 'index': 2, 'type': 'bool', }, 
			}, 
		}, 
		'EventsElement': {
			'id': 95, 
			'version': 15, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAdditionalKeyPart' , 'value' : 'eventData/events/internalEventSequenceNumber'},
			],
			'columns': {
				'eventType':                             { 'index': 0, 'type': 'ubyte', 'enum': 'OmEventType', # FIELD IS OBSOLETE
				                                           'meta-fields': [
					                                       {'field': 'obsolete' , 'value' : 'true'},
				                                           ],
				                                         },
				'orderId':                               { 'index': 1, 'type': 'string', 
				                                           'meta-fields': [
					                                       {'field': 'maxStringLength' , 'value' : '29'},
				                                           ],
				                                         },
				'executionId':                           { 'index': 2, 'type': 'string', 'aliases': ['execId'], 
				                                           'meta-fields': [
					                                       {'field': 'maxStringLength' , 'value' : '29'},
				                                           ],
				                                         },
				'internalEventType':                     { 'index': 3, 'type': 'ubyte', 'enum': 'OmInternalEventType', }, 
				'rejectReasonText':                      { 'index': 4, 'type': 'string', # FIELD IS OBSOLETE
				                                           'meta-fields': [
					                                       {'field': 'obsolete' , 'value' : 'true'},
					                                       {'field': 'maxStringLength' , 'value' : '256'},
				                                           ],
				                                         },
				'isExchangeEvent':                       { 'index': 5, 'type': 'bool', }, 
				'rejectReasons':                         { 'index': 6, 'type': 'table', 'tablename': 'RejectReason', 
				                                           'meta-fields': [
					                                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                                           ],
				                                         },
				'orderInternalEventContext':             { 'index': 7, 'type': 'table', 'tablename': 'OrderInternalEventContext', 
				                                           'meta-fields': [
					                                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                                           ],
				                                         },
				'internalEventSequenceNumber':           { 'index': 8, 'type': 'int', }, 
				't2EvaluationTraces':                    { 'index': 9, 'type': 'table', 'tablename': 'InternalEventT2EvaluationTrace', 
				                                           'meta-fields': [
					                                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                                           ],
				                                         },
				'executionInternalEventContext':         { 'index': 10, 'type': 'table', 'tablename': 'ExecutionInternalEventContext', 
				                                           'meta-fields': [
					                                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                                           ],
				                                         },
				'correctionAutoAccepted':                { 'index': 11, 'type': 'bool', }, 
				'internalEventTime':                     { 'index': 12, 'type': 'int', 
				                                           'meta-fields': [
					                                       {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                           ],
				                                         },
				'internalEventTimeMicrosecond':          { 'index': 13, 'type': 'uint', }, 
				'appliedControlLayers':                  { 'index': 14, 'type': 'table', 'tablename': 'AppliedControlLayer', 
				                                           'meta-fields': [
					                                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                                           ],
				                                         },
				'indicationId':                          { 'index': 15, 'type': 'string', 
				                                           'meta-fields': [
					                                       {'field': 'maxStringLength' , 'value' : '29'},
				                                           ],
				                                         },
				'indicationSessionTransmissionDetailId': { 'index': 16, 'type': 'string', 
				                                           'meta-fields': [
					                                       {'field': 'maxStringLength' , 'value' : '29'},
				                                           ],
				                                         },
				'liquidityId':                           { 'index': 17, 'type': 'string', 
				                                           'meta-fields': [
					                                       {'field': 'maxStringLength' , 'value' : '29'},
				                                           ],
				                                         },
			}, 
		}, 
		'ExchangeRate': {
			'id': 40, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'exchangeRateFromCurrency': { 'index': 0, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '3'},
				                              ],
				                            },
				'exchangeRateToCurrency':   { 'index': 1, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '3'},
				                              ],
				                            },
				'fxRate':                   { 'index': 2, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'relatedEntities':          { 'index': 3, 'type': 'table', 'tablename': 'RelatedEntity', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
			}, 
		}, 
		'ExecFlowSpecificAustralia': {
			'id': 737, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'australiaTradeConditionCode': { 'index': 0, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '8'},
				                                 ],
				                               },
			}, 
		}, 
		'ExecFlowSpecificCanada': {
			'id': 532, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'canadaActionSource':          { 'index': 0, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '3'},
				                                 ],
				                               },
				'canadaExchangeUserId':        { 'index': 1, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '8'},
				                                 ],
				                               },
				'canadaPrincipalTrade':        { 'index': 2, 'type': 'bool', }, 
				'canadaWashTrade':             { 'index': 3, 'type': 'bool', }, 
				'canadaTradeCorrection':       { 'index': 4, 'type': 'bool', }, 
				'canadaExchangeAdmin':         { 'index': 5, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '35'},
				                                 ],
				                               },
				'canadaBypass':                { 'index': 6, 'type': 'bool', }, 
				'canadaNormalCourseIssuerBid': { 'index': 7, 'type': 'bool', }, 
				'canadaOriginalTradeId':       { 'index': 8, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '30'},
				                                 ],
				                               },
				'canadaSOROrderID1':           { 'index': 9, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '40'},
				                                 ],
				                               },
				'canadaSOROrderID2':           { 'index': 10, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '40'},
				                                 ],
				                               },
				'canadaCancelOnDisconnect':    { 'index': 11, 'type': 'bool', }, 
				'canadaAccountType':           { 'index': 12, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '2'},
				                                 ],
				                               },
				'canadaBasketTrade':           { 'index': 13, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '5'},
				                                 ],
				                               },
				'canadaCustomerType':          { 'index': 14, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '3'},
				                                 ],
				                               },
				'canadaInfoText':              { 'index': 15, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '128'},
				                                 ],
				                               },
				'canadaNonResident':           { 'index': 16, 'type': 'bool', }, 
				'canadaNoTradeFeature':        { 'index': 17, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '2'},
				                                 ],
				                               },
				'canadaNoTradeKey':            { 'index': 18, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '6'},
				                                 ],
				                               },
				'canadaPegType':               { 'index': 19, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '1'},
				                                 ],
				                               },
				'canadaRegulationCode':        { 'index': 20, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '2'},
				                                 ],
				                               },
				'canadaUndisplayed':           { 'index': 21, 'type': 'bool', }, 
				'canadaCrossType':             { 'index': 22, 'type': 'ubyte', 'enum': 'OmCanadaCrossType', }, 
			}, 
		}, 
		'ExecutionAttributionOrderSummary': {
			'id': 543, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'quantity': { 'index': 0, 'type': 'double', 
				              'meta-fields': [
					          {'field': 'dictionaryType' , 'value' : 'real'},
				              ],
				            },
				'orderId':  { 'index': 1, 'type': 'string', 
				              'meta-fields': [
					          {'field': 'maxStringLength' , 'value' : '29'},
				              ],
				            },
			}, 
		}, 
		'ExecutionCorrection': {
			'id': 527, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'executionId':             { 'index': 0, 'type': 'string', 'aliases': ['execId'], 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'diffToPreviousExecution': { 'index': 1, 'type': 'table', 'tablename': 'ExecutionData', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'ExecutionData': {
			'id': 38, 
			'version': 58, 
			'publishable': 'true', 
			'columns': {
				'executionId':                             { 'index': 0, 'type': 'string', 'aliases': ['execId'], 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '29'},
				                                             ],
				                                           },
				'orderId':                                 { 'index': 1, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '29'},
				                                             ],
				                                           },
				'executionStatus':                         { 'index': 2, 'type': 'ubyte', 'enum': 'OmExecutionStatus', }, 
				'internalProductId':                       { 'index': 3, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '29'},
				                                             ],
				                                           },
				'internalProductIdType':                   { 'index': 4, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'buySell':                                 { 'index': 5, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'sellShort':                               { 'index': 6, 'type': 'bool', }, 
				'sellShortExempt':                         { 'index': 7, 'type': 'bool', }, 
				'quantity':                                { 'index': 8, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'executionPrice':                          { 'index': 9, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'executionNetPrice':                       { 'index': 10, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'settlementPrice':                         { 'index': 11, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'settlementNetPrice':                      { 'index': 12, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'executionTime':                           { 'index': 13, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'rdbMergeIntoDateTime' , 'value' : 'executionTimeMicrosecond:executionTimestamp'},
					                                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                             ],
				                                           },
				'executionTimeGmtOffset':                  { 'index': 14, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'accounts':                                { 'index': 15, 'type': 'table', 'tablename': 'Account', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'settlementDateCalcMethod':                { 'index': 16, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'marketTradeDate':                         { 'index': 17, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'date'},
				                                             ],
				                                           },
				'settlementDate':                          { 'index': 18, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                             ],
				                                           },
				'executionCapacity':                       { 'index': 19, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionPoint':                          { 'index': 20, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'subExecutionPoint':                       { 'index': 21, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'charges':                                 { 'index': 22, 'type': 'table', 'tablename': 'Charge', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'executionCurrency':                       { 'index': 23, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '3'},
				                                             ],
				                                           },
				'settlementCurrency':                      { 'index': 24, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '3'},
				                                             ],
				                                           },
				'exchangeRates':                           { 'index': 25, 'type': 'table', 'tablename': 'ExchangeRate', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'useExternalReferenceTable':               { 'index': 26, 'type': 'bool', }, 
				'execExternalReferences':                  { 'index': 27, 'type': 'table', 'tablename': 'ExternalReference', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'useRelationshipTable':                    { 'index': 28, 'type': 'bool', }, 
				'relatedEntities':                         { 'index': 29, 'type': 'table', 'tablename': 'RelatedEntity', # FIELD HAS BEEN DEPRECATED
				                                             'meta-fields': [
					                                         {'field': 'deprecated' , 'value' : 'true'},
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'executionTransactionType':                { 'index': 30, 'type': 'ubyte', 'enum': 'OmExecutionTransactionType', }, 
				'creatorId':                               { 'index': 31, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                             'meta-fields': [
					                                         {'field': 'deprecated' , 'value' : 'true'},
					                                         {'field': 'maxStringLength' , 'value' : '29'},
				                                             ],
				                                           },
				'settlementCalendar':                      { 'index': 32, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'executionVenue':                          { 'index': 33, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'counterPartyId':                          { 'index': 34, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '29'},
				                                             ],
				                                           },
				'executionTimeLocal':                      { 'index': 35, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'rdbMergeIntoDateTime' , 'value' : 'executionTimeMicrosecond:executionTimestampLocal'},
					                                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                             ],
				                                           },
				'executionType':                           { 'index': 36, 'type': 'ubyte', 'enum': 'OmExecutionType', }, 
				'tradeReportingType':                      { 'index': 37, 'type': 'ubyte', 'enum': 'OmTradeReportingType', }, 
				'isExecFromAuction':                       { 'index': 38, 'type': 'bool', }, 
				'isExecFromDarkOrder':                     { 'index': 39, 'type': 'bool', }, 
				'liquidityIndicator':                      { 'index': 40, 'type': 'ubyte', 'enum': 'OmLiquidityIndicatorType', }, 
				'generatedExternalKey':                    { 'index': 41, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '64'},
				                                             ],
				                                           },
				'marketDataStamps':                        { 'index': 42, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'clearingMemberId':                        { 'index': 43, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'executionCancelType':                     { 'index': 44, 'type': 'ubyte', 'enum': 'OmExecutionCancelType', }, 
				'executionSuspendReason':                  { 'index': 45, 'type': 'ubyte', 'enum': 'OmExecutionSuspendReason', }, 
				'executionSuspendReasonText':              { 'index': 46, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '256'},
				                                             ],
				                                           },
				'executionUnsuspendReasonText':            { 'index': 47, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '256'},
				                                             ],
				                                           },
				'executedQuantity':                        { 'index': 48, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'executionIsSuspendAlertable':             { 'index': 49, 'type': 'bool', }, 
				'executionCancelReason':                   { 'index': 50, 'type': 'ubyte', 'enum': 'OmExecutionCancelCorrectReason', }, 
				'executionCorrectReason':                  { 'index': 51, 'type': 'ubyte', 'enum': 'OmExecutionCancelCorrectReason', }, 
				'executionLastMarket':                     { 'index': 52, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'nyseBillingIndicator':                    { 'index': 53, 'type': 'ubyte', 'enum': 'OmNyseBillingIndicator', }, 
				'executionReason':                         { 'index': 54, 'type': 'ubyte', 'enum': 'OmExecutionReason', }, 
				'isSuspendAcknowledged':                   { 'index': 55, 'type': 'bool', }, 
				'risklessPrincipalQuantity':               { 'index': 56, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'tradeReportResponse':                     { 'index': 57, 'type': 'table', 'tablename': 'TradeReportResponse', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'originalPartyTypes':                      { 'index': 58, 'type': 'ubyte', 'enum': 'OmOriginalPartyTypes', }, 
				'isInterEntityTrade':                      { 'index': 59, 'type': 'bool', # FIELD IS OBSOLETE
				                                             'meta-fields': [
					                                         {'field': 'obsolete' , 'value' : 'true'},
				                                             ],
				                                           },
				'isOtherSideShortSell':                    { 'index': 60, 'type': 'bool', }, 
				'isOtherSideShortSellExempt':              { 'index': 61, 'type': 'bool', }, 
				'tradeReportingExecutionType':             { 'index': 62, 'type': 'ubyte', 'enum': 'OmTradeReportingExecutionType', }, 
				'intraEntityIndicator':                    { 'index': 63, 'type': 'ubyte', 'enum': 'OmIntraEntityIndicator', }, 
				'executionTimeMicrosecond':                { 'index': 64, 'type': 'int', }, 
				'parameterizedPrice':                      { 'index': 65, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'exchangeOrderId':                         { 'index': 66, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '64'},
				                                             ],
				                                           },
				'destinationMembershipId':                 { 'index': 67, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '30'},
				                                             ],
				                                           },
				'counterPartyBreakdown':                   { 'index': 68, 'type': 'table', 'tablename': 'CounterPartyBreakdown', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'clearingInstruction':                     { 'index': 69, 'type': 'ubyte', 'enum': 'OmClearingInstructionType', }, 
				'executionSession':                        { 'index': 70, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'tradeReportModifiers':                    { 'index': 71, 'type': 'ubyte', 'enum': 'OmTradeReportModifiers', }, 
				'consolidatedRegulatoryCode':              { 'index': 72, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'exchangeBillingCode':                     { 'index': 73, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '7'},
				                                             ],
				                                           },
				'isSuspended':                             { 'index': 74, 'type': 'bool', }, 
				'exchangeAccessFee':                       { 'index': 75, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'isSourceExecution':                       { 'index': 76, 'type': 'bool', }, 
				'executionGroupReportId':                  { 'index': 77, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                             'meta-fields': [
					                                         {'field': 'deprecated' , 'value' : 'true'},
				                                             ],
				                                           },
				'crossPartyOrderCapacity':                 { 'index': 78, 'type': 'table', 'tablename': 'CrossPartyOrderCapacity', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'regNmsExemptionType':                     { 'index': 79, 'type': 'ubyte', 'enum': 'OmRegNmsExemptionType', }, 
				'owner':                                   { 'index': 80, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '32'},
				                                             ],
				                                           },
				'isLocateRequested':                       { 'index': 81, 'type': 'bool', }, 
				'manningTriggerExecutionId':               { 'index': 82, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '37'},
				                                             ],
				                                           },
				'secShortSellExemptionReason':             { 'index': 83, 'type': 'ubyte', 'enum': 'OmSecShortSellExemptionReason', }, 
				'whiteLabelDataId':                        { 'index': 84, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '20'},
				                                             ],
				                                           },
				'doNotBook':                               { 'index': 85, 'type': 'bool', }, 
				'isAdministrativeOverride':                { 'index': 86, 'type': 'bool', }, 
				'execFlowSpecificCanada':                  { 'index': 87, 'type': 'table', 'tablename': 'ExecFlowSpecificCanada', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'electronicBluesheetCode':                 { 'index': 88, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '1'},
				                                             ],
				                                           },
				'isParked':                                { 'index': 89, 'type': 'bool', }, 
				'risklessPrincipalOriginalExecutionPoint': { 'index': 90, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'regRepCode':                              { 'index': 91, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '5'},
				                                             ],
				                                           },
				'delayedPublicationTime':                  { 'index': 92, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                             ],
				                                           },
				'dssEventId':                              { 'index': 93, 'type': 'string', }, 
				'orderOriginCode':                         { 'index': 94, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '1'},
				                                             ],
				                                           },
				'isMifidSpecialPriceExecution':            { 'index': 95, 'type': 'bool', }, 
				'contraRegulatoryReportExecutionId':       { 'index': 96, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '8'},
				                                             ],
				                                           },
				'isGeneratedSpreadExecution':              { 'index': 97, 'type': 'bool', }, 
				'executionLegSummary':                     { 'index': 98, 'type': 'table', 'tablename': 'ExecutionLegSummary', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'isReinstated':                            { 'index': 99, 'type': 'bool', }, 
				'cancelStatus':                            { 'index': 100, 'type': 'ubyte', 'enum': 'OmCancelStatus', }, 
				'executionAttributionOrderSummaryList':    { 'index': 101, 'type': 'table', 'tablename': 'ExecutionAttributionOrderSummary', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'australiaTradeConditionCode':             { 'index': 102, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                             'meta-fields': [
					                                         {'field': 'deprecated' , 'value' : 'true'},
					                                         {'field': 'maxStringLength' , 'value' : '8'},
				                                             ],
				                                           },
				'deliverProspectusToClient':               { 'index': 103, 'type': 'bool', }, 
				'referenceCharges':                        { 'index': 104, 'type': 'table', 'tablename': 'Charge', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'flowSpecificSEF':                         { 'index': 105, 'type': 'table', 'tablename': 'FlowSpecificSEF', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'execFlowSpecificAustralia':               { 'index': 106, 'type': 'table', 'tablename': 'ExecFlowSpecificAustralia', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
			}, 
		}, 
		'ExecutionInternalEventContext': {
			'id': 380, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'resolveAllPrices':           { 'index': 0, 'type': 'bool', }, 
				'executionSuspendReasonText': { 'index': 1, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '256'},
				                                ],
				                              },
				'pendingCrossFinalization':   { 'index': 2, 'type': 'bool', }, 
			}, 
		}, 
		'ExecutionLegSummary': {
			'id': 684, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'internalProductId':     { 'index': 0, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'internalProductIdType': { 'index': 1, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'executedQuantity':      { 'index': 2, 'type': 'double', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'real'},
				                           ],
				                         },
				'averagePrice':          { 'index': 3, 'type': 'double', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'real'},
				                           ],
				                         },
			}, 
		}, 
		'ExecutionNotification': {
			'id': 121, 
			'version': 5, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAlias' , 'value' : 'Execution'},
			    {'field': 'rdbInheritParentKeys' , 'value' : 'false'},
			    {'field': 'rdbAdditionalKeyPart' , 'value' : 'executions/execVersion,executions/executionData/executionId'},
			    {'field': 'rdbProcessAttribute' , 'value' : 'executions/execVersion,executions/executionData/executionId'},
			    {'field': 'rdbColumnInParent' , 'value' : 'executions'},
			    {'field': 'rdbAsOwnTable' , 'value' : 'executions/executionCorrection'},
			],
			'columns': {
				'version':              { 'index': 0, 'type': 'int', 
				                          'meta-fields': [
					                      {'field': 'rdbAlias' , 'value' : 'execVersion'},
				                          ],
				                        },
				'executionData':        { 'index': 1, 'type': 'table', 'tablename': 'ExecutionData', 
				                          'meta-fields': [
					                      {'field': 'rdbAlias' , 'value' : ''},
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'relatedEntityIndexes': { 'index': 2, 'type': 'table', 'tablename': 'RelatedEntityIndex', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
				'executionCorrection':  { 'index': 3, 'type': 'table', 'tablename': 'ExecutionCorrection', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'parkedEventData':      { 'index': 4, 'type': 'table', 'tablename': 'ParkedEventData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
			}, 
		}, 
		'ExecutionSummary': {
			'id': 136, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'quantity':          { 'index': 0, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'executionCapacity': { 'index': 1, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionPoint':    { 'index': 2, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '16'},
				                       ],
				                     },
			}, 
		}, 
		'ExecutionUpdate': {
			'id': 123, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'currentExecution':     { 'index': 0, 'type': 'table', 'tablename': 'ExecutionNotification', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'previousExecution':    { 'index': 1, 'type': 'table', 'tablename': 'ExecutionNotification', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'transactionalProduct': { 'index': 2, 'type': 'table', 'tablename': 'RdsTransactionalProduct', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'marketDataStamp':      { 'index': 3, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'eventData':            { 'index': 4, 'type': 'table', 'tablename': 'EventData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
			}, 
		}, 
		'ExternalBasketReferenceIndex': {
			'id': 159, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'systemName':           { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '32'},
				                          ],
				                        },
				'externalObjectId':     { 'index': 1, 'type': 'string', 'aliases': ['tag'], 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '200'},
				                          ],
				                        },
				'tagDate':              { 'index': 2, 'type': 'int', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'date'},
				                          ],
				                        },
				'basketId':             { 'index': 3, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'externalObjectIdType': { 'index': 4, 'type': 'ubyte', 'enum': 'OmExternalObjectIdType', }, 
			}, 
		}, 
		'ExternalExecutionReferenceIndex': {
			'id': 109, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'systemName':           { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '32'},
				                          ],
				                        },
				'externalObjectId':     { 'index': 1, 'type': 'string', 'aliases': ['tag'], 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '200'},
				                          ],
				                        },
				'tagDate':              { 'index': 2, 'type': 'int', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'date'},
				                          ],
				                        },
				'executionId':          { 'index': 3, 'type': 'string', 'aliases': ['execId'], 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'externalObjectIdType': { 'index': 4, 'type': 'ubyte', 'enum': 'OmExternalObjectIdType', }, 
			}, 
		}, 
		'ExternalIndicationReferenceIndex': {
			'id': 708, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'systemName':           { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '32'},
				                          ],
				                        },
				'externalObjectId':     { 'index': 1, 'type': 'string', 'aliases': ['tag'], 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '200'},
				                          ],
				                        },
				'tagDate':              { 'index': 2, 'type': 'int', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'date'},
				                          ],
				                        },
				'externalObjectIdType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmExternalObjectIdType', }, 
				'indicationId':         { 'index': 4, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
			}, 
		}, 
		'ExternalLiquidityReferenceIndex': {
			'id': 725, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'systemName':           { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '32'},
				                          ],
				                        },
				'externalObjectId':     { 'index': 1, 'type': 'string', 'aliases': ['tag'], 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '200'},
				                          ],
				                        },
				'tagDate':              { 'index': 2, 'type': 'int', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'date'},
				                          ],
				                        },
				'externalObjectIdType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmExternalObjectIdType', }, 
				'liquidityId':          { 'index': 4, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
			}, 
		}, 
		'ExternalOrderReferenceIndex': {
			'id': 110, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'systemName':           { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '32'},
				                          ],
				                        },
				'externalObjectId':     { 'index': 1, 'type': 'string', 'aliases': ['tag'], 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '200'},
				                          ],
				                        },
				'tagDate':              { 'index': 2, 'type': 'int', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'date'},
				                          ],
				                        },
				'orderId':              { 'index': 3, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'externalObjectIdType': { 'index': 4, 'type': 'ubyte', 'enum': 'OmExternalObjectIdType', }, 
			}, 
		}, 
		'ExternalReference': {
			'id': 24, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'systemName':           { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '32'},
				                          ],
				                        },
				'tag':                  { 'index': 1, 'type': 'string', 'aliases': ['externalObjectId'], 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '200'},
				                          ],
				                        },
				'tagDate':              { 'index': 2, 'type': 'int', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'date'},
				                          ],
				                        },
				'orderId':              { 'index': 3, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                          'meta-fields': [
					                      {'field': 'deprecated' , 'value' : 'true'},
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'externalObjectIdType': { 'index': 4, 'type': 'ubyte', 'enum': 'OmExternalObjectIdType', }, 
			}, 
		}, 
		'ExternalTradingAlgorithmDetails': {
			'id': 680, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'tradingAlgorithm':            { 'index': 0, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'startTime':                   { 'index': 1, 'type': 'int', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                 ],
				                               },
				'endTime':                     { 'index': 2, 'type': 'int', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                 ],
				                               },
				'volumeLimitPercentage':       { 'index': 3, 'type': 'int', }, 
				'participationRatePercentage': { 'index': 4, 'type': 'int', }, 
			}, 
		}, 
		'FIXmessage': {
			'id': 519, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'fixLineId':        { 'index': 0, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '32'},
				                      ],
				                    },
				'timestamp':        { 'index': 1, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'rdbRemapDataType' , 'value' : 'datetime:yyyy-MM-dd HH:mm:ss.SSS'},
					                  {'field': 'maxStringLength' , 'value' : '23'},
				                      ],
				                    },
				'avgPx':            { 'index': 2, 'type': 'double', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'real'},
				                      ],
				                    },
				'clOrdID':          { 'index': 3, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '128'},
				                      ],
				                    },
				'cumQty':           { 'index': 4, 'type': 'int', }, 
				'execID':           { 'index': 5, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '128'},
				                      ],
				                    },
				'execRefID':        { 'index': 6, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '128'},
				                      ],
				                    },
				'execTransType':    { 'index': 7, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '2'},
				                      ],
				                    },
				'securityIDSource': { 'index': 8, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '3'},
				                      ],
				                    },
				'lastMkt':          { 'index': 9, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '5'},
				                      ],
				                    },
				'lastPx':           { 'index': 10, 'type': 'double', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'real'},
				                      ],
				                    },
				'lastQty':          { 'index': 11, 'type': 'double', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'real'},
				                      ],
				                    },
				'msgSeqNum':        { 'index': 12, 'type': 'int', }, 
				'msgType':          { 'index': 13, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '3'},
				                      ],
				                    },
				'orderID':          { 'index': 14, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '128'},
				                      ],
				                    },
				'orderQty':         { 'index': 15, 'type': 'double', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'real'},
				                      ],
				                    },
				'ordStatus':        { 'index': 16, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '3'},
				                      ],
				                    },
				'ordType':          { 'index': 17, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '3'},
				                      ],
				                    },
				'origClOrdID':      { 'index': 18, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '128'},
				                      ],
				                    },
				'possDupFlag':      { 'index': 19, 'type': 'bool', }, 
				'price':            { 'index': 20, 'type': 'double', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'real'},
				                      ],
				                    },
				'securityID':       { 'index': 21, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '128'},
				                      ],
				                    },
				'senderCompID':     { 'index': 22, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '128'},
				                      ],
				                    },
				'side':             { 'index': 23, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '3'},
				                      ],
				                    },
				'symbol':           { 'index': 24, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '128'},
				                      ],
				                    },
				'targetCompID':     { 'index': 25, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '128'},
				                      ],
				                    },
				'timeInForceFIX':   { 'index': 26, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'rdbAlias' , 'value' : 'timeInForce'},
					                  {'field': 'maxStringLength' , 'value' : '3'},
				                      ],
				                    },
				'listID':           { 'index': 27, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '128'},
				                      ],
				                    },
				'possResend':       { 'index': 28, 'type': 'bool', }, 
				'onBehalfOfCompID': { 'index': 29, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '128'},
				                      ],
				                    },
				'raw':              { 'index': 30, 'type': 'string', }, 
			}, 
		}, 
		'FailoverInformationData': {
			'id': 93, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'instanceName':   { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '64'},
				                    ],
				                  },
				'activeInstance': { 'index': 1, 'type': 'ubyte', 'enum': 'OmActiveInstance', }, 
			}, 
		}, 
		'FalconTradeReportData': {
			'id': 610, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                               { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                 ],
				                                               },
				'falconTradeReportTransactionType':            { 'index': 1, 'type': 'ubyte', 'enum': 'OmFalconTradeReportTransactionType', }, 
				'executionPrice':                              { 'index': 2, 'type': 'double', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                                 ],
				                                               },
				'quantity':                                    { 'index': 3, 'type': 'double', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                                 ],
				                                               },
				'executionId':                                 { 'index': 4, 'type': 'string', 'aliases': ['execId'], 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '29'},
				                                                 ],
				                                               },
				'version':                                     { 'index': 5, 'type': 'int', }, 
				'oldVersion':                                  { 'index': 6, 'type': 'uint', }, 
				'buySell':                                     { 'index': 7, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'sellShort':                                   { 'index': 8, 'type': 'bool', }, 
				'sellShortExempt':                             { 'index': 9, 'type': 'bool', }, 
				'isOtherSideShortSell':                        { 'index': 10, 'type': 'bool', }, 
				'isOtherSideShortSellExempt':                  { 'index': 11, 'type': 'bool', }, 
				'customerPartyType':                           { 'index': 12, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'executionCapacity':                           { 'index': 13, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'productId':                                   { 'index': 14, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '100'},
				                                                 ],
				                                               },
				'productIdType':                               { 'index': 15, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'executionTime':                               { 'index': 16, 'type': 'int', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                 ],
				                                               },
				'executionTimeMicrosecond':                    { 'index': 17, 'type': 'int', }, 
				'settlementDateCalcMethod':                    { 'index': 18, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'marketParticipantId':                         { 'index': 19, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'clearingInstruction':                         { 'index': 20, 'type': 'ubyte', 'enum': 'OmClearingInstructionType', }, 
				'tradeReportResponse':                         { 'index': 21, 'type': 'table', 'tablename': 'TradeReportResponse', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                 ],
				                                               },
				'executionPoint':                              { 'index': 22, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '16'},
				                                                 ],
				                                               },
				'risklessPrincipalOriginalExecutionPoint':     { 'index': 23, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '16'},
				                                                 ],
				                                               },
				'fixProcessCode':                              { 'index': 24, 'type': 'ubyte', 'enum': 'OmFixProcessCode', }, 
				'fixTradeCondition':                           { 'index': 25, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '128'},
				                                                 ],
				                                               },
				'fixTrdSubType':                               { 'index': 26, 'type': 'int', }, 
				'fixReversalIndicator':                        { 'index': 27, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixPublishTrdIndicator':                      { 'index': 28, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixAsOfIndicator':                            { 'index': 29, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixOverrideFlag':                             { 'index': 30, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'contraOatsBranchSequenceNumber':              { 'index': 31, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '20'},
				                                                 ],
				                                               },
				'oatsBranchSequenceNumber':                    { 'index': 32, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '20'},
				                                                 ],
				                                               },
				'commentText':                                 { 'index': 33, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '50'},
				                                                 ],
				                                               },
				'regulatoryReportDomain':                      { 'index': 34, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'contraParty':                                 { 'index': 35, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'usIsORFReportable':                           { 'index': 36, 'type': 'bool', }, 
				'tradeReportingExecutionEntryTime':            { 'index': 37, 'type': 'int', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                 ],
				                                               },
				'tradeReportingExecutionEntryTimeMicrosecond': { 'index': 38, 'type': 'int', }, 
				'clientOrderCapacity':                         { 'index': 39, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'giveUpContraParty':                           { 'index': 40, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'secDbActReportingDeskId':                     { 'index': 41, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '30'},
				                                                 ],
				                                               },
				'orderAcceptTime':                             { 'index': 42, 'type': 'int', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                 ],
				                                               },
				'orderAcceptTimeMicrosecond':                  { 'index': 43, 'type': 'int', }, 
			}, 
		}, 
		'FixClientInformation': {
			'id': 602, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'fixSession':     { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '32'},
				                    ],
				                  },
				'fixFirm':        { 'index': 1, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '32'},
				                    ],
				                  },
				'fixStrategy':    { 'index': 2, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '32'},
				                    ],
				                  },
				'fixTraderId':    { 'index': 3, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '32'},
				                    ],
				                  },
				'fixSessionType': { 'index': 4, 'type': 'ubyte', 'enum': 'OmFixSessionType', }, 
			}, 
		}, 
		'FixOrderAttributes': {
			'id': 606, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'fixTag204': { 'index': 0, 'type': 'int', }, 
				'fixTag47':  { 'index': 1, 'type': 'string', 
				               'meta-fields': [
					           {'field': 'maxStringLength' , 'value' : '1'},
				               ],
				             },
			}, 
		}, 
		'FlightRecorderEventIdMarker': {
			'id': 509, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'eventNumber': { 'index': 0, 'type': 'int', }, 
			}, 
		}, 
		'FlightRecorderTransactionMarker': {
			'id': 508, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'flightRecorderTransactionMarkerType': { 'index': 0, 'type': 'ubyte', 'enum': 'OmFlightRecorderTransactionMarkerType', }, 
				'sequenceName':                        { 'index': 1, 'type': 'string', 
				                                         'meta-fields': [
					                                     {'field': 'maxStringLength' , 'value' : '50'},
				                                         ],
				                                       },
				'sequenceNumber':                      { 'index': 2, 'type': 'int', }, 
			}, 
		}, 
		'FlowIdentification': {
			'id': 686, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'region':              { 'index': 0, 'type': 'ubyte', 'enum': 'OmRegion', }, 
				'businessLine':        { 'index': 1, 'type': 'ubyte', 'enum': 'OmBusinessLine', }, 
				'businessFunction':    { 'index': 2, 'type': 'ubyte', 'enum': 'OmBusinessFunction', }, 
				'salesServiceGroup':   { 'index': 3, 'type': 'ubyte', 'enum': 'OmSalesServiceGroup', }, 
				'tradingServiceGroup': { 'index': 4, 'type': 'ubyte', 'enum': 'OmTradingServiceGroup', }, 
			}, 
		}, 
		'FlowSpecificAustralia': {
			'id': 717, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'asicWholesaleIndicator':                   { 'index': 0, 'type': 'bool', }, 
				'asicIntermediaryId':                       { 'index': 1, 'type': 'int', }, 
				'asicOriginOfOrder':                        { 'index': 2, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '32'},
				                                              ],
				                                            },
				'isAustraliaUndisclosedOrder':              { 'index': 3, 'type': 'bool', }, 
				'iosAccountExchangeCrossReference':         { 'index': 4, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '10'},
				                                              ],
				                                            },
				'australiaUnintentionalCrossPreventionKey': { 'index': 5, 'type': 'int', }, 
				'australiaTradeConditionCode':              { 'index': 6, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '8'},
				                                              ],
				                                            },
				'iosPlusEncodedOrderId':                    { 'index': 7, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '15'},
				                                              ],
				                                            },
			}, 
		}, 
		'FlowSpecificCanada': {
			'id': 524, 
			'version': 9, 
			'publishable': 'true', 
			'columns': {
				'canadaBasketTrade':                  { 'index': 0, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '5'},
				                                        ],
				                                      },
				'canadaAccountType':                  { 'index': 1, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '2'},
				                                        ],
				                                      },
				'canadaCustomerType':                 { 'index': 2, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '3'},
				                                        ],
				                                      },
				'canadaRegulationCode':               { 'index': 3, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '2'},
				                                        ],
				                                      },
				'canadaSOROrderID1':                  { 'index': 4, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '40'},
				                                        ],
				                                      },
				'canadaNoTradeFeature':               { 'index': 5, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '2'},
				                                        ],
				                                      },
				'canadaNoTradeKey':                   { 'index': 6, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '6'},
				                                        ],
				                                      },
				'canadaNonResident':                  { 'index': 7, 'type': 'bool', }, 
				'triactCanadaMarketplaceConstraints': { 'index': 8, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '15'},
				                                        ],
				                                      },
				'canadaActionSource':                 { 'index': 9, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '3'},
				                                        ],
				                                      },
				'canadaExchangeUserId':               { 'index': 10, 'type': 'string', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
					                                    {'field': 'maxStringLength' , 'value' : '8'},
				                                        ],
				                                      },
				'canadaPrincipalTrade':               { 'index': 11, 'type': 'bool', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
				                                        ],
				                                      },
				'canadaWashTrade':                    { 'index': 12, 'type': 'bool', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
				                                        ],
				                                      },
				'canadaTradeCorrection':              { 'index': 13, 'type': 'bool', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
				                                        ],
				                                      },
				'canadaExchangeAdmin':                { 'index': 14, 'type': 'string', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
					                                    {'field': 'maxStringLength' , 'value' : '35'},
				                                        ],
				                                      },
				'canadaBypass':                       { 'index': 15, 'type': 'bool', }, 
				'canadaNormalCourseIssuerBid':        { 'index': 16, 'type': 'bool', }, 
				'canadaOriginalTradeId':              { 'index': 17, 'type': 'string', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
					                                    {'field': 'maxStringLength' , 'value' : '30'},
				                                        ],
				                                      },
				'canadaProtection':                   { 'index': 18, 'type': 'bool', }, 
				'canadaProtectionPriceImprovement':   { 'index': 19, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '1'},
				                                        ],
				                                      },
				'canadaSOROrderID2':                  { 'index': 20, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '40'},
				                                        ],
				                                      },
				'canadaCancelOnDisconnect':           { 'index': 21, 'type': 'bool', }, 
				'canadaPegType':                      { 'index': 22, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '1'},
				                                        ],
				                                      },
				'canadaUndisplayed':                  { 'index': 23, 'type': 'bool', }, 
				'canadaInsideMatchPercent':           { 'index': 24, 'type': 'int', }, 
				'canadaSettlementTerm':               { 'index': 25, 'type': 'string', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
					                                    {'field': 'maxStringLength' , 'value' : '2'},
				                                        ],
				                                      },
				'canadaSettlementDate':               { 'index': 26, 'type': 'int', # FIELD IS OBSOLETE
				                                        'meta-fields': [
					                                    {'field': 'obsolete' , 'value' : 'true'},
					                                    {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                        ],
				                                      },
				'canadaIsInternalCross':              { 'index': 27, 'type': 'bool', }, 
				'canadaInfoText':                     { 'index': 28, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '128'},
				                                        ],
				                                      },
				'canadaCrossType':                    { 'index': 29, 'type': 'ubyte', 'enum': 'OmCanadaCrossType', }, 
				'canadaMustBeFilled':                 { 'index': 30, 'type': 'bool', }, 
				'canadaClearingAccount':              { 'index': 31, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '32'},
				                                        ],
				                                      },
				'canadaShortMarkingExempt':           { 'index': 32, 'type': 'ubyte', 'enum': 'OmCanadaShortMarkingExemptDesignation', }, 
			}, 
		}, 
		'FlowSpecificSEF': {
			'id': 723, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sefPartyReferences':      { 'index': 0, 'type': 'table', 'tablename': 'SEFPartyReference', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'sefRegulatoryReferences': { 'index': 1, 'type': 'table', 'tablename': 'SEFRegulatoryReference', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
			}, 
		}, 
		'ForceCancelBasketCommand': {
			'id': 502, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'basketId':           { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'externalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'ForceCancelIndicationCommand': {
			'id': 707, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'indicationId':       { 'index': 0, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'commandHeader':      { 'index': 2, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
			}, 
		}, 
		'ForceCancelLiquidityCommand': {
			'id': 735, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'liquidityId':        { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'cancelReason':       { 'index': 3, 'type': 'ubyte', 'enum': 'OmCancelReason', }, 
			}, 
		}, 
		'ForceCancelOrderCommand': {
			'id': 55, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'orderId':            { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'executedQuantity':   { 'index': 3, 'type': 'double', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'real'},
				                        ],
				                      },
				'quantityRemaining':  { 'index': 4, 'type': 'double', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'real'},
				                        ],
				                      },
				'rejectReason':       { 'index': 5, 'type': 'table', 'tablename': 'RejectReason', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'cancelReason':       { 'index': 6, 'type': 'ubyte', 'enum': 'OmCancelReason', }, 
			}, 
		}, 
		'ForceCorrectBasketCommand': {
			'id': 501, 
			'version': 7, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':               { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'basketId':                    { 'index': 1, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'basketName':                  { 'index': 2, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'basketType':                  { 'index': 3, 'type': 'ubyte', 'enum': 'OmBasketType', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
				                                 ],
				                               },
				'orderCount':                  { 'index': 4, 'type': 'int', }, 
				'creatorId':                   { 'index': 5, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'destinationPartition':        { 'index': 6, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'opaqueBasketData':            { 'index': 7, 'type': 'binary', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'blob'},
				                                 ],
				                               },
				'accessId':                    { 'index': 8, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'externalReferences':          { 'index': 9, 'type': 'table', 'tablename': 'ExternalReference', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'basketRtlCategory':           { 'index': 10, 'type': 'table', 'tablename': 'BasketRtlCategory', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'calculatedBasketRtlCategory': { 'index': 11, 'type': 'table', 'tablename': 'BasketRtlCategory', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'basketDescription':           { 'index': 12, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '50'},
				                                 ],
				                               },
				'basketCategory':              { 'index': 13, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '16'},
				                                 ],
				                               },
				'visibilityGroups':            { 'index': 14, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
			}, 
		}, 
		'ForceCorrectIndicationCommand': {
			'id': 706, 
			'version': 5, 
			'publishable': 'true', 
			'columns': {
				'indicationId':                      { 'index': 0, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '29'},
				                                       ],
				                                     },
				'indicationOwners':                  { 'index': 1, 'type': 'table', 'tablename': 'IndicationOwner', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'indicationSideDetails':             { 'index': 2, 'type': 'table', 'tablename': 'IndicationSideDetail', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'manualIndicationIndicator':         { 'index': 3, 'type': 'bool', }, 
				'indicationCapacity':                { 'index': 4, 'type': 'ubyte', 'enum': 'OmIndicationCapacity', }, 
				'expirationDateTime':                { 'index': 5, 'type': 'int', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                       ],
				                                     },
				'comments':                          { 'index': 6, 'type': 'table', 'tablename': 'Comment', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'outboundComment':                   { 'index': 7, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '128'},
				                                       ],
				                                     },
				'externalReferences':                { 'index': 8, 'type': 'table', 'tablename': 'ExternalReference', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'indicationTier':                    { 'index': 9, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '2'},
				                                       ],
				                                     },
				'clientIndicationInterests':         { 'index': 10, 'type': 'table', 'tablename': 'ClientIndicationInterest', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'indicationRoutingType':             { 'index': 11, 'type': 'ubyte', 'enum': 'OmIndicationRoutingType', }, 
				'tradingAlgorithmEngine':            { 'index': 12, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '32'},
				                                       ],
				                                     },
				'commandHeader':                     { 'index': 13, 'type': 'table', 'tablename': 'CommandHeader', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                                       ],
				                                     },
				'commentsAdd':                       { 'index': 14, 'type': 'table', 'tablename': 'Comment', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'commentsRemove':                    { 'index': 15, 'type': 'table', 'tablename': 'Comment', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'externalReferencesToAdd':           { 'index': 16, 'type': 'table', 'tablename': 'ExternalReference', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'externalReferencesToRemove':        { 'index': 17, 'type': 'table', 'tablename': 'ExternalReference', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'clientIndicationInterestsToAdd':    { 'index': 18, 'type': 'table', 'tablename': 'ClientIndicationInterest', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'clientIndicationInterestsToRemove': { 'index': 19, 'type': 'table', 'tablename': 'ClientIndicationInterest', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'indicationOwnersToAdd':             { 'index': 20, 'type': 'table', 'tablename': 'IndicationOwner', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'indicationOwnersToRemove':          { 'index': 21, 'type': 'table', 'tablename': 'IndicationOwner', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'capitalCommitType':                 { 'index': 22, 'type': 'ubyte', 'enum': 'OmCapitalCommitType', }, 
				'targetClientPartiesToRemove':       { 'index': 23, 'type': 'table', 'tablename': 'ClientParty', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'targetClientPartiesToAdd':          { 'index': 24, 'type': 'table', 'tablename': 'ClientParty', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'relatedEntitiesAdd':                { 'index': 25, 'type': 'table', 'tablename': 'RelatedEntity', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'relatedEntitiesRemove':             { 'index': 26, 'type': 'table', 'tablename': 'RelatedEntity', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'visibilityGroupsToRemove':          { 'index': 27, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'visibilityGroupsToAdd':             { 'index': 28, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'indicationParameters':              { 'index': 29, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '1024'},
				                                       ],
				                                     },
				'targetClientParties':               { 'index': 30, 'type': 'table', 'tablename': 'ClientParty', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'visibilityGroups':                  { 'index': 31, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
			}, 
		}, 
		'ForceCorrectLiquidityCommand': {
			'id': 734, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                    { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'liquidityId':                      { 'index': 1, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '29'},
				                                      ],
				                                    },
				'liquidityParameters':              { 'index': 2, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '1024'},
				                                      ],
				                                    },
				'excludedClientParties':            { 'index': 3, 'type': 'table', 'tablename': 'ClientParty', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'targetClientParties':              { 'index': 4, 'type': 'table', 'tablename': 'ClientParty', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'liquiditySourceReason':            { 'index': 5, 'type': 'ubyte', 'enum': 'OmLiquiditySourceReason', }, 
				'liquiditySourceOwners':            { 'index': 6, 'type': 'table', 'tablename': 'IndicationOwner', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'visibilityGroups':                 { 'index': 7, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'liquidityBlockingReasons':         { 'index': 8, 'type': 'table', 'tablename': 'LiquidityBlockingReason', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'expirationDateTime':               { 'index': 9, 'type': 'int', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                      ],
				                                    },
				'buySell':                          { 'index': 10, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'quantity':                         { 'index': 11, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'remainingQuantity':                { 'index': 12, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'orderType':                        { 'index': 13, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'limitPrice':                       { 'index': 14, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'pegType':                          { 'index': 15, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffset':                        { 'index': 16, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'pegOffsetType':                    { 'index': 17, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'orderCapacity':                    { 'index': 18, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'principalType':                    { 'index': 19, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'agencyType':                       { 'index': 20, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'liquidityCapacity':                { 'index': 21, 'type': 'ubyte', 'enum': 'OmIndicationCapacity', }, 
				'accounts':                         { 'index': 22, 'type': 'table', 'tablename': 'Account', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'externalReferencesToRemove':       { 'index': 23, 'type': 'table', 'tablename': 'ExternalReference', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'externalReferencesToAdd':          { 'index': 24, 'type': 'table', 'tablename': 'ExternalReference', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'accountsToRemove':                 { 'index': 25, 'type': 'table', 'tablename': 'Account', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'accountsToAdd':                    { 'index': 26, 'type': 'table', 'tablename': 'Account', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'excludedClientPartiesToRemove':    { 'index': 27, 'type': 'table', 'tablename': 'ClientParty', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'excludedClientPartiesToAdd':       { 'index': 28, 'type': 'table', 'tablename': 'ClientParty', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'targetClientPartiesToRemove':      { 'index': 29, 'type': 'table', 'tablename': 'ClientParty', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'targetClientPartiesToAdd':         { 'index': 30, 'type': 'table', 'tablename': 'ClientParty', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'liquiditySourceOwnersToRemove':    { 'index': 31, 'type': 'table', 'tablename': 'IndicationOwner', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'liquiditySourceOwnersToAdd':       { 'index': 32, 'type': 'table', 'tablename': 'IndicationOwner', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'visibilityGroupsToRemove':         { 'index': 33, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'visibilityGroupsToAdd':            { 'index': 34, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'liquidityBlockingReasonsToRemove': { 'index': 35, 'type': 'table', 'tablename': 'LiquidityBlockingReason', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'liquidityBlockingReasonsToAdd':    { 'index': 36, 'type': 'table', 'tablename': 'LiquidityBlockingReason', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'externalReferences':               { 'index': 37, 'type': 'table', 'tablename': 'ExternalReference', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
			}, 
		}, 
		'ForceMassCancelCandidateData': {
			'id': 321, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'orderId': { 'index': 0, 'type': 'string', 
				             'meta-fields': [
					         {'field': 'maxStringLength' , 'value' : '29'},
				             ],
				           },
			}, 
		}, 
		'FormatError': {
			'id': 349, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'formatErrorText': { 'index': 0, 'type': 'string', }, 
			}, 
		}, 
		'FundingLegDetails': {
			'id': 496, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'fundingLegSpread': { 'index': 0, 'type': 'double', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'real'},
				                      ],
				                    },
				'rateOption':       { 'index': 1, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '32'},
				                      ],
				                    },
				'rateOptionTenor':  { 'index': 2, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '5'},
				                      ],
				                    },
				'resetFrequency':   { 'index': 3, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '5'},
				                      ],
				                    },
				'paymentFrequency': { 'index': 4, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '5'},
				                      ],
				                    },
			}, 
		}, 
		'FuturesInstructionElement': {
			'id': 143, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'type':                      { 'index': 0, 'type': 'ubyte', 'enum': 'OmInstructionType', }, 
				'clearingAccount':           { 'index': 1, 'type': 'string', }, 
				'instructClearingAccountId': { 'index': 2, 'type': 'bool', }, 
				'clearingAccountType':       { 'index': 3, 'type': 'string', }, 
				'instructAccountType':       { 'index': 4, 'type': 'bool', }, 
				'ctiCode':                   { 'index': 5, 'type': 'string', }, 
				'instructCtiCode':           { 'index': 6, 'type': 'bool', }, 
				'origin':                    { 'index': 7, 'type': 'string', }, 
				'instructOrigin':            { 'index': 8, 'type': 'bool', }, 
				'openClose':                 { 'index': 9, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'instructOpenClose':         { 'index': 10, 'type': 'bool', }, 
				'clearingMemberId':          { 'index': 11, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '16'},
				                               ],
				                             },
				'giveUpMessage':             { 'index': 12, 'type': 'string', }, 
				'instructReference':         { 'index': 13, 'type': 'bool', }, 
				'reference':                 { 'index': 14, 'type': 'string', }, 
				'commission':                { 'index': 15, 'type': 'double', 
				                               'meta-fields': [
					                           {'field': 'dictionaryType' , 'value' : 'real'},
				                               ],
				                             },
			}, 
		}, 
		'FuturesTradeError': {
			'id': 144, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'tradeId':                { 'index': 0, 'type': 'string', }, 
				'errorType':              { 'index': 1, 'type': 'ubyte', 'enum': 'OmErrorType', }, 
				'rejectingSystem':        { 'index': 2, 'type': 'ubyte', 'enum': 'OmRejectingSystem', }, 
				'instrId':                { 'index': 3, 'type': 'int', }, 
				'instructionElementId':   { 'index': 4, 'type': 'int', }, 
				'message':                { 'index': 5, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '250'},
				                            ],
				                          },
				'instructionElementList': { 'index': 6, 'type': 'table', 'tablename': 'InstructionElement', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'collection'},
				                            ],
				                          },
			}, 
		}, 
		'GatorMatchingEngineStatus': {
			'id': 601, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'matchingEngineName':   { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '64'},
				                          ],
				                        },
				'matchingEngineStatus': { 'index': 1, 'type': 'ubyte', 'enum': 'OmMatchingEngineStatus', }, 
			}, 
		}, 
		'GatorSecurityStatus': {
			'id': 600, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'productId':          { 'index': 0, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '100'},
				                        ],
				                      },
				'productIdType':      { 'index': 1, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'lastExecutedPrice':  { 'index': 2, 'type': 'double', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'real'},
				                        ],
				                      },
				'timestampUtc':       { 'index': 3, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '50'},
				                        ],
				                      },
				'previouslyReported': { 'index': 4, 'type': 'bool', }, 
				'securityID':         { 'index': 5, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '128'},
				                        ],
				                      },
				'currency':           { 'index': 6, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '3'},
				                        ],
				                      },
			}, 
		}, 
		'HermesCmdArg': {
			'id': 116, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'hermesArgName':  { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '32'},
				                    ],
				                  },
				'hermesArgValue': { 'index': 1, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '64'},
				                    ],
				                  },
			}, 
		}, 
		'HermesCommandEvent': {
			'id': 117, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'hermesCmdName':    { 'index': 0, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '32'},
				                      ],
				                    },
				'hermesCmdArgs':    { 'index': 1, 'type': 'table', 'tablename': 'HermesCmdArg', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                      ],
				                    },
				'hermesCmdSuccess': { 'index': 2, 'type': 'bool', }, 
				'creatorId':        { 'index': 3, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                      'meta-fields': [
					                  {'field': 'deprecated' , 'value' : 'true'},
					                  {'field': 'maxStringLength' , 'value' : '29'},
				                      ],
				                    },
			}, 
		}, 
		'IgnoreDependencyTypeElement': {
			'id': 397, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'dependencyType': { 'index': 0, 'type': 'ubyte', 'enum': 'OmDependencyType', }, 
			}, 
		}, 
		'ImLocateBatchRequest': {
			'id': 10000, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'traderId':       { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '45'},
				                    ],
				                  },
				'locateRequests': { 'index': 1, 'type': 'table', 'tablename': 'ImLocateRequest', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'collection'},
				                    ],
				                  },
			}, 
		}, 
		'ImLocateRequest': {
			'id': 10001, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'messageId':                    { 'index': 0, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
				'productId':                    { 'index': 1, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '100'},
				                                  ],
				                                },
				'requestedQuantity':            { 'index': 2, 'type': 'int', }, 
				'traderId':                     { 'index': 3, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '45'},
				                                  ],
				                                },
				'needResearchOnLocateRequest':  { 'index': 4, 'type': 'bool', }, 
				'partialFillAcceptable':        { 'index': 5, 'type': 'bool', }, 
				'isPosDup':                     { 'index': 6, 'type': 'bool', }, 
				'inventoryManagerInstanceName': { 'index': 7, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
			}, 
		}, 
		'ImLocateResponse': {
			'id': 10003, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'messageId':                 { 'index': 0, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '64'},
				                               ],
				                             },
				'locateRequestStatus':       { 'index': 1, 'type': 'ubyte', 'enum': 'OmLocateProxyResponseStatus', }, 
				'productId':                 { 'index': 2, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '100'},
				                               ],
				                             },
				'secLendingLocateId':        { 'index': 3, 'type': 'uint', }, 
				'requestedQuantity':         { 'index': 4, 'type': 'int', }, 
				'approvedQuantity':          { 'index': 5, 'type': 'int', }, 
				'locateRequestErrorMessage': { 'index': 6, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '256'},
				                               ],
				                             },
			}, 
		}, 
		'ImOm2InventoryResponseMessage': {
			'id': 664, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'orderId':                            { 'index': 0, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '29'},
				                                        ],
				                                      },
				'locateRequestId':                    { 'index': 1, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '37'},
				                                        ],
				                                      },
				'productId':                          { 'index': 2, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '100'},
				                                        ],
				                                      },
				'locateRequesterIdPreferenceList':    { 'index': 3, 'type': 'table', 'tablename': 'LocateRequesterIdPreferenceListMember', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                                        ],
				                                      },
				'originalRequestedQuantity':          { 'index': 4, 'type': 'int', }, 
				'originalRequestedQuantityRemaining': { 'index': 5, 'type': 'int', }, 
				'locateRequestExpirationTime':        { 'index': 6, 'type': 'int', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                        ],
				                                      },
				'approvalType':                       { 'index': 7, 'type': 'ubyte', 'enum': 'OmApprovalType', }, 
			}, 
		}, 
		'ImOm2ResponseLocateInfo': {
			'id': 665, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'orderId':           { 'index': 0, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '29'},
				                       ],
				                     },
				'traderId':          { 'index': 1, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '45'},
				                       ],
				                     },
				'productId':         { 'index': 2, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '100'},
				                       ],
				                     },
				'inventoryQuantity': { 'index': 3, 'type': 'int', }, 
			}, 
		}, 
		'ImRequestAck': {
			'id': 10002, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'locateRequestStatus': { 'index': 0, 'type': 'ubyte', 'enum': 'OmLocateProxyResponseStatus', }, 
				'messageId':           { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '64'},
				                         ],
				                       },
			}, 
		}, 
		'ImSodTable': {
			'id': 667, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'productId':         { 'index': 0, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '100'},
				                       ],
				                     },
				'inventoryQuantity': { 'index': 1, 'type': 'int', }, 
				'sentToLocateProxy': { 'index': 2, 'type': 'bool', }, 
				'approvalType':      { 'index': 3, 'type': 'ubyte', 'enum': 'OmApprovalType', }, 
			}, 
		}, 
		'ImbalanceDataStamp': {
			'id': 379, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'buySell':           { 'index': 0, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'imbalanceQuantity': { 'index': 1, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
			}, 
		}, 
		'IndicationData': {
			'id': 694, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'indicationId':                    { 'index': 0, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '29'},
				                                     ],
				                                   },
				'internalProductId':               { 'index': 1, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '29'},
				                                     ],
				                                   },
				'indicationOwners':                { 'index': 2, 'type': 'table', 'tablename': 'IndicationOwner', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'sourceSystemName':                { 'index': 3, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '32'},
				                                     ],
				                                   },
				'sourceSystemType':                { 'index': 4, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'indicationSideDetails':           { 'index': 5, 'type': 'table', 'tablename': 'IndicationSideDetail', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'manualIndicationIndicator':       { 'index': 6, 'type': 'bool', }, 
				'indicationCapacity':              { 'index': 7, 'type': 'ubyte', 'enum': 'OmIndicationCapacity', }, 
				'expirationDateTime':              { 'index': 8, 'type': 'int', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                     ],
				                                   },
				'comments':                        { 'index': 9, 'type': 'table', 'tablename': 'Comment', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'outboundComment':                 { 'index': 10, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '128'},
				                                     ],
				                                   },
				'externalReferences':              { 'index': 11, 'type': 'table', 'tablename': 'ExternalReference', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'indicationTier':                  { 'index': 12, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '2'},
				                                     ],
				                                   },
				'clientIndicationInterests':       { 'index': 13, 'type': 'table', 'tablename': 'ClientIndicationInterest', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'internalProductIdType':           { 'index': 14, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'indicationRoutingType':           { 'index': 15, 'type': 'ubyte', 'enum': 'OmIndicationRoutingType', }, 
				'primaryStatus':                   { 'index': 16, 'type': 'ubyte', 'enum': 'OmPrimaryStatus', }, 
				'tradingAlgorithmEngine':          { 'index': 17, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '32'},
				                                     ],
				                                   },
				'indicationCompletionReason':      { 'index': 18, 'type': 'ubyte', 'enum': 'OmIndicationCompletionReason', }, 
				'createDateTime':                  { 'index': 19, 'type': 'int', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                     ],
				                                   },
				'createDateTimeMicroseconds':      { 'index': 20, 'type': 'int', }, 
				'indicationCurrency':              { 'index': 21, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '3'},
				                                     ],
				                                   },
				'liquiditySourceIsOrderInHand':    { 'index': 22, 'type': 'bool', }, 
				'liquiditySourceIsTakingPosition': { 'index': 23, 'type': 'bool', }, 
				'liquiditySourceIsBookUnwind':     { 'index': 24, 'type': 'bool', }, 
				'indicationQuality':               { 'index': 25, 'type': 'ubyte', 'enum': 'OmIndicationQuality', }, 
				'dssEventId':                      { 'index': 26, 'type': 'string', }, 
				'capitalCommitType':               { 'index': 27, 'type': 'ubyte', 'enum': 'OmCapitalCommitType', }, 
				'targetClientParties':             { 'index': 28, 'type': 'table', 'tablename': 'ClientParty', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'visibilityGroups':                { 'index': 29, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'indicationParameters':            { 'index': 30, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '1024'},
				                                     ],
				                                   },
			}, 
		}, 
		'IndicationNotification': {
			'id': 701, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'version':              { 'index': 0, 'type': 'int', }, 
				'indicationData':       { 'index': 1, 'type': 'table', 'tablename': 'IndicationData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'relatedEntityIndexes': { 'index': 2, 'type': 'table', 'tablename': 'RelatedEntityIndex', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
			}, 
		}, 
		'IndicationOwner': {
			'id': 695, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'owner':        { 'index': 0, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '32'},
				                  ],
				                },
				'businessUnit': { 'index': 1, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '16'},
				                  ],
				                },
			}, 
		}, 
		'IndicationQualifer': {
			'id': 696, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'owner':        { 'index': 0, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '32'},
				                  ],
				                },
				'businessUnit': { 'index': 1, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '16'},
				                  ],
				                },
			}, 
		}, 
		'IndicationSessionTransmissionDetailData': {
			'id': 702, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'indicationSessionTransmissionDetailId': { 'index': 0, 'type': 'string', 
				                                           'meta-fields': [
					                                       {'field': 'maxStringLength' , 'value' : '29'},
				                                           ],
				                                         },
				'indicationId':                          { 'index': 1, 'type': 'string', 
				                                           'meta-fields': [
					                                       {'field': 'maxStringLength' , 'value' : '29'},
				                                           ],
				                                         },
				'sessionId':                             { 'index': 2, 'type': 'string', 
				                                           'meta-fields': [
					                                       {'field': 'maxStringLength' , 'value' : '29'},
				                                           ],
				                                         },
				'clientIndicationInterests':             { 'index': 3, 'type': 'table', 'tablename': 'ClientIndicationInterest', 
				                                           'meta-fields': [
					                                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                                           ],
				                                         },
				'indicationSessionTransmissionStatus':   { 'index': 4, 'type': 'ubyte', 'enum': 'OmIndicationSessionTransmissionStatus', }, 
				'fixIndicationId':                       { 'index': 5, 'type': 'string', 
				                                           'meta-fields': [
					                                       {'field': 'maxStringLength' , 'value' : '39'},
				                                           ],
				                                         },
				'previousFixIndicationId':               { 'index': 6, 'type': 'string', 
				                                           'meta-fields': [
					                                       {'field': 'maxStringLength' , 'value' : '39'},
				                                           ],
				                                         },
				'lastSentDateTime':                      { 'index': 7, 'type': 'int', 
				                                           'meta-fields': [
					                                       {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                           ],
				                                         },
				'lastSentDateTimeMicroseconds':          { 'index': 8, 'type': 'int', }, 
			}, 
		}, 
		'IndicationSessionTransmissionDetailNotification': {
			'id': 704, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'version':                                 { 'index': 0, 'type': 'int', }, 
				'indicationSessionTransmissionDetailData': { 'index': 1, 'type': 'table', 'tablename': 'IndicationSessionTransmissionDetailData', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
			}, 
		}, 
		'IndicationSessionTransmissionDetailUpdate': {
			'id': 703, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'currentIndicationSessionTransmissionDetail':  { 'index': 0, 'type': 'table', 'tablename': 'IndicationSessionTransmissionDetailNotification', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                 ],
				                                               },
				'previousIndicationSessionTransmissionDetail': { 'index': 1, 'type': 'table', 'tablename': 'IndicationSessionTransmissionDetailNotification', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                 ],
				                                               },
				'eventData':                                   { 'index': 2, 'type': 'table', 'tablename': 'EventData', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                 ],
				                                               },
			}, 
		}, 
		'IndicationSideDetail': {
			'id': 697, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'buySell':       { 'index': 0, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'quantity':      { 'index': 1, 'type': 'double', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'real'},
				                   ],
				                 },
				'limitPrice':    { 'index': 2, 'type': 'double', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'real'},
				                   ],
				                 },
				'pegType':       { 'index': 3, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffset':     { 'index': 4, 'type': 'double', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'real'},
				                   ],
				                 },
				'pegOffsetType': { 'index': 5, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
			}, 
		}, 
		'IndicationUpdate': {
			'id': 700, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'currentIndication':    { 'index': 0, 'type': 'table', 'tablename': 'IndicationNotification', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'previousIndication':   { 'index': 1, 'type': 'table', 'tablename': 'IndicationNotification', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'transactionalProduct': { 'index': 2, 'type': 'table', 'tablename': 'RdsTransactionalProduct', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'eventData':            { 'index': 3, 'type': 'table', 'tablename': 'EventData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
			}, 
		}, 
		'Instruction': {
			'id': 141, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'instrId':                { 'index': 0, 'type': 'int', }, 
				'tradeList':              { 'index': 1, 'type': 'table', 'tablename': 'Trade', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'collection'},
				                            ],
				                          },
				'instructionElementList': { 'index': 2, 'type': 'table', 'tablename': 'InstructionElement', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'collection'},
				                            ],
				                          },
				'cheetahTradeId':         { 'index': 3, 'type': 'string', }, 
			}, 
		}, 
		'InstructionElement': {
			'id': 142, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'quantity':                      { 'index': 0, 'type': 'double', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'real'},
				                                   ],
				                                 },
				'futuresInstructionElementList': { 'index': 1, 'type': 'table', 'tablename': 'FuturesInstructionElement', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'collection'},
				                                   ],
				                                 },
				'instructionElementId':          { 'index': 2, 'type': 'int', }, 
			}, 
		}, 
		'InternalEventT2EvaluationTrace': {
			'id': 358, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'evaluationPurpose': { 'index': 0, 'type': 'string', }, 
				'internalEventType': { 'index': 1, 'type': 'ubyte', 'enum': 'OmInternalEventType', }, 
				't2EvaluationTrace': { 'index': 2, 'type': 'binary', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'blob'},
				                       ],
				                     },
			}, 
		}, 
		'InventoryLocateItem': {
			'id': 663, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'productId':             { 'index': 0, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '100'},
				                           ],
				                         },
				'traderId':              { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '45'},
				                           ],
				                         },
				'secLendingLocateId':    { 'index': 2, 'type': 'uint', }, 
				'inventoryQuantity':     { 'index': 3, 'type': 'int', }, 
				'locateDetailRemaining': { 'index': 4, 'type': 'int', }, 
				'approvalType':          { 'index': 5, 'type': 'ubyte', 'enum': 'OmApprovalType', }, 
			}, 
		}, 
		'InventoryManagerModeAck': {
			'id': 654, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'currentMode': { 'index': 0, 'type': 'ubyte', 'enum': 'OmCurrentMode', }, 
			}, 
		}, 
		'InventoryManagerModeNotify': {
			'id': 653, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'currentMode':                   { 'index': 0, 'type': 'ubyte', 'enum': 'OmCurrentMode', }, 
				'applicationWasStartedAsActive': { 'index': 1, 'type': 'bool', }, 
			}, 
		}, 
		'InventoryStatusData': {
			'id': 662, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'productId':                    { 'index': 0, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '100'},
				                                  ],
				                                },
				'traderId':                     { 'index': 1, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '45'},
				                                  ],
				                                },
				'inventoryQuantity':            { 'index': 2, 'type': 'int', }, 
				'inventoryRemaining':           { 'index': 3, 'type': 'int', }, 
				'inventoryUpperBound':          { 'index': 4, 'type': 'uint', }, 
				'inventoryLowerBound':          { 'index': 5, 'type': 'uint', }, 
				'replenishQuantity':            { 'index': 6, 'type': 'uint', }, 
				'inventoryPublisherStatus':     { 'index': 7, 'type': 'ubyte', 'enum': 'OmInventoryPublisherStatus', }, 
				'pendingLocateRequestQuantity': { 'index': 8, 'type': 'int', }, 
				'approvalType':                 { 'index': 9, 'type': 'ubyte', 'enum': 'OmApprovalType', }, 
			}, 
		}, 
		'IoiOrderRequest': {
			'id': 156, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'ioiId':             { 'index': 0, 'type': 'string', }, 
				'ioiOrderRequestId': { 'index': 1, 'type': 'string', }, 
				'productIdType':     { 'index': 2, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'productId':         { 'index': 3, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '100'},
				                       ],
				                     },
				'buySell':           { 'index': 4, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'limitPrice':        { 'index': 5, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'quantity':          { 'index': 6, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
			}, 
		}, 
		'IoiOrderRequestAcknowledgement': {
			'id': 157, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'ioiOrderRequestId':     { 'index': 0, 'type': 'string', }, 
				'ioiOrderRequestResult': { 'index': 1, 'type': 'ubyte', 'enum': 'OmIoiOrderRequestResult', }, 
				'quantity':              { 'index': 2, 'type': 'double', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'real'},
				                           ],
				                         },
			}, 
		}, 
		'IoiUpdateCommand': {
			'id': 155, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'ioiId':              { 'index': 1, 'type': 'string', }, 
				'productIdType':      { 'index': 2, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'productId':          { 'index': 3, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '100'},
				                        ],
				                      },
				'buySell':            { 'index': 4, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'limitPrice':         { 'index': 5, 'type': 'double', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'real'},
				                        ],
				                      },
				'quantity':           { 'index': 6, 'type': 'double', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'real'},
				                        ],
				                      },
				'expirationDateTime': { 'index': 7, 'type': 'int', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'datetime'},
				                        ],
				                      },
				'ioiStatus':          { 'index': 8, 'type': 'ubyte', 'enum': 'OmIoiStatus', }, 
			}, 
		}, 
		'L2MarketDataStamp': {
			'id': 118, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'executionPoint':    { 'index': 0, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '16'},
				                       ],
				                     },
				'productId':         { 'index': 1, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '100'},
				                       ],
				                     },
				'productIdType':     { 'index': 2, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'depth1MarketData':  { 'index': 3, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'depth2MarketData':  { 'index': 4, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'depth3MarketData':  { 'index': 5, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'depth4MarketData':  { 'index': 6, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'depth5MarketData':  { 'index': 7, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'slotNumber':        { 'index': 8, 'type': 'int', }, 
				'currency':          { 'index': 9, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '3'},
				                       ],
				                     },
				'lastExecutedPrice': { 'index': 10, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'closePrice':        { 'index': 11, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'volume':            { 'index': 12, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'lastTradeTime':     { 'index': 13, 'type': 'int', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'datetime'},
				                       ],
				                     },
				'dailyHigh':         { 'index': 14, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'dailyLow':          { 'index': 15, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'quoteCondition':    { 'index': 16, 'type': 'ubyte', 'enum': 'OmQuoteCondition', }, 
				'marketDataState':   { 'index': 17, 'type': 'ubyte', 'enum': 'OmMarketDataState', }, 
			}, 
		}, 
		'LastCancelSummary': {
			'id': 523, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'cancelStatus': { 'index': 0, 'type': 'ubyte', 'enum': 'OmCancelStatus', }, 
				'rejectReason': { 'index': 1, 'type': 'table', 'tablename': 'RejectReason', 
				                  'meta-fields': [
					              {'field': 'dictionaryType' , 'value' : 'struct'},
				                  ],
				                },
			}, 
		}, 
		'LastCorrectionSummary': {
			'id': 522, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'correctionStatus': { 'index': 0, 'type': 'ubyte', 'enum': 'OmCorrectionStatus', }, 
				'rejectReason':     { 'index': 1, 'type': 'table', 'tablename': 'RejectReason', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                      ],
				                    },
			}, 
		}, 
		'LegInformation': {
			'id': 536, 
			'version': 8, 
			'publishable': 'true', 
			'columns': {
				'externalReferences':             { 'index': 0, 'type': 'table', 'tablename': 'ExternalReference', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'parentExternalReferences':       { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'legQuantityMultiplier':          { 'index': 2, 'type': 'int', }, 
				'quantity':                       { 'index': 3, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'buySell':                        { 'index': 4, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'sellShort':                      { 'index': 5, 'type': 'bool', }, 
				'sellShortExempt':                { 'index': 6, 'type': 'bool', }, 
				'internalProductId':              { 'index': 7, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '29'},
				                                    ],
				                                  },
				'internalProductIdType':          { 'index': 8, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'productId':                      { 'index': 9, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '100'},
				                                    ],
				                                  },
				'productIdType':                  { 'index': 10, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'clientProductId':                { 'index': 11, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '64'},
				                                    ],
				                                  },
				'positionOpenClose':              { 'index': 12, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'allocationAccounts':             { 'index': 13, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'disableProductLookup':           { 'index': 14, 'type': 'bool', }, 
				'isLocateRequested':              { 'index': 15, 'type': 'bool', }, 
				'locateInformationList':          { 'index': 16, 'type': 'table', 'tablename': 'LocateInformation', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'isOptionStrategyEquityLeg':      { 'index': 17, 'type': 'bool', }, 
				'shouldAdvertiseExecutions':      { 'index': 18, 'type': 'bool', }, 
				'advertisingPolicyParameters':    { 'index': 19, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '20'},
				                                    ],
				                                  },
				'regNmsExemptionType':            { 'index': 20, 'type': 'ubyte', 'enum': 'OmRegNmsExemptionType', }, 
				'regNmsSweepWaived':              { 'index': 21, 'type': 'bool', }, 
				'regNmsSweepWaivedClientUserId':  { 'index': 22, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '30'},
				                                    ],
				                                  },
				'accounts':                       { 'index': 23, 'type': 'table', 'tablename': 'Account', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'preferredMarketMakerId':         { 'index': 24, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'limitPrice':                     { 'index': 25, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'informationBarrierId':           { 'index': 26, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '12'},
				                                    ],
				                                  },
				'parentOrderGsuid':               { 'index': 27, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '29'},
				                                    ],
				                                  },
				'crossMatchingId':                { 'index': 28, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '30'},
				                                    ],
				                                  },
				'crossMatchingExternalReference': { 'index': 29, 'type': 'table', 'tablename': 'ExternalReference', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                    ],
				                                  },
			}, 
		}, 
		'LinkChildOrdersCommand': {
			'id': 499, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':            { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                              ],
				                            },
				'orderId':                  { 'index': 1, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'childOrderIdList':         { 'index': 2, 'type': 'table', 'tablename': 'OrderId', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'verbalAgreementTimestamp': { 'index': 3, 'type': 'int', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'datetime'},
				                              ],
				                            },
			}, 
		}, 
		'LinkContingentOrdersCommand': {
			'id': 424, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':       { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'orderId':             { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'contingentOrderId':   { 'index': 2, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '30'},
				                         ],
				                       },
				'dealValueRatio':      { 'index': 3, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'hedgeValueRatio':     { 'index': 4, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'regNmsSweepWaived':   { 'index': 5, 'type': 'bool', }, 
				'regNmsExemptionType': { 'index': 6, 'type': 'ubyte', 'enum': 'OmRegNmsExemptionType', }, 
				'arbitrageStrategy':   { 'index': 7, 'type': 'ubyte', 'enum': 'OmArbitrageStrategy', }, 
			}, 
		}, 
		'LiquidityBlockingReason': {
			'id': 727, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'liquidityBlockingReason': { 'index': 0, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '32'},
				                             ],
				                           },
			}, 
		}, 
		'LiquidityData': {
			'id': 726, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'liquidityId':                { 'index': 0, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'liquidityType':              { 'index': 1, 'type': 'ubyte', 'enum': 'OmLiquidityType', }, 
				'liquidityParameters':        { 'index': 2, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '1024'},
				                                ],
				                              },
				'excludedClientParties':      { 'index': 3, 'type': 'table', 'tablename': 'ClientParty', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'liquiditySourceReason':      { 'index': 4, 'type': 'ubyte', 'enum': 'OmLiquiditySourceReason', }, 
				'liquiditySourceOwners':      { 'index': 5, 'type': 'table', 'tablename': 'IndicationOwner', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'visibilityGroups':           { 'index': 6, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'liquidityBlockingReasons':   { 'index': 7, 'type': 'table', 'tablename': 'LiquidityBlockingReason', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'targetClientParties':        { 'index': 8, 'type': 'table', 'tablename': 'ClientParty', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'comments':                   { 'index': 9, 'type': 'table', 'tablename': 'Comment', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'internalProductId':          { 'index': 10, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'internalProductIdType':      { 'index': 11, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'buySell':                    { 'index': 12, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'quantity':                   { 'index': 13, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'remainingQuantity':          { 'index': 14, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'orderType':                  { 'index': 15, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'limitPrice':                 { 'index': 16, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'pegType':                    { 'index': 17, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffset':                  { 'index': 18, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'pegOffsetType':              { 'index': 19, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'executionCurrency':          { 'index': 20, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '3'},
				                                ],
				                              },
				'orderCapacity':              { 'index': 21, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'principalType':              { 'index': 22, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'agencyType':                 { 'index': 23, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'liquidityCapacity':          { 'index': 24, 'type': 'ubyte', 'enum': 'OmIndicationCapacity', }, 
				'expirationDateTime':         { 'index': 25, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'capitalCommitType':          { 'index': 26, 'type': 'ubyte', 'enum': 'OmCapitalCommitType', }, 
				'accounts':                   { 'index': 27, 'type': 'table', 'tablename': 'Account', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'liquidityPrimaryStatus':     { 'index': 28, 'type': 'ubyte', 'enum': 'OmLiquidityPrimaryStatus', }, 
				'tradingAlgorithmEngine':     { 'index': 29, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '32'},
				                                ],
				                              },
				'externalReferences':         { 'index': 30, 'type': 'table', 'tablename': 'ExternalReference', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'createDateTime':             { 'index': 31, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'createDateTimeMicroseconds': { 'index': 32, 'type': 'int', }, 
				'completionReason':           { 'index': 33, 'type': 'ubyte', 'enum': 'OmCompletionReason', }, 
				'rejectReason':               { 'index': 34, 'type': 'table', 'tablename': 'RejectReason', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
				'cancelReason':               { 'index': 35, 'type': 'ubyte', 'enum': 'OmCancelReason', }, 
				'dssEventId':                 { 'index': 36, 'type': 'string', }, 
			}, 
		}, 
		'LiquidityNotification': {
			'id': 729, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'version':              { 'index': 0, 'type': 'int', }, 
				'liquidityData':        { 'index': 1, 'type': 'table', 'tablename': 'LiquidityData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'relatedEntityIndexes': { 'index': 2, 'type': 'table', 'tablename': 'RelatedEntityIndex', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
			}, 
		}, 
		'LiquidityUpdate': {
			'id': 728, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'currentLiquidity':     { 'index': 0, 'type': 'table', 'tablename': 'LiquidityNotification', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'previousLiquidity':    { 'index': 1, 'type': 'table', 'tablename': 'LiquidityNotification', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'eventData':            { 'index': 2, 'type': 'table', 'tablename': 'EventData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'transactionalProduct': { 'index': 3, 'type': 'table', 'tablename': 'RdsTransactionalProduct', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
			}, 
		}, 
		'LocateDetails': {
			'id': 370, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'orderId':                { 'index': 0, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'locateRequesterId':      { 'index': 1, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '40'},
				                            ],
				                          },
				'locateRequesterGroupId': { 'index': 2, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '16'},
				                            ],
				                          },
				'quantity':               { 'index': 3, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'locateId':               { 'index': 4, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '50'},
				                            ],
				                          },
			}, 
		}, 
		'LocateInformation': {
			'id': 135, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'locateBroker':   { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '16'},
				                    ],
				                  },
				'locateId':       { 'index': 1, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '50'},
				                    ],
				                  },
				'locateQuantity': { 'index': 2, 'type': 'double', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'real'},
				                    ],
				                  },
			}, 
		}, 
		'LocateRequesterIdPreferenceListMember': {
			'id': 366, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'locateRequesterId': { 'index': 0, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '40'},
				                       ],
				                     },
			}, 
		}, 
		'LogMessage': {
			'id': 148, 
			'version': 2, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'transactionTimeSpan'},
			    {'field': 'rdbMessageKeyPart' , 'value' : 'processInfo/networkAddress,processInfo/instanceName,processInfo/processRole,processInfo/processName,processInfo/runtimeEnvironment'},
			],
			'columns': {
				'processInfo':         { 'index': 0, 'type': 'table', 'tablename': 'ProcessInfo', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'logMessageEntries':   { 'index': 1, 'type': 'table', 'tablename': 'LogMessageEntry', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                         ],
				                       },
				'transactionTimeSpan': { 'index': 2, 'type': 'table', 'tablename': 'TransactionTimeSpan', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
			}, 
		}, 
		'LogMessageEntry': {
			'id': 150, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'messageTimeMicrosecond': { 'index': 0, 'type': 'int', }, 
				'messageTime':            { 'index': 1, 'type': 'int', 
				                            'meta-fields': [
					                        {'field': 'rdbMergeIntoDateTime' , 'value' : 'messageTimeMicrosecond:messageTimestamp'},
					                        {'field': 'dictionaryType' , 'value' : 'datetime'},
				                            ],
				                          },
				'sequenceNumber':         { 'index': 2, 'type': 'int', }, 
				'logSeverity':            { 'index': 3, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '1'},
				                            ],
				                          },
				'logCategory':            { 'index': 4, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '64'},
				                            ],
				                          },
				'messageText':            { 'index': 5, 'type': 'string', }, 
				'messageData':            { 'index': 6, 'type': 'binary', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'blob'},
				                            ],
				                          },
				'tableId':                { 'index': 7, 'type': 'int', }, 
				'threadId':               { 'index': 8, 'type': 'int', }, 
			}, 
		}, 
		'LpPendingRequest': {
			'id': 672, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'inventoryManagerLocateProxyRequestStatus': { 'index': 0, 'type': 'ubyte', 'enum': 'OmLocateProxyRequestStatus', }, 
				'messageId':                                { 'index': 1, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '64'},
				                                              ],
				                                            },
				'productId':                                { 'index': 2, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '100'},
				                                              ],
				                                            },
				'requestedQuantity':                        { 'index': 3, 'type': 'int', }, 
				'traderId':                                 { 'index': 4, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '45'},
				                                              ],
				                                            },
				'shouldResearch':                           { 'index': 5, 'type': 'bool', }, 
				'partialFillAcceptable':                    { 'index': 6, 'type': 'bool', }, 
				'isPosDup':                                 { 'index': 7, 'type': 'bool', }, 
				'isAckRequired':                            { 'index': 8, 'type': 'bool', }, 
				'inventoryUpperBound':                      { 'index': 9, 'type': 'uint', }, 
				'inventoryLowerBound':                      { 'index': 10, 'type': 'uint', }, 
				'replenishQuantity':                        { 'index': 11, 'type': 'uint', }, 
				'orderId':                                  { 'index': 12, 'type': 'string', 
				                                              'meta-fields': [
					                                          {'field': 'maxStringLength' , 'value' : '29'},
				                                              ],
				                                            },
				'sourceSystemType':                         { 'index': 13, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'om2DatastreamName':                        { 'index': 14, 'type': 'string', }, 
				'locateRequesterIdPreferenceList':          { 'index': 15, 'type': 'table', 'tablename': 'LocateRequesterIdPreferenceListMember', 
				                                              'meta-fields': [
					                                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                                              ],
				                                            },
				'approvalType':                             { 'index': 16, 'type': 'ubyte', 'enum': 'OmApprovalType', }, 
			}, 
		}, 
		'MarketClassSessionState': {
			'id': 687, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'marketId':             { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '16'},
				                          ],
				                        },
				'subMarketId':          { 'index': 1, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '16'},
				                          ],
				                        },
				'vikingLineId':         { 'index': 2, 'type': 'string', 'aliases': ['vikingLHId'], 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '64'},
				                          ],
				                        },
				'marketClassification': { 'index': 3, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '32'},
				                          ],
				                        },
				'marketSessionState':   { 'index': 4, 'type': 'ubyte', 'enum': 'OmMarketSessionState', }, 
			}, 
		}, 
		'MarketClassificationSessionState': {
			'id': 313, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'marketClassification': { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '32'},
				                          ],
				                        },
				'marketSessionState':   { 'index': 1, 'type': 'ubyte', 'enum': 'OmMarketSessionState', }, 
			}, 
		}, 
		'MarketDataStamp': {
			'id': 37, 
			'version': 6, 
			'publishable': 'true', 
			'columns': {
				'marketDataType':             { 'index': 0, 'type': 'ubyte', 'enum': 'OmMarketDataType', }, 
				'bidPrice':                   { 'index': 1, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'bidSize':                    { 'index': 2, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'askPrice':                   { 'index': 3, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'askSize':                    { 'index': 4, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'currency':                   { 'index': 5, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '3'},
				                                ],
				                              },
				'lastExecutedPrice':          { 'index': 6, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'lastTradeTickDirection':     { 'index': 7, 'type': 'ubyte', 'enum': 'OmTickDirection', }, 
				'volume':                     { 'index': 8, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'internalProductId':          { 'index': 9, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'internalProductIdType':      { 'index': 10, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'askTickDirection':           { 'index': 11, 'type': 'ubyte', 'enum': 'OmTickDirection', }, 
				'bidTickDirection':           { 'index': 12, 'type': 'ubyte', 'enum': 'OmTickDirection', }, 
				'closePrice':                 { 'index': 13, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'quoteCondition':             { 'index': 14, 'type': 'ubyte', 'enum': 'OmQuoteCondition', }, 
				'accumulatedVolume':          { 'index': 15, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'dailyHigh':                  { 'index': 16, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'dailyLow':                   { 'index': 17, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'lastTradeTime':              { 'index': 18, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'rdbMergeIntoDateTime' , 'value' : 'lastTradeTimeMicrosecond:lastTradeTimestamp'},
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'lastTradeSize':              { 'index': 19, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'projectedDailyVolume':       { 'index': 20, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'secShortSellCircuitBreaker': { 'index': 21, 'type': 'ubyte', 'enum': 'OmSecShortSellCircuitBreaker', }, 
				'executionPoint':             { 'index': 22, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '16'},
				                                ],
				                              },
				'lastTradeTimeMicrosecond':   { 'index': 23, 'type': 'int', }, 
				'tickPublishTime':            { 'index': 24, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'tickPublishTimeMicrosecond': { 'index': 25, 'type': 'int', }, 
				'tickReceiveTime':            { 'index': 26, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'tickReceiveTimeMicrosecond': { 'index': 27, 'type': 'int', }, 
			}, 
		}, 
		'MarketMakerInformation': {
			'id': 525, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'marketMakerExchangeRepresented':             { 'index': 0, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '4'},
				                                                ],
				                                              },
				'marketMakerId':                              { 'index': 1, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '5'},
				                                                ],
				                                              },
				'marketMakerOCCClearingAccount':              { 'index': 2, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '5'},
				                                                ],
				                                              },
				'isMarketMakerClientOptionSpecialistInClass': { 'index': 3, 'type': 'bool', }, 
			}, 
		}, 
		'MarketSessionStateNotification': {
			'id': 417, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                     { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                                       ],
				                                     },
				'marketId':                          { 'index': 1, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '16'},
				                                       ],
				                                     },
				'subMarketId':                       { 'index': 2, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '16'},
				                                       ],
				                                     },
				'marketClassificationSessionStates': { 'index': 3, 'type': 'table', 'tablename': 'MarketClassificationSessionState', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
			}, 
		}, 
		'MatchingBin': {
			'id': 420, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'matchingBin': { 'index': 0, 'type': 'string', 
				                 'meta-fields': [
					             {'field': 'maxStringLength' , 'value' : '5'},
				                 ],
				               },
			}, 
		}, 
		'MatchingEngineStatusData': {
			'id': 175, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'matchingEngineStatus':      { 'index': 0, 'type': 'ubyte', 'enum': 'OmMatchingEngineStatus', }, 
				'matchingEngineStatusScope': { 'index': 1, 'type': 'ubyte', 'enum': 'OmMatchingEngineStatusScope', }, 
				'productId':                 { 'index': 2, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '100'},
				                               ],
				                             },
				'productIdType':             { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'tradingUnitId':             { 'index': 4, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '8'},
				                               ],
				                             },
				'executedNotional':          { 'index': 5, 'type': 'double', 
				                               'meta-fields': [
					                           {'field': 'dictionaryType' , 'value' : 'real'},
				                               ],
				                             },
				'executedNotionalCurrency':  { 'index': 6, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '3'},
				                               ],
				                             },
			}, 
		}, 
		'MatchingEngineStatusEvent': {
			'id': 526, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'matchingEngineStatus':      { 'index': 0, 'type': 'ubyte', 'enum': 'OmMatchingEngineStatus', }, 
				'matchingEngineStatusScope': { 'index': 1, 'type': 'ubyte', 'enum': 'OmMatchingEngineStatusScope', }, 
				'productId':                 { 'index': 2, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '100'},
				                               ],
				                             },
				'productIdType':             { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'tradingUnitId':             { 'index': 4, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '8'},
				                               ],
				                             },
				'executedNotional':          { 'index': 5, 'type': 'double', 
				                               'meta-fields': [
					                           {'field': 'dictionaryType' , 'value' : 'real'},
				                               ],
				                             },
				'executedNotionalCurrency':  { 'index': 6, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '3'},
				                               ],
				                             },
			}, 
		}, 
		'MergeBasketCommand': {
			'id': 505, 
			'version': 13, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':               { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'basketId':                    { 'index': 1, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'basketIdList':                { 'index': 2, 'type': 'table', 'tablename': 'BasketId', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'basketName':                  { 'index': 3, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'basketType':                  { 'index': 4, 'type': 'ubyte', 'enum': 'OmBasketType', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
				                                 ],
				                               },
				'orderCount':                  { 'index': 5, 'type': 'int', }, 
				'creatorId':                   { 'index': 6, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'opaqueBasketData':            { 'index': 7, 'type': 'binary', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'blob'},
				                                 ],
				                               },
				'accessId':                    { 'index': 8, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'externalReferences':          { 'index': 9, 'type': 'table', 'tablename': 'ExternalReference', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'parentExternalReferences':    { 'index': 10, 'type': 'table', 'tablename': 'ExternalReference', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'basketRtlCategory':           { 'index': 11, 'type': 'table', 'tablename': 'BasketRtlCategory', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'calculatedBasketRtlCategory': { 'index': 12, 'type': 'table', 'tablename': 'BasketRtlCategory', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'basketDescription':           { 'index': 13, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '50'},
				                                 ],
				                               },
				'automationStrategy':          { 'index': 14, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '16'},
				                                 ],
				                               },
				'basketCategory':              { 'index': 15, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '16'},
				                                 ],
				                               },
				'visibilityGroups':            { 'index': 16, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'owner':                       { 'index': 17, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'interventionConsent':         { 'index': 18, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
			}, 
		}, 
		'MergeIntoExistingOrderCommand': {
			'id': 542, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'parentOrderIds':               { 'index': 1, 'type': 'table', 'tablename': 'OrderId', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'parentExternalReferences':     { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'orderId':                      { 'index': 3, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'orderExternalReference':       { 'index': 4, 'type': 'table', 'tablename': 'ExternalReference', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'executionAttributionStrategy': { 'index': 5, 'type': 'ubyte', 'enum': 'OmExecutionAttributionStrategy', }, 
			}, 
		}, 
		'MergeOrdersCommand': {
			'id': 333, 
			'version': 24, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'orderIds':                                { 'index': 1, 'type': 'table', 'tablename': 'OrderId', # FIELD HAS BEEN DEPRECATED
				                                             'meta-fields': [
					                                         {'field': 'deprecated' , 'value' : 'true'},
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'parentExternalReferences':                { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'externalReferences':                      { 'index': 3, 'type': 'table', 'tablename': 'ExternalReference', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'buySell':                                 { 'index': 4, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'orderType':                               { 'index': 5, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'timeInForce':                             { 'index': 6, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'limitPrice':                              { 'index': 7, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'notHeld':                                 { 'index': 8, 'type': 'bool', }, 
				'executionPointOverride':                  { 'index': 9, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'executionCurrency':                       { 'index': 10, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '3'},
				                                             ],
				                                           },
				'settlementCurrency':                      { 'index': 11, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '3'},
				                                             ],
				                                           },
				'maxTrancheSize':                          { 'index': 12, 'type': 'double', 'aliases': ['displaySize'], 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'orderCapacity':                           { 'index': 13, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':                              { 'index': 14, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':                           { 'index': 15, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'crossConsent':                            { 'index': 16, 'type': 'ubyte', 'enum': 'OmCrossingOption', }, 
				'productIdType':                           { 'index': 17, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'productId':                               { 'index': 18, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '100'},
				                                             ],
				                                           },
				'productIdMarket':                         { 'index': 19, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '4'},
				                                             ],
				                                           },
				'productIdCountry':                        { 'index': 20, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '2'},
				                                             ],
				                                           },
				'charges':                                 { 'index': 21, 'type': 'table', 'tablename': 'Charge', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'stopPrice':                               { 'index': 22, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'settlementDateCalcMethod':                { 'index': 23, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'settlementDate':                          { 'index': 24, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                             ],
				                                           },
				'startDateTime':                           { 'index': 25, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                             ],
				                                           },
				'expirationDateTime':                      { 'index': 26, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                             ],
				                                           },
				'sellShort':                               { 'index': 27, 'type': 'bool', }, 
				'sellShortExempt':                         { 'index': 28, 'type': 'bool', }, 
				'positionOpenClose':                       { 'index': 29, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'tradingAlgorithm':                        { 'index': 30, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '32'},
				                                             ],
				                                           },
				'capitalCommitQuantity':                   { 'index': 31, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'capitalCommitPrice':                      { 'index': 32, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'protectionType':                          { 'index': 33, 'type': 'ubyte', 'enum': 'OmProtectionType', }, 
				'verbalAgreementTimestamp':                { 'index': 34, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                             ],
				                                           },
				'capitalCommitTime':                       { 'index': 35, 'type': 'int', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                             ],
				                                           },
				'capitalCommitType':                       { 'index': 36, 'type': 'ubyte', 'enum': 'OmCapitalCommitType', }, 
				'comments':                                { 'index': 37, 'type': 'table', 'tablename': 'Comment', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'clientConsents':                          { 'index': 38, 'type': 'ubyte', 'enum': 'OmClientConsents', }, 
				'allOrNone':                               { 'index': 39, 'type': 'bool', }, 
				'customerOeId':                            { 'index': 40, 'type': 'string', 'aliases': ['customerOeid'], 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '32'},
				                                             ],
				                                           },
				'customerUser':                            { 'index': 41, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '32'},
				                                             ],
				                                           },
				'fixLineId':                               { 'index': 42, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '32'},
				                                             ],
				                                           },
				'customerFixAcronym':                      { 'index': 43, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '20'},
				                                             ],
				                                           },
				'allocationAccounts':                      { 'index': 44, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'fixTextInstruction':                      { 'index': 45, 'type': 'string', 'aliases': ['clientAccountName','clientFixAccount'], 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '32'},
				                                             ],
				                                           },
				'contractForDifferences':                  { 'index': 46, 'type': 'bool', }, 
				'smartRouteConsent':                       { 'index': 47, 'type': 'ubyte', 'enum': 'OmSmartRoutingOption', }, 
				'accounts':                                { 'index': 48, 'type': 'table', 'tablename': 'Account', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'siEligibility':                           { 'index': 49, 'type': 'ubyte', 'enum': 'OmSiEligibility', }, 
				'pegOffset':                               { 'index': 50, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'minExecutableQuantity':                   { 'index': 51, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'reportingVenue':                          { 'index': 52, 'type': 'ubyte', 'enum': 'OmReportingVenue', }, 
				'tradingAlgorithmParameters':              { 'index': 53, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '1024'},
				                                             ],
				                                           },
				'clientStarId':                            { 'index': 54, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '10'},
				                                             ],
				                                           },
				'clientFixAcronym':                        { 'index': 55, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '20'},
				                                             ],
				                                           },
				'pegType':                                 { 'index': 56, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffsetType':                           { 'index': 57, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'pegScope':                                { 'index': 58, 'type': 'ubyte', 'enum': 'OmPegScopeType', }, 
				'discretionaryReferencePriceType':         { 'index': 59, 'type': 'ubyte', 'enum': 'OmDiscretionaryReferencePriceType', }, 
				'discretionaryOffset':                     { 'index': 60, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'discretionaryOffsetType':                 { 'index': 61, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'orderbookVisibility':                     { 'index': 62, 'type': 'ubyte', 'enum': 'OmOrderbookVisibilityType', }, 
				'minDiscretionaryQuantity':                { 'index': 63, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'minSpreadConstraint':                     { 'index': 64, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'maxSpreadConstraint':                     { 'index': 65, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'offsetDirectionType':                     { 'index': 66, 'type': 'ubyte', 'enum': 'OmOffsetDirectionType', }, 
				'ioiOrderRequestId':                       { 'index': 67, 'type': 'string', }, 
				'basketId':                                { 'index': 68, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                             'meta-fields': [
					                                         {'field': 'deprecated' , 'value' : 'true'},
					                                         {'field': 'maxStringLength' , 'value' : '29'},
				                                             ],
				                                           },
				'ptOrderType':                             { 'index': 69, 'type': 'ubyte', 'enum': 'OmPtOrderType', }, 
				'isSalesManagedOrder':                     { 'index': 70, 'type': 'bool', }, 
				'isTraderAssignmentOrder':                 { 'index': 71, 'type': 'bool', }, 
				'isTraderManagedOrder':                    { 'index': 72, 'type': 'bool', }, 
				'isInternallyRoutableOrder':               { 'index': 73, 'type': 'bool', }, 
				'creatorId':                               { 'index': 74, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                             'meta-fields': [
					                                         {'field': 'deprecated' , 'value' : 'true'},
					                                         {'field': 'maxStringLength' , 'value' : '29'},
				                                             ],
				                                           },
				'subExecutionPointOverride':               { 'index': 75, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'clientProductId':                         { 'index': 76, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '64'},
				                                             ],
				                                           },
				'isTradingChildOrder':                     { 'index': 77, 'type': 'bool', }, 
				'executionAttributionStrategy':            { 'index': 78, 'type': 'ubyte', 'enum': 'OmExecutionAttributionStrategy', }, 
				'accessId':                                { 'index': 79, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '29'},
				                                             ],
				                                           },
				'autoForward':                             { 'index': 80, 'type': 'bool', }, 
				'accessIdType':                            { 'index': 81, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'partOfProgram':                           { 'index': 82, 'type': 'bool', }, 
				'arbitrageStrategy':                       { 'index': 83, 'type': 'ubyte', 'enum': 'OmArbitrageStrategy', }, 
				'algorithmicIndicator':                    { 'index': 84, 'type': 'ubyte', 'enum': 'OmAlgorithmicIndicator', }, 
				'trancheSizeDisplayRange':                 { 'index': 85, 'type': 'double', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'real'},
				                                             ],
				                                           },
				'shouldIndicateOrder':                     { 'index': 86, 'type': 'bool', }, 
				'indicationQuantity':                      { 'index': 87, 'type': 'int', }, 
				'tradeViaInternalAlgorithm':               { 'index': 88, 'type': 'bool', }, 
				'basketExternalReferences':                { 'index': 89, 'type': 'table', 'tablename': 'ExternalReference', # FIELD HAS BEEN DEPRECATED
				                                             'meta-fields': [
					                                         {'field': 'deprecated' , 'value' : 'true'},
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'sigmaAlgorithm':                          { 'index': 90, 'type': 'ubyte', 'enum': 'OmSigmaAlgorithm', }, 
				'sigmaAlgorithmParameters':                { 'index': 91, 'type': 'table', 'tablename': 'SigmaAlgorithmParameter', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'primaryBasketExternalReference':          { 'index': 92, 'type': 'table', 'tablename': 'ExternalReference', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'secondaryBasketExternalReferences':       { 'index': 93, 'type': 'table', 'tablename': 'BasketExternalReference', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'shouldAdvertiseExecutions':               { 'index': 94, 'type': 'bool', }, 
				'secShortSellExemptionReason':             { 'index': 95, 'type': 'ubyte', 'enum': 'OmSecShortSellExemptionReason', }, 
				'indicationPolicyParameters':              { 'index': 96, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '20'},
				                                             ],
				                                           },
				'advertisingPolicyParameters':             { 'index': 97, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '20'},
				                                             ],
				                                           },
				'capitalCommitCategory':                   { 'index': 98, 'type': 'ubyte', 'enum': 'OmCapitalCommitCategory', }, 
				'opaqueOrderData':                         { 'index': 99, 'type': 'binary', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'blob'},
				                                             ],
				                                           },
				'opaqueOrderDataItemsToRemove':            { 'index': 100, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'opaqueOrderDataItemsToSet':               { 'index': 101, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'isLocateRequested':                       { 'index': 102, 'type': 'bool', }, 
				'doNotAutoAcceptParentOnSplit':            { 'index': 103, 'type': 'bool', }, 
				'parentOrderIds':                          { 'index': 104, 'type': 'table', 'tablename': 'OrderId', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'interventionConsent':                     { 'index': 105, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
				'flowIdentifier':                          { 'index': 106, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'sourceFlowIdentifier':                    { 'index': 107, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'destinationFlowIdentifier':               { 'index': 108, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'primaryPartyType':                        { 'index': 109, 'type': 'ubyte', 'enum': 'OmPrimaryPartyType', }, 
				'automationStrategy':                      { 'index': 110, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '16'},
				                                             ],
				                                           },
				'buyToCover':                              { 'index': 111, 'type': 'bool', }, 
				'clientAccessId':                          { 'index': 112, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '29'},
				                                             ],
				                                           },
				'clientAlgorithmCategory':                 { 'index': 113, 'type': 'ubyte', 'enum': 'OmClientAlgorithmCategory', }, 
				'clientConsentsName':                      { 'index': 114, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '30'},
				                                             ],
				                                           },
				'clientCustomerPartyType':                 { 'index': 115, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'clientLegalEntityId':                     { 'index': 116, 'type': 'int', }, 
				'clientOrderCapacity':                     { 'index': 117, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'consolidatedRegulatoryCode':              { 'index': 118, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'customerOeIdType':                        { 'index': 119, 'type': 'ubyte', 'enum': 'OmOrganizationalEntityIdType', }, 
				'customerPartyType':                       { 'index': 120, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'isCorporateBuyBackOrder':                 { 'index': 121, 'type': 'bool', }, 
				'isCrossIntentOrder':                      { 'index': 122, 'type': 'bool', }, 
				'isSolicitedOrder':                        { 'index': 123, 'type': 'bool', }, 
				'isSpecialLimitOrder':                     { 'index': 124, 'type': 'bool', }, 
				'locateInformationList':                   { 'index': 125, 'type': 'table', 'tablename': 'LocateInformation', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'locateRequesterIdPreferenceList':         { 'index': 126, 'type': 'table', 'tablename': 'LocateRequesterIdPreferenceListMember', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'orderCreationType':                       { 'index': 127, 'type': 'ubyte', 'enum': 'OmOrderCreationType', }, 
				'owner':                                   { 'index': 128, 'type': 'string', 
				                                             'meta-fields': [
					                                         {'field': 'maxStringLength' , 'value' : '32'},
				                                             ],
				                                           },
				'parameterizedLimitPrice':                 { 'index': 129, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'principalCapacityPrimaryAccountOverride': { 'index': 130, 'type': 'table', 'tablename': 'Account', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'sendWithheld':                            { 'index': 131, 'type': 'bool', }, 
				'sourceRegulatoryReportDomain':            { 'index': 132, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'sourceSystemDoesBooking':                 { 'index': 133, 'type': 'bool', }, 
				'visibilityGroups':                        { 'index': 134, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'visibilityUserList':                      { 'index': 135, 'type': 'table', 'tablename': 'VisibilityUserId', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'referenceCharges':                        { 'index': 136, 'type': 'table', 'tablename': 'Charge', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                                             ],
				                                           },
				'clientPrincipalType':                     { 'index': 137, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
			}, 
		}, 
		'MergedParentOrderSummary': {
			'id': 710, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'orderId':  { 'index': 0, 'type': 'string', 
				              'meta-fields': [
					          {'field': 'maxStringLength' , 'value' : '29'},
				              ],
				            },
				'quantity': { 'index': 1, 'type': 'double', 
				              'meta-fields': [
					          {'field': 'dictionaryType' , 'value' : 'real'},
				              ],
				            },
			}, 
		}, 
		'Message': {
			'id': 458, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'rmsMessageItem': { 'index': 0, 'type': 'table', 'tablename': 'MessageItem', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'struct'},
				                    ],
				                  },
			}, 
		}, 
		'MessageItem': {
			'id': 457, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'rmsRuleBaseSnapshot': { 'index': 0, 'type': 'table', 'tablename': 'RuleBaseSnapshot', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'rmsRuleSetSnapshot':  { 'index': 1, 'type': 'table', 'tablename': 'RuleSetSnapshot', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'rmsRuleSnapshot':     { 'index': 2, 'type': 'table', 'tablename': 'RuleSnapshot', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'rmsRule':             { 'index': 3, 'type': 'table', 'tablename': 'Rule', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'rmsRuleXml':          { 'index': 4, 'type': 'table', 'tablename': 'RuleXml', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'rmsRuleSet':          { 'index': 5, 'type': 'table', 'tablename': 'RuleSet', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'rmsSnapshotHistory':  { 'index': 6, 'type': 'table', 'tablename': 'SnapshotHistory', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'rmsNextIds':          { 'index': 7, 'type': 'table', 'tablename': 'NextIds', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
			}, 
		}, 
		'MessageWrapperData': {
			'id': 71, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'version':                       { 'index': 0, 'type': 'int', }, 
				'messageData':                   { 'index': 1, 'type': 'binary', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'blob'},
				                                   ],
				                                 },
				'messageFormat':                 { 'index': 2, 'type': 'ubyte', 'enum': 'OmMessageFormat', }, 
				'sequenceName':                  { 'index': 3, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '50'},
				                                   ],
				                                 },
				'sequenceNumber':                { 'index': 4, 'type': 'int', }, 
				'tableId':                       { 'index': 5, 'type': 'int', }, 
				'repositoryAction':              { 'index': 6, 'type': 'ubyte', 'enum': 'OmRepositoryActionType', }, 
				'referencedSequenceName':        { 'index': 7, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '50'},
				                                   ],
				                                 },
				'referencedSequenceNumber':      { 'index': 8, 'type': 'int', }, 
				'serviceType':                   { 'index': 9, 'type': 'ubyte', 'enum': 'OmServiceType', }, 
				'shouldIndex':                   { 'index': 10, 'type': 'bool', }, 
				'messageFormatStructDefinition': { 'index': 11, 'type': 'uint', }, 
				'messageTime':                   { 'index': 12, 'type': 'int', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                   ],
				                                 },
				'messageTimeMicrosecond':        { 'index': 13, 'type': 'int', }, 
			}, 
		}, 
		'MessageWrapperIndex': {
			'id': 162, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'sequenceName':  { 'index': 0, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '50'},
				                   ],
				                 },
				'messageId':     { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '64'},
				                   ],
				                 },
				'serviceType':   { 'index': 2, 'type': 'ubyte', 'enum': 'OmServiceType', }, 
				'messageFormat': { 'index': 3, 'type': 'ubyte', 'enum': 'OmMessageFormat', }, 
				'tableId':       { 'index': 4, 'type': 'int', }, 
			}, 
		}, 
		'MifidAttributes': {
			'id': 132, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'euroValue':         { 'index': 0, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'dollarValue':       { 'index': 1, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'siEligibility':     { 'index': 2, 'type': 'ubyte', 'enum': 'OmSiEligibility', }, 
				'mifidRetailClient': { 'index': 3, 'type': 'bool', }, 
			}, 
		}, 
		'ModeHandshake': {
			'id': 65, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'currentMode':                                { 'index': 0, 'type': 'ubyte', 'enum': 'OmCurrentMode', }, 
				'startupHandshakeHeartbeatRequestInterval':   { 'index': 1, 'type': 'int', }, 
				'startupHandshakeMaximumConnectionFrequency': { 'index': 2, 'type': 'int', }, 
				'startupHandshakeConnectionFailureInterval':  { 'index': 3, 'type': 'int', }, 
				'startupHandshakeProtocolUsesCommitId':       { 'index': 4, 'type': 'bool', }, 
				'commitId':                                   { 'index': 5, 'type': 'int', }, 
			}, 
		}, 
		'NetworkAddress': {
			'id': 36, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'networkAddress': { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '25'},
				                    ],
				                  },
			}, 
		}, 
		'NextIds': {
			'id': 461, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'rbid':          { 'index': 0, 'type': 'int', }, 
				'rid':           { 'index': 1, 'type': 'int', }, 
				'rsid':          { 'index': 2, 'type': 'int', }, 
				'rmsRegionName': { 'index': 3, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '3'},
				                   ],
				                 },
			}, 
		}, 
		'Notification': {
			'id': 68, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'sequenceNumber':  { 'index': 0, 'type': 'int', }, 
				'businessObjects': { 'index': 1, 'type': 'table', 'tablename': 'BusinessObject', # FIELD HAS BEEN DEPRECATED
				                     'meta-fields': [
					                 {'field': 'deprecated' , 'value' : 'true'},
					                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                     ],
				                   },
			}, 
		}, 
		'NotificationIdSequenceNumberData': {
			'id': 90, 
			'version': 5, 
			'publishable': 'true', 
			'columns': {
				'notificationId':           { 'index': 0, 'type': 'int', }, 
				'sequenceName':             { 'index': 1, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                              'meta-fields': [
					                          {'field': 'deprecated' , 'value' : 'true'},
					                          {'field': 'maxStringLength' , 'value' : '50'},
				                              ],
				                            },
				'sequenceNumber':           { 'index': 2, 'type': 'int', }, 
				'referencedSequenceName':   { 'index': 3, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                              'meta-fields': [
					                          {'field': 'deprecated' , 'value' : 'true'},
					                          {'field': 'maxStringLength' , 'value' : '50'},
				                              ],
				                            },
				'referencedSequenceNumber': { 'index': 4, 'type': 'int', }, 
				'messageStatus':            { 'index': 5, 'type': 'ubyte', 'enum': 'OmMessageStatus', # FIELD HAS BEEN DEPRECATED
				                              'meta-fields': [
					                          {'field': 'deprecated' , 'value' : 'true'},
				                              ],
				                            },
				'messageCreationTime':      { 'index': 6, 'type': 'int', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'datetime'},
				                              ],
				                            },
				'sequenceId':               { 'index': 7, 'type': 'int', }, 
				'referencedSequenceId':     { 'index': 8, 'type': 'int', }, 
			}, 
		}, 
		'NotificationMsgIndex': {
			'id': 89, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'notificationId': { 'index': 0, 'type': 'int', }, 
				'offSet':         { 'index': 1, 'type': 'int', }, 
				'fileId':         { 'index': 2, 'type': 'int', }, 
			}, 
		}, 
		'NotifySystem': {
			'id': 161, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'systemName': { 'index': 0, 'type': 'string', 
				                'meta-fields': [
					            {'field': 'maxStringLength' , 'value' : '32'},
				                ],
				              },
				'systemType': { 'index': 1, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
			}, 
		}, 
		'OmaBusinessObject': {
			'id': 401, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'repositoryAction':                   { 'index': 0, 'type': 'ubyte', 'enum': 'OmRepositoryActionType', }, 
				'newVersion':                         { 'index': 1, 'type': 'uint', }, 
				'oldVersion':                         { 'index': 2, 'type': 'uint', }, 
				'omaDatastore':                       { 'index': 3, 'type': 'table', 'tablename': 'OmaDatastore', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'omaNotification':                    { 'index': 4, 'type': 'table', 'tablename': 'OmaNotification', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'omaExternalTags':                    { 'index': 5, 'type': 'table', 'tablename': 'OmaExternalTags', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'omaLatestVersion':                   { 'index': 6, 'type': 'table', 'tablename': 'OmaLatestVersion', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'omaNonCommitTransaction':            { 'index': 7, 'type': 'table', 'tablename': 'OmaNonCommitTransaction', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'sequencedMessageData':               { 'index': 8, 'type': 'table', 'tablename': 'SequencedMessageData', # FIELD HAS BEEN DEPRECATED
				                                        'meta-fields': [
					                                    {'field': 'deprecated' , 'value' : 'true'},
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'eventData':                          { 'index': 9, 'type': 'table', 'tablename': 'EventData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'uniqueIdData':                       { 'index': 10, 'type': 'table', 'tablename': 'UniqueIdData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'sequencedMessageNotificationStatus': { 'index': 11, 'type': 'table', 'tablename': 'SequencedMessageNotificationStatus', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'receivedMessageId':                  { 'index': 12, 'type': 'table', 'tablename': 'ReceivedMessageId', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'messageWrapperData':                 { 'index': 13, 'type': 'table', 'tablename': 'MessageWrapperData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
			}, 
		}, 
		'OmaDatastore': {
			'id': 403, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'tag':                  { 'index': 0, 'type': 'string', 'aliases': ['externalObjectId'], 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '200'},
				                          ],
				                        },
				'version':              { 'index': 1, 'type': 'int', }, 
				'objectType':           { 'index': 2, 'type': 'int', }, 
				'payloadSize':          { 'index': 3, 'type': 'int', }, 
				'payload':              { 'index': 4, 'type': 'binary', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'blob'},
				                          ],
				                        },
				'payloadFormatVersion': { 'index': 5, 'type': 'uint', }, 
			}, 
		}, 
		'OmaExternalTags': {
			'id': 404, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'tag':         { 'index': 0, 'type': 'string', 'aliases': ['externalObjectId'], 
				                 'meta-fields': [
					             {'field': 'maxStringLength' , 'value' : '200'},
				                 ],
				               },
				'version':     { 'index': 1, 'type': 'int', }, 
				'payloadSize': { 'index': 2, 'type': 'int', }, 
				'payload':     { 'index': 3, 'type': 'binary', 
				                 'meta-fields': [
					             {'field': 'dictionaryType' , 'value' : 'blob'},
				                 ],
				               },
			}, 
		}, 
		'OmaLatestVersion': {
			'id': 405, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'tag':        { 'index': 0, 'type': 'string', 'aliases': ['externalObjectId'], 
				                'meta-fields': [
					            {'field': 'maxStringLength' , 'value' : '200'},
				                ],
				              },
				'version':    { 'index': 1, 'type': 'int', }, 
				'objectType': { 'index': 2, 'type': 'int', }, 
			}, 
		}, 
		'OmaNonCommitTransaction': {
			'id': 406, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'userName':    { 'index': 0, 'type': 'string', }, 
				'payloadSize': { 'index': 1, 'type': 'int', }, 
				'payload':     { 'index': 2, 'type': 'binary', 
				                 'meta-fields': [
					             {'field': 'dictionaryType' , 'value' : 'blob'},
				                 ],
				               },
			}, 
		}, 
		'OmaNotification': {
			'id': 402, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'tag1':                               { 'index': 0, 'type': 'string', }, 
				'version1':                           { 'index': 1, 'type': 'int', }, 
				'tag2':                               { 'index': 2, 'type': 'string', }, 
				'version2':                           { 'index': 3, 'type': 'int', }, 
				'notifyType':                         { 'index': 4, 'type': 'int', }, 
				'commitId':                           { 'index': 5, 'type': 'int', }, 
				'datastoreId':                        { 'index': 6, 'type': 'int', }, 
				'omaNotificationDataOverride':        { 'index': 7, 'type': 'table', 'tablename': 'OmaNotificationDataOverride', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'sequencedMessageNotificationStatus': { 'index': 8, 'type': 'table', 'tablename': 'SequencedMessageNotificationStatus', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
			}, 
		}, 
		'OmaNotificationDataOverride': {
			'id': 407, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'payloadSize':          { 'index': 0, 'type': 'int', }, 
				'payload':              { 'index': 1, 'type': 'binary', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'blob'},
				                          ],
				                        },
				'payloadFormatVersion': { 'index': 2, 'type': 'uint', }, 
			}, 
		}, 
		'OmaTransaction': {
			'id': 400, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sequenceNumber':     { 'index': 0, 'type': 'int', }, 
				'omaBusinessObjects': { 'index': 1, 'type': 'table', 'tablename': 'OmaBusinessObject', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
			}, 
		}, 
		'OpaqueOrderDataItem': {
			'id': 462, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'opaqueOrderDataType': { 'index': 0, 'type': 'ubyte', 'enum': 'OmOpaqueOrderDataType', }, 
				'opaqueOrderData':     { 'index': 1, 'type': 'binary', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'blob'},
				                         ],
				                       },
			}, 
		}, 
		'OrderBlockData': {
			'id': 327, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'tradingUnitId':         { 'index': 0, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '8'},
				                           ],
				                         },
				'accessId':              { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'productInstrumentType': { 'index': 2, 'type': 'ubyte', 'enum': 'OmProductInstrumentType', }, 
				'buySell':               { 'index': 3, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'sellShort':             { 'index': 4, 'type': 'bool', }, 
				'sellShortExempt':       { 'index': 5, 'type': 'bool', }, 
				'orderBlockAction':      { 'index': 6, 'type': 'ubyte', 'enum': 'OmOrderBlockActionType', }, 
				'primaryPartyType':      { 'index': 7, 'type': 'ubyte', 'enum': 'OmPrimaryPartyType', }, 
				'internalProductId':     { 'index': 8, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'internalProductIdType': { 'index': 9, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
			}, 
		}, 
		'OrderCorrection': {
			'id': 352, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'orderId':               { 'index': 0, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'diffToPrevious':        { 'index': 1, 'type': 'table', 'tablename': 'OrderInstructionData', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'oldExternalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
			}, 
		}, 
		'OrderExecutionUpdate': {
			'id': 124, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'currentOrder':         { 'index': 0, 'type': 'table', 'tablename': 'OrderNotification', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'previousOrder':        { 'index': 1, 'type': 'table', 'tablename': 'OrderNotification', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'currentExecution':     { 'index': 2, 'type': 'table', 'tablename': 'ExecutionNotification', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'previousExecution':    { 'index': 3, 'type': 'table', 'tablename': 'ExecutionNotification', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'transactionalProduct': { 'index': 4, 'type': 'table', 'tablename': 'RdsTransactionalProduct', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'marketDataStamp':      { 'index': 5, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'eventData':            { 'index': 6, 'type': 'table', 'tablename': 'EventData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'orderHistorySummary':  { 'index': 7, 'type': 'table', 'tablename': 'OrderHistorySummary', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
			}, 
		}, 
		'OrderGroupData': {
			'id': 724, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'orderGroupId':                  { 'index': 0, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '30'},
				                                   ],
				                                 },
				'orderGroupCount':               { 'index': 1, 'type': 'int', }, 
				'orderGroupProductCount':        { 'index': 2, 'type': 'int', }, 
				'orderGroupTradingAccountCount': { 'index': 3, 'type': 'int', }, 
			}, 
		}, 
		'OrderHistorySummary': {
			'id': 521, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'orderId':                    { 'index': 0, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'lastEventTime':              { 'index': 1, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'lastEventTimeMicrosecond':   { 'index': 2, 'type': 'int', }, 
				'lastCorrectionSummary':      { 'index': 3, 'type': 'table', 'tablename': 'LastCorrectionSummary', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
				'lastCancelSummary':          { 'index': 4, 'type': 'table', 'tablename': 'LastCancelSummary', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
				'minExecutionPrice':          { 'index': 5, 'type': 'double', # FIELD HAS BEEN DEPRECATED
				                                'meta-fields': [
					                            {'field': 'deprecated' , 'value' : 'true'},
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'maxExecutionPrice':          { 'index': 6, 'type': 'double', # FIELD HAS BEEN DEPRECATED
				                                'meta-fields': [
					                            {'field': 'deprecated' , 'value' : 'true'},
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'executionCount':             { 'index': 7, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'orderAcceptTime':            { 'index': 8, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'orderAcceptTimeMicrosecond': { 'index': 9, 'type': 'int', }, 
			}, 
		}, 
		'OrderId': {
			'id': 101, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'orderId': { 'index': 0, 'type': 'string', 
				             'meta-fields': [
					         {'field': 'maxStringLength' , 'value' : '29'},
				             ],
				           },
			}, 
		}, 
		'OrderInstructionData': {
			'id': 22, 
			'version': 200, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'orders_orderInstructionData_flowSpecificCanada,orders_orderInstructionData_flowSpecificAustralia,orders_orderInstructionData_flowSpecificSEF'},
			],
			'columns': {
				'orderId':                                        { 'index': 0, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'buySell':                                        { 'index': 1, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'quantity':                                       { 'index': 2, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'orderType':                                      { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'internalProductId':                              { 'index': 4, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'internalProductIdType':                          { 'index': 5, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'timeInForce':                                    { 'index': 6, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'limitPrice':                                     { 'index': 7, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'notHeld':                                        { 'index': 8, 'type': 'bool', }, 
				'executionPointOverride':                         { 'index': 9, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'executionCurrency':                              { 'index': 10, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '3'},
				                                                    ],
				                                                  },
				'settlementCurrency':                             { 'index': 11, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '3'},
				                                                    ],
				                                                  },
				'maxTrancheSize':                                 { 'index': 12, 'type': 'double', 'aliases': ['displaySize'], 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'orderCapacity':                                  { 'index': 13, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':                                     { 'index': 14, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':                                  { 'index': 15, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'crossConsent':                                   { 'index': 16, 'type': 'ubyte', 'enum': 'OmCrossingOption', }, 
				'productIdType':                                  { 'index': 17, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'productId':                                      { 'index': 18, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '100'},
				                                                    ],
				                                                  },
				'productIdMarket':                                { 'index': 19, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '4'},
				                                                    ],
				                                                  },
				'productIdCountry':                               { 'index': 20, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '2'},
				                                                    ],
				                                                  },
				'charges':                                        { 'index': 21, 'type': 'table', 'tablename': 'Charge', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'stopPrice':                                      { 'index': 22, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'settlementDateCalcMethod':                       { 'index': 23, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'settlementDate':                                 { 'index': 24, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'startDateTime':                                  { 'index': 25, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'expirationDateTime':                             { 'index': 26, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'sellShort':                                      { 'index': 27, 'type': 'bool', }, 
				'sellShortExempt':                                { 'index': 28, 'type': 'bool', }, 
				'positionOpenClose':                              { 'index': 29, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'tradingAlgorithm':                               { 'index': 30, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'capitalCommitQuantity':                          { 'index': 31, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'capitalCommitPrice':                             { 'index': 32, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'protectionType':                                 { 'index': 33, 'type': 'ubyte', 'enum': 'OmProtectionType', }, 
				'verbalAgreementTimestamp':                       { 'index': 34, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'capitalCommitTime':                              { 'index': 35, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'capitalCommitType':                              { 'index': 36, 'type': 'ubyte', 'enum': 'OmCapitalCommitType', }, 
				'comments':                                       { 'index': 37, 'type': 'table', 'tablename': 'Comment', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'clientConsents':                                 { 'index': 38, 'type': 'ubyte', 'enum': 'OmClientConsents', }, 
				'allOrNone':                                      { 'index': 39, 'type': 'bool', }, 
				'fixLineId':                                      { 'index': 40, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'accounts':                                       { 'index': 41, 'type': 'table', 'tablename': 'Account', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'allocationAccounts':                             { 'index': 42, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'ignoreOddLotCheck':                              { 'index': 43, 'type': 'bool', }, 
				'ignoreAggressionCheck':                          { 'index': 44, 'type': 'bool', }, 
				'contractForDifferences':                         { 'index': 45, 'type': 'bool', }, 
				'operationsDesk':                                 { 'index': 46, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'serviceOffering':                                { 'index': 47, 'type': 'ubyte', 'enum': 'OmServiceOffering', }, 
				'bookingFlowStyle':                               { 'index': 48, 'type': 'ubyte', 'enum': 'OmBookingFlowStyle', }, 
				'eligibleForAutoCombine':                         { 'index': 49, 'type': 'bool', }, 
				'isElectronicBooking':                            { 'index': 50, 'type': 'bool', }, 
				'smartRouteConsent':                              { 'index': 51, 'type': 'ubyte', 'enum': 'OmSmartRoutingOption', }, 
				'siEligibility':                                  { 'index': 52, 'type': 'ubyte', 'enum': 'OmSiEligibility', }, 
				'pegOffset':                                      { 'index': 53, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minExecutableQuantity':                          { 'index': 54, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'reportingVenue':                                 { 'index': 55, 'type': 'ubyte', 'enum': 'OmReportingVenue', }, 
				'clientParty':                                    { 'index': 56, 'type': 'table', 'tablename': 'ClientParty', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'destinationParty':                               { 'index': 57, 'type': 'table', 'tablename': 'DestinationParty', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'pegType':                                        { 'index': 58, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffsetType':                                  { 'index': 59, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'pegScope':                                       { 'index': 60, 'type': 'ubyte', 'enum': 'OmPegScopeType', }, 
				'discretionaryReferencePriceType':                { 'index': 61, 'type': 'ubyte', 'enum': 'OmDiscretionaryReferencePriceType', }, 
				'discretionaryOffset':                            { 'index': 62, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'discretionaryOffsetType':                        { 'index': 63, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'orderbookVisibility':                            { 'index': 64, 'type': 'ubyte', 'enum': 'OmOrderbookVisibilityType', }, 
				'clientOrderQuantity':                            { 'index': 65, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'marketDataStamps':                               { 'index': 66, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'sourceSystemName':                               { 'index': 67, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'sourceSystemType':                               { 'index': 68, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'destinationSystemName':                          { 'index': 69, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'destinationSystemType':                          { 'index': 70, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'minDiscretionaryQuantity':                       { 'index': 71, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minSpreadConstraint':                            { 'index': 72, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'maxSpreadConstraint':                            { 'index': 73, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'offsetDirectionType':                            { 'index': 74, 'type': 'ubyte', 'enum': 'OmOffsetDirectionType', }, 
				'dealingCapacity':                                { 'index': 75, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'basketId':                                       { 'index': 76, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'ptOrderType':                                    { 'index': 77, 'type': 'ubyte', 'enum': 'OmPtOrderType', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'isSalesManagedOrder':                            { 'index': 78, 'type': 'bool', }, 
				'isTraderAssignmentOrder':                        { 'index': 79, 'type': 'bool', }, 
				'isTraderManagedOrder':                           { 'index': 80, 'type': 'bool', }, 
				'isInternallyRoutableOrder':                      { 'index': 81, 'type': 'bool', }, 
				'creatorId':                                      { 'index': 82, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'clientProductId':                                { 'index': 83, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '64'},
				                                                    ],
				                                                  },
				'subExecutionPointOverride':                      { 'index': 84, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'opaqueOrderData':                                { 'index': 85, 'type': 'binary', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'dictionaryType' , 'value' : 'blob'},
				                                                    ],
				                                                  },
				'isTradingChildOrder':                            { 'index': 86, 'type': 'bool', }, 
				'executionAttributionStrategy':                   { 'index': 87, 'type': 'ubyte', 'enum': 'OmExecutionAttributionStrategy', }, 
				'accessId':                                       { 'index': 88, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'priceAccuracy':                                  { 'index': 89, 'type': 'int', }, 
				'priceAccuracyNet':                               { 'index': 90, 'type': 'int', }, 
				'tradingPhase':                                   { 'index': 91, 'type': 'ubyte', 'enum': 'OmTradingPhase', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'liquidityIndicator':                             { 'index': 92, 'type': 'ubyte', 'enum': 'OmLiquidityIndicatorType', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'routingStrategy':                                { 'index': 93, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'clearingMemberId':                               { 'index': 94, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'doNotIncrease':                                  { 'index': 95, 'type': 'bool', }, 
				'doNotReduce':                                    { 'index': 96, 'type': 'bool', }, 
				'interMarketSweep':                               { 'index': 97, 'type': 'bool', }, 
				'destinationMarketOnly':                          { 'index': 98, 'type': 'bool', }, 
				'responseHandlerType':                            { 'index': 99, 'type': 'ubyte', 'enum': 'OmResponseHandlerType', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'imbalanceOffsetIndicator':                       { 'index': 100, 'type': 'bool', }, 
				'buyToCover':                                     { 'index': 101, 'type': 'bool', }, 
				'orderRegulatoryInformation':                     { 'index': 102, 'type': 'table', 'tablename': 'OrderRegulatoryInformation', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'locateInformationList':                          { 'index': 103, 'type': 'table', 'tablename': 'LocateInformation', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'complianceOrderId':                              { 'index': 104, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '200'},
				                                                    ],
				                                                  },
				'accessIdType':                                   { 'index': 105, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'marketParticipantId':                            { 'index': 106, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '4'},
				                                                    ],
				                                                  },
				'clientExecutionService':                         { 'index': 107, 'type': 'ubyte', 'enum': 'OmClientExecutionService', }, 
				'vikingLineId':                                   { 'index': 108, 'type': 'string', 'aliases': ['vikingLHId'], 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '64'},
				                                                    ],
				                                                  },
				'tradingAlgorithmParameters':                     { 'index': 109, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '1024'},
				                                                    ],
				                                                  },
				'tradeViaInternalAlgorithm':                      { 'index': 110, 'type': 'bool', }, 
				'isShadowOrder':                                  { 'index': 111, 'type': 'bool', }, 
				'trancheSizeDisplayRange':                        { 'index': 112, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'shouldIndicateOrder':                            { 'index': 113, 'type': 'bool', }, 
				'indicationQuantity':                             { 'index': 114, 'type': 'int', }, 
				'ignoreImbalanceCheck':                           { 'index': 115, 'type': 'bool', }, 
				'clientProductIdSuffix':                          { 'index': 116, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '8'},
				                                                    ],
				                                                  },
				'isOddLot':                                       { 'index': 117, 'type': 'bool', }, 
				'aggUnitName':                                    { 'index': 118, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'isIrrevocableOrder':                             { 'index': 119, 'type': 'bool', }, 
				'regulatoryReportDeskId':                         { 'index': 120, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'sourceSystemDoesBooking':                        { 'index': 121, 'type': 'bool', }, 
				'interventionConsent':                            { 'index': 122, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
				'sourceRegulatoryDeskId':                         { 'index': 123, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'sourceBusinessUnit':                             { 'index': 124, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'sourceEntityIndicator':                          { 'index': 125, 'type': 'ubyte', 'enum': 'OmSourceEntityIndicator', }, 
				'clientListId':                                   { 'index': 126, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '128'},
				                                                    ],
				                                                  },
				'locateRequesterId':                              { 'index': 127, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '40'},
				                                                    ],
				                                                  },
				'locateDetailsList':                              { 'index': 128, 'type': 'table', 'tablename': 'LocateDetails', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'parameterizedPrice':                             { 'index': 129, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isGsamAdvisory':                                 { 'index': 130, 'type': 'bool', }, 
				'isSolicitedOrder':                               { 'index': 131, 'type': 'bool', }, 
				'isPartialOutEligible':                           { 'index': 132, 'type': 'bool', }, 
				'brokerBillingType':                              { 'index': 133, 'type': 'ubyte', 'enum': 'OmBrokerBillingType', }, 
				'restrictedTradingListOverride':                  { 'index': 134, 'type': 'table', 'tablename': 'RestrictedTradingListOverride', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'sigmaAlgorithm':                                 { 'index': 135, 'type': 'ubyte', 'enum': 'OmSigmaAlgorithm', }, 
				'sigmaAlgorithmParameters':                       { 'index': 136, 'type': 'table', 'tablename': 'SigmaAlgorithmParameter', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'destinationEntityIndicator':                     { 'index': 137, 'type': 'ubyte', 'enum': 'OmDestinationEntityIndicator', }, 
				'profitSplitOption':                              { 'index': 138, 'type': 'ubyte', 'enum': 'OmProfitSplitOption', }, 
				'primaryPartyType':                               { 'index': 139, 'type': 'ubyte', 'enum': 'OmPrimaryPartyType', }, 
				'visibilityGroups':                               { 'index': 140, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'basketExternalReferences':                       { 'index': 141, 'type': 'table', 'tablename': 'ExternalReference', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'regNmsExemptionType':                            { 'index': 142, 'type': 'ubyte', 'enum': 'OmRegNmsExemptionType', }, 
				'currentOwner':                                   { 'index': 143, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'sourceSystemOwner':                              { 'index': 144, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'destinationSystemOwner':                         { 'index': 145, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'clientConsentsName':                             { 'index': 146, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'regulatoryReportDomain':                         { 'index': 147, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'sourceRegulatoryReportDomain':                   { 'index': 148, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'sourceOwner':                                    { 'index': 149, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'isEnhancedLimitOrder':                           { 'index': 150, 'type': 'bool', }, 
				'isSpecialLimitOrder':                            { 'index': 151, 'type': 'bool', }, 
				'tradingUnitId':                                  { 'index': 152, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '8'},
				                                                    ],
				                                                  },
				'locateRequesterIdPreferenceList':                { 'index': 153, 'type': 'table', 'tablename': 'LocateRequesterIdPreferenceListMember', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'locateMethod':                                   { 'index': 154, 'type': 'ubyte', 'enum': 'OmLocateMethod', }, 
				'notifySystems':                                  { 'index': 155, 'type': 'table', 'tablename': 'NotifySystem', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'isImbalanceOffsetOnly':                          { 'index': 156, 'type': 'bool', }, 
				'minimumDisplaySize':                             { 'index': 157, 'type': 'double', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'isGiveUpOrder':                                  { 'index': 158, 'type': 'bool', }, 
				'automationStrategy':                             { 'index': 159, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'primaryBasketExternalReference':                 { 'index': 160, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'secondaryBasketExternalReferences':              { 'index': 161, 'type': 'table', 'tablename': 'BasketExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'shouldAdvertiseExecutions':                      { 'index': 162, 'type': 'bool', }, 
				'businessUnit':                                   { 'index': 163, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'isManningTrigger':                               { 'index': 164, 'type': 'bool', }, 
				'manningTriggerExecutionId':                      { 'index': 165, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '37'},
				                                                    ],
				                                                  },
				'marketSession':                                  { 'index': 166, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'crossMatchingId':                                { 'index': 167, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'isAlreadyManningProtected':                      { 'index': 168, 'type': 'bool', }, 
				'replacedOrderId':                                { 'index': 169, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'upRippleHandler':                                { 'index': 170, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'downRippleHandler':                              { 'index': 171, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'clientOrderCapacity':                            { 'index': 172, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'expireAfterMilliseconds':                        { 'index': 173, 'type': 'int', }, 
				'expireOnExecution':                              { 'index': 174, 'type': 'bool', }, 
				'tsorAlgorithm':                                  { 'index': 175, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'tsorAlgorithmParameters':                        { 'index': 176, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '128'},
				                                                    ],
				                                                  },
				'tradingAlgorithmEngine':                         { 'index': 177, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'isMinimumGuaranteedFillEligible':                { 'index': 178, 'type': 'bool', }, 
				'tsxRegulationCode':                              { 'index': 179, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '2'},
				                                                    ],
				                                                  },
				'clientMembershipId':                             { 'index': 180, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'tradingStyle':                                   { 'index': 181, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'stoppedStockAgreementPrice':                     { 'index': 182, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'hideMembershipIdAtDestination':                  { 'index': 183, 'type': 'bool', }, 
				'flowSpecificCanada':                             { 'index': 184, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'secShortSellExemptionReason':                    { 'index': 185, 'type': 'ubyte', 'enum': 'OmSecShortSellExemptionReason', }, 
				'isAlgoAssignedOrder':                            { 'index': 186, 'type': 'bool', }, 
				'isAlgoManagedOrder':                             { 'index': 187, 'type': 'bool', }, 
				'isAlgoChildOrder':                               { 'index': 188, 'type': 'bool', }, 
				'isSorAssignedOrder':                             { 'index': 189, 'type': 'bool', }, 
				'isSorManagedOrder':                              { 'index': 190, 'type': 'bool', }, 
				'isSorChildOrder':                                { 'index': 191, 'type': 'bool', }, 
				'isLeafOrder':                                    { 'index': 192, 'type': 'bool', }, 
				'opaqueOrderDataItems':                           { 'index': 193, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'whiteLabelDataId':                               { 'index': 194, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'indicationPolicyParameters':                     { 'index': 195, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'orderCreationType':                              { 'index': 196, 'type': 'ubyte', 'enum': 'OmOrderCreationType', }, 
				'provideLiquidityOnly':                           { 'index': 197, 'type': 'bool', }, 
				'upParentChildManager':                           { 'index': 198, 'type': 'ubyte', 'enum': 'OmParentChildManagerType', }, 
				'downParentChildManager':                         { 'index': 199, 'type': 'ubyte', 'enum': 'OmParentChildManagerType', }, 
				'destinationRegulatoryReportDomain':              { 'index': 200, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'sourceSystemRegulatoryOrderId':                  { 'index': 201, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'matchGroupId':                                   { 'index': 202, 'type': 'int', }, 
				'matchGroupFilter':                               { 'index': 203, 'type': 'uint64', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'uint64'},
				                                                    ],
				                                                  },
				'enhancedLiquidityPools':                         { 'index': 204, 'type': 'table', 'tablename': 'EnhancedLiquidityPoolName', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'fixClientType':                                  { 'index': 205, 'type': 'ubyte', 'enum': 'OmFixClientType', }, 
				'notEligibleForTrading':                          { 'index': 206, 'type': 'bool', }, 
				'testCaseOverrideId':                             { 'index': 207, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'advertisingPolicyParameters':                    { 'index': 208, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'matchCycleType':                                 { 'index': 209, 'type': 'ubyte', 'enum': 'OmMatchCycleType', }, 
				'destinationDomain':                              { 'index': 210, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '12'},
				                                                    ],
				                                                  },
				'targetQuoteId':                                  { 'index': 211, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'disableProductLookup':                           { 'index': 212, 'type': 'bool', }, 
				'isMarketMakingOrder':                            { 'index': 213, 'type': 'bool', }, 
				'isAdvisorEligible':                              { 'index': 214, 'type': 'bool', }, 
				'originatorIpAddress':                            { 'index': 215, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'isSimulatedStopOrder':                           { 'index': 216, 'type': 'bool', }, 
				'fixClientInformation':                           { 'index': 217, 'type': 'table', 'tablename': 'FixClientInformation', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'syntheticType':                                  { 'index': 218, 'type': 'ubyte', 'enum': 'OmSyntheticType', }, 
				'brokerDealerOatsAttributes':                     { 'index': 219, 'type': 'table', 'tablename': 'BrokerDealerOatsAttributes', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isCrossIntentOrder':                             { 'index': 220, 'type': 'bool', }, 
				'isRisklessPrincipalCrossDriverOrder':            { 'index': 221, 'type': 'bool', }, 
				'isPrincipalCrossDriverOrder':                    { 'index': 222, 'type': 'bool', }, 
				'isTradingAutomationGenerated':                   { 'index': 223, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'senderLocation':                                 { 'index': 224, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'informationBarrierId':                           { 'index': 225, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '12'},
				                                                    ],
				                                                  },
				'exchangeLoginId':                                { 'index': 226, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'regNmsSweepWaived':                              { 'index': 227, 'type': 'bool', }, 
				'orderOriginCode':                                { 'index': 228, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '1'},
				                                                    ],
				                                                  },
				'isPwmAdvisory':                                  { 'index': 229, 'type': 'bool', }, 
				'crossRequestReason':                             { 'index': 230, 'type': 'ubyte', 'enum': 'OmCrossRequestReason', }, 
				'isLateAuctionOrder':                             { 'index': 231, 'type': 'bool', }, 
				'regRepCode':                                     { 'index': 232, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'approvalInformationList':                        { 'index': 233, 'type': 'table', 'tablename': 'ApprovalInformation', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'ruleProfile':                                    { 'index': 234, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '128'},
				                                                    ],
				                                                  },
				'isWorkupOrder':                                  { 'index': 235, 'type': 'bool', }, 
				'isCDSPassiveOrder':                              { 'index': 236, 'type': 'bool', }, 
				'workupSessionId':                                { 'index': 237, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '12'},
				                                                    ],
				                                                  },
				'exchangeAccount':                                { 'index': 238, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'minimumIOCPriceImprovement':                     { 'index': 239, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minimumAggressorRestTime':                       { 'index': 240, 'type': 'int', }, 
				'isOnExchangeCrossIntentOrder':                   { 'index': 241, 'type': 'bool', }, 
				'isOnExchangeCrossDriverOrder':                   { 'index': 242, 'type': 'bool', }, 
				'isATSTrade':                                     { 'index': 243, 'type': 'bool', }, 
				'isPartialAcceptAmendEligible':                   { 'index': 244, 'type': 'bool', }, 
				'isGsiOrderMarkingTowerStyle':                    { 'index': 245, 'type': 'bool', }, 
				'executeAgencyOnly':                              { 'index': 246, 'type': 'bool', }, 
				'manualOrderIndicator':                           { 'index': 247, 'type': 'bool', }, 
				'salesAttributionUser':                           { 'index': 248, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'isSolicitedFromEM':                              { 'index': 249, 'type': 'bool', }, 
				'directedRegRepCode':                             { 'index': 250, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'isCloakedOrder':                                 { 'index': 251, 'type': 'bool', }, 
				'isClientBookable':                               { 'index': 252, 'type': 'bool', }, 
				'regNmsSweepWaivedClientUserId':                  { 'index': 253, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'visibilityUserList':                             { 'index': 254, 'type': 'table', 'tablename': 'VisibilityUserId', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'isLiquidityQuoteOrder':                          { 'index': 255, 'type': 'bool', }, 
				'liquidityQuoteResponseId':                       { 'index': 256, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'tradingAlgorithmPrivateParameters':              { 'index': 257, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '1024'},
				                                                    ],
				                                                  },
				'destinationVisibilityGroups':                    { 'index': 258, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'syntheticDetails':                               { 'index': 259, 'type': 'table', 'tablename': 'SyntheticDetails', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'clearingFirm':                                   { 'index': 260, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'exchangeRates':                                  { 'index': 261, 'type': 'table', 'tablename': 'ExchangeRate', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'fixOrderAttributes':                             { 'index': 262, 'type': 'table', 'tablename': 'FixOrderAttributes', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'tradingCountryOverride':                         { 'index': 263, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '2'},
				                                                    ],
				                                                  },
				'doNotRoute':                                     { 'index': 264, 'type': 'bool', }, 
				'providingBins':                                  { 'index': 265, 'type': 'table', 'tablename': 'ProvidingBin', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'matchingBins':                                   { 'index': 266, 'type': 'table', 'tablename': 'MatchingBin', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'isAggregatedFirmOrder':                          { 'index': 267, 'type': 'bool', }, 
				'isCompositeOrder':                               { 'index': 268, 'type': 'bool', }, 
				'isCompositeLegOrder':                            { 'index': 269, 'type': 'bool', }, 
				'legQuantityMultiplier':                          { 'index': 270, 'type': 'int', }, 
				'isOptionStrategyEquityLeg':                      { 'index': 271, 'type': 'bool', }, 
				'preferredMarketMakerId':                         { 'index': 272, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'isDirectedOrderWithAuction':                     { 'index': 273, 'type': 'bool', }, 
				'capitalCommitCategory':                          { 'index': 274, 'type': 'ubyte', 'enum': 'OmCapitalCommitCategory', }, 
				'facilitationPercent':                            { 'index': 275, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'facilitationPrice':                              { 'index': 276, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'facilitationPositionOpenClose':                  { 'index': 277, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'facilitationStepUpPrice':                        { 'index': 278, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'marketMakerExchangeRepresented':                 { 'index': 279, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '4'},
				                                                    ],
				                                                  },
				'marketMakerId':                                  { 'index': 280, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'marketMakerOCCClearingAccount':                  { 'index': 281, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'isMarketMakerClientOptionSpecialistInClass':     { 'index': 282, 'type': 'bool', }, 
				'isClientStockSpecialistInUnderlier':             { 'index': 283, 'type': 'bool', }, 
				'isPHLXOffFloorOrder':                            { 'index': 284, 'type': 'bool', }, 
				'parentsTradingAlgorithmEngine':                  { 'index': 285, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'clientAlgorithmCategory':                        { 'index': 286, 'type': 'ubyte', 'enum': 'OmClientAlgorithmCategory', }, 
				'ctiCode':                                        { 'index': 287, 'type': 'string', }, 
				'marginType':                                     { 'index': 288, 'type': 'ubyte', 'enum': 'OmMarginType', }, 
				'continuousRiskCheckRequired':                    { 'index': 289, 'type': 'bool', }, 
				'principalCapacityPrimaryAccountOverride':        { 'index': 290, 'type': 'table', 'tablename': 'Account', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'relatedOptionOrderExternalReferences':           { 'index': 291, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'clientGsRelationship':                           { 'index': 292, 'type': 'ubyte', 'enum': 'OmGsEntity', }, 
				'settlementBoardOverride':                        { 'index': 293, 'type': 'ubyte', 'enum': 'OmSettlementBoardOverride', }, 
				'ignoreExchangePriceRangeCheck':                  { 'index': 294, 'type': 'bool', }, 
				'isCorporateBuyBackOrder':                        { 'index': 295, 'type': 'bool', }, 
				'swapGuaranteedPriceType':                        { 'index': 296, 'type': 'ubyte', 'enum': 'OmSwapGuaranteedPriceType', }, 
				'isDiscretionExercised':                          { 'index': 297, 'type': 'bool', }, 
				'sourceFlowIdentifier':                           { 'index': 298, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'flowIdentifier':                                 { 'index': 299, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'destinationFlowIdentifier':                      { 'index': 300, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isDestinationIndicationOfInterestMatchingOrder': { 'index': 301, 'type': 'bool', }, 
				'nearLegPricePreference':                         { 'index': 302, 'type': 'ubyte', 'enum': 'OmNearLegPricePreference', }, 
				'disableTransientCoverageVisibility':             { 'index': 303, 'type': 'bool', }, 
				'dealValueRatio':                                 { 'index': 304, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'hedgeValueRatio':                                { 'index': 305, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'lastCorporateActionEffectiveDate':               { 'index': 306, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'date'},
				                                                    ],
				                                                  },
				'externalTradingAlgorithmDetails':                { 'index': 307, 'type': 'table', 'tablename': 'ExternalTradingAlgorithmDetails', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'clientAccessId':                                 { 'index': 308, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'allocationOrderId':                              { 'index': 309, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'iosAccountExchangeCrossReference':               { 'index': 310, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'disableRealTimeExecutionNotification':           { 'index': 311, 'type': 'bool', }, 
				'australiaTradeConditionCode':                    { 'index': 312, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '8'},
				                                                    ],
				                                                  },
				'basisOfQuotation':                               { 'index': 313, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '6'},
				                                                    ],
				                                                  },
				'tradeAgreementDate':                             { 'index': 314, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'counterPartyId':                                 { 'index': 315, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'isAustraliaUndisclosedOrder':                    { 'index': 316, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'outboundComment':                                { 'index': 317, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '128'},
				                                                    ],
				                                                  },
				'mergedParentOrderSummaryList':                   { 'index': 318, 'type': 'table', 'tablename': 'MergedParentOrderSummary', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'isPartOfTwoSidedTradeReport':                    { 'index': 319, 'type': 'bool', }, 
				'thresholdPriceForMarketImpactCheck':             { 'index': 320, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'isBlockDistributionOrder':                       { 'index': 321, 'type': 'bool', }, 
				'parentPrimaryAccountEntity':                     { 'index': 322, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '9'},
				                                                    ],
				                                                  },
				'referenceCharges':                               { 'index': 323, 'type': 'table', 'tablename': 'Charge', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'executeSynthetically':                           { 'index': 324, 'type': 'bool', }, 
				'australiaUnintentionalCrossPreventionKey':       { 'index': 325, 'type': 'int', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'allowedBookingStyleCash':                        { 'index': 326, 'type': 'bool', }, 
				'allowedBookingStyleGiveUp':                      { 'index': 327, 'type': 'bool', }, 
				'allowedBookingStyleCFD':                         { 'index': 328, 'type': 'bool', }, 
				'tradingAlgorithmSequence':                       { 'index': 329, 'type': 'table', 'tablename': 'TradingAlgorithmSequence', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'exchangeAlgorithmId':                            { 'index': 330, 'type': 'int', }, 
				'priceStabilization':                             { 'index': 331, 'type': 'bool', }, 
				'isMarqueeWebStagedIndication':                   { 'index': 332, 'type': 'bool', }, 
				'isHighTouchOrderFromLowTouch':                   { 'index': 333, 'type': 'bool', }, 
				'isClientRequestedSendWithheldOrder':             { 'index': 334, 'type': 'bool', }, 
				'flowSpecificAustralia':                          { 'index': 335, 'type': 'table', 'tablename': 'FlowSpecificAustralia', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'sendToGssRisk':                                  { 'index': 336, 'type': 'bool', }, 
				'selfMatchPreventionId':                          { 'index': 337, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '12'},
				                                                    ],
				                                                  },
				'apolloTurnaroundInfoList':                       { 'index': 338, 'type': 'table', 'tablename': 'ApolloTurnaroundInfo', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'flowSpecificSEF':                                { 'index': 339, 'type': 'table', 'tablename': 'FlowSpecificSEF', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'clientPrincipalType':                            { 'index': 340, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'asiaFflFlowGroup':                               { 'index': 341, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'clientAggregationId':                            { 'index': 342, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '128'},
				                                                    ],
				                                                  },
				'destinationDoNotRoute':                          { 'index': 343, 'type': 'bool', }, 
				'allocationSubAccounts':                          { 'index': 344, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'safeHaborBehaviorRequested':                     { 'index': 345, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'safeHarborBehaviorRequested':                    { 'index': 346, 'type': 'bool', }, 
				'originalOrderId':                                { 'index': 347, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'investorId':                                     { 'index': 348, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'lastOmsBooksHedge':                              { 'index': 349, 'type': 'bool', }, 
				'currentSystemDoesNotBook':                       { 'index': 350, 'type': 'bool', }, 
				'destinationSystemDoesNotBook':                   { 'index': 351, 'type': 'bool', }, 
				'minExecutableNotionalValue':                     { 'index': 352, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minSingleExecutionQuantity':                     { 'index': 353, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'minSingleExecutionNotionalValue':                { 'index': 354, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'isMinExecutableQuantityResidualNotExecutable':   { 'index': 355, 'type': 'bool', }, 
				'tradingControlAttributes':                       { 'index': 356, 'type': 'table', 'tablename': 'TradingControlAttributes', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isMinExecutableQuantityMinExecutionSize':        { 'index': 357, 'type': 'bool', }, 
				'originalOrderCapacity':                          { 'index': 358, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'originalAgencyType':                             { 'index': 359, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'originalPrincipalType':                          { 'index': 360, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
			}, 
		}, 
		'OrderInternalEventContext': {
			'id': 355, 
			'version': 17, 
			'publishable': 'true', 
			'columns': {
				'ignoreMarketOnCloseCheck':            { 'index': 0, 'type': 'bool', }, 
				'isLocateRequested':                   { 'index': 1, 'type': 'bool', }, 
				'rejectIfInventoryUnavailable':        { 'index': 2, 'type': 'bool', }, 
				'resolveAllPrices':                    { 'index': 3, 'type': 'bool', }, 
				'crossMatchingId':                     { 'index': 4, 'type': 'string', 
				                                         'meta-fields': [
					                                     {'field': 'maxStringLength' , 'value' : '30'},
				                                         ],
				                                       },
				'quantityBeforePartialCancelAccepted': { 'index': 5, 'type': 'double', 
				                                         'meta-fields': [
					                                     {'field': 'dictionaryType' , 'value' : 'real'},
				                                         ],
				                                       },
				'attemptAutoAcceptCorrection':         { 'index': 6, 'type': 'bool', # FIELD IS OBSOLETE
				                                         'meta-fields': [
					                                     {'field': 'obsolete' , 'value' : 'true'},
				                                         ],
				                                       },
				'canAutoAcceptCorrection':             { 'index': 7, 'type': 'bool', }, 
				'corporateActionId':                   { 'index': 8, 'type': 'string', 
				                                         'meta-fields': [
					                                     {'field': 'maxStringLength' , 'value' : '10'},
				                                         ],
				                                       },
				'crossWatchCheckAlreadyPerformed':     { 'index': 9, 'type': 'bool', }, 
				'doNotAutoAcceptParentOnSplit':        { 'index': 10, 'type': 'bool', }, 
				'autoForward':                         { 'index': 11, 'type': 'bool', }, 
				'appliedControlLayers':                { 'index': 12, 'type': 'table', 'tablename': 'AppliedControlLayer', 
				                                         'meta-fields': [
					                                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                                         ],
				                                       },
				'unsuspendParentOnSplit':              { 'index': 13, 'type': 'bool', }, 
				'suspendParentOnChildEvent':           { 'index': 14, 'type': 'bool', }, 
				'rejectReasons':                       { 'index': 15, 'type': 'table', 'tablename': 'RejectReason', 
				                                         'meta-fields': [
					                                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                                         ],
				                                       },
				'bypassSyntheticValidations':          { 'index': 16, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                         'meta-fields': [
					                                     {'field': 'deprecated' , 'value' : 'true'},
				                                         ],
				                                       },
				'exchangeLimitPrice':                  { 'index': 17, 'type': 'double', 
				                                         'meta-fields': [
					                                     {'field': 'dictionaryType' , 'value' : 'real'},
				                                         ],
				                                       },
				'exchangeStopPrice':                   { 'index': 18, 'type': 'double', 
				                                         'meta-fields': [
					                                     {'field': 'dictionaryType' , 'value' : 'real'},
				                                         ],
				                                       },
				'exchangeLimitPriceCurrency':          { 'index': 19, 'type': 'string', 
				                                         'meta-fields': [
					                                     {'field': 'maxStringLength' , 'value' : '3'},
				                                         ],
				                                       },
				'vikingNotionalCheckPrice':            { 'index': 20, 'type': 'double', 
				                                         'meta-fields': [
					                                     {'field': 'dictionaryType' , 'value' : 'real'},
				                                         ],
				                                       },
				'vikingNotionalCheckPriceCurrency':    { 'index': 21, 'type': 'string', 
				                                         'meta-fields': [
					                                     {'field': 'maxStringLength' , 'value' : '3'},
				                                         ],
				                                       },
			}, 
		}, 
		'OrderMassCancelCandidateData': {
			'id': 316, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'orderId':        { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '29'},
				                    ],
				                  },
				'massCancelType': { 'index': 1, 'type': 'ubyte', 'enum': 'OmMassCancelType', }, 
			}, 
		}, 
		'OrderNotification': {
			'id': 120, 
			'version': 8, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAlias' , 'value' : 'Order'},
			    {'field': 'rdbInheritParentKeys' , 'value' : 'false'},
			    {'field': 'rdbAdditionalKeyPart' , 'value' : 'orders/orderVersion,orders/orderInstructionData/orderId'},
			    {'field': 'rdbProcessAttribute' , 'value' : 'orders/orderVersion,orders/orderInstructionData/orderId'},
			    {'field': 'rdbColumnInParent' , 'value' : 'orders'},
			    {'field': 'rdbAsOwnTable' , 'value' : 'orders_pendingCorrection,orders_orderCorrection,orders_pendingCancel'},
			],
			'columns': {
				'version':              { 'index': 0, 'type': 'int', 
				                          'meta-fields': [
					                      {'field': 'rdbAlias' , 'value' : 'orderVersion'},
				                          ],
				                        },
				'parentOrderGsuid':     { 'index': 1, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                          'meta-fields': [
					                      {'field': 'deprecated' , 'value' : 'true'},
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'orderInstructionData': { 'index': 2, 'type': 'table', 'tablename': 'OrderInstructionData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'orderStatusData':      { 'index': 3, 'type': 'table', 'tablename': 'OrderStatusData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'externalReference':    { 'index': 4, 'type': 'table', 'tablename': 'ExternalReference', # FIELD IS OBSOLETE
				                          'meta-fields': [
					                      {'field': 'obsolete' , 'value' : 'true'},
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'pendingCorrection':    { 'index': 5, 'type': 'table', 'tablename': 'PendingCorrection', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'pendingCancel':        { 'index': 6, 'type': 'table', 'tablename': 'PendingCancel', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'parkedEventData':      { 'index': 7, 'type': 'table', 'tablename': 'ParkedEventData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'relatedEntityIndex':   { 'index': 8, 'type': 'table', 'tablename': 'RelatedEntityIndex', # FIELD HAS BEEN DEPRECATED
				                          'meta-fields': [
					                      {'field': 'deprecated' , 'value' : 'true'},
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'relatedEntityIndexes': { 'index': 9, 'type': 'table', 'tablename': 'RelatedEntityIndex', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
				'orderCorrection':      { 'index': 10, 'type': 'table', 'tablename': 'OrderCorrection', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
			}, 
		}, 
		'OrderQueuedNotification': {
			'id': 590, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'orderId':            { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
			}, 
		}, 
		'OrderRegulatoryInformation': {
			'id': 134, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'partOfProgram':              { 'index': 0, 'type': 'bool', }, 
				'arbitrageStrategy':          { 'index': 1, 'type': 'ubyte', 'enum': 'OmArbitrageStrategy', }, 
				'algorithmicIndicator':       { 'index': 2, 'type': 'ubyte', 'enum': 'OmAlgorithmicIndicator', }, 
				'consolidatedRegulatoryCode': { 'index': 3, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'customerPartyType':          { 'index': 4, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'clientCustomerPartyType':    { 'index': 5, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
			}, 
		}, 
		'OrderSpreadExecutionHistory': {
			'id': 685, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'orderId':                    { 'index': 0, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'lastIncompleteSpreadExecId': { 'index': 1, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'lastFilledSpreadExecId':     { 'index': 2, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
			}, 
		}, 
		'OrderStatusData': {
			'id': 23, 
			'version': 50, 
			'publishable': 'true', 
			'columns': {
				'orderId':                            { 'index': 0, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '29'},
				                                        ],
				                                      },
				'primaryStatus':                      { 'index': 1, 'type': 'ubyte', 'enum': 'OmPrimaryStatus', }, 
				'useExternalReferenceTable':          { 'index': 2, 'type': 'bool', }, 
				'externalReferences':                 { 'index': 3, 'type': 'table', 'tablename': 'ExternalReference', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                                        ],
				                                      },
				'useRelationshipTable':               { 'index': 4, 'type': 'bool', }, 
				'relatedEntities':                    { 'index': 5, 'type': 'table', 'tablename': 'RelatedEntity', # FIELD HAS BEEN DEPRECATED
				                                        'meta-fields': [
					                                    {'field': 'deprecated' , 'value' : 'true'},
					                                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                                        ],
				                                      },
				'routeStatus':                        { 'index': 6, 'type': 'ubyte', 'enum': 'OmRouteStatus', }, 
				'correctionStatus':                   { 'index': 7, 'type': 'ubyte', 'enum': 'OmCorrectionStatus', }, 
				'completionReason':                   { 'index': 8, 'type': 'ubyte', 'enum': 'OmCompletionReason', }, 
				'cancelStatus':                       { 'index': 9, 'type': 'ubyte', 'enum': 'OmCancelStatus', }, 
				'executedQuantity':                   { 'index': 10, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'quantityRemaining':                  { 'index': 11, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'dailyExecutedQuantity':              { 'index': 12, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'averagePrice':                       { 'index': 13, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'averageNetPrice':                    { 'index': 14, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'splitQuantity':                      { 'index': 15, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'splitQuantityRemaining':             { 'index': 16, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'splitQuantityExecuted':              { 'index': 17, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'quantityExecutedFromChildren':       { 'index': 18, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'splitQuantityAveragePrice':          { 'index': 19, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'rejectingSystem':                    { 'index': 20, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                                        'meta-fields': [
					                                    {'field': 'deprecated' , 'value' : 'true'},
				                                        ],
				                                      },
				'splitQuantityAverageNetPrice':       { 'index': 21, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'splitQuantityUnsent':                { 'index': 22, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'unsentAcceptCancel':                 { 'index': 23, 'type': 'bool', }, 
				'cancelAcceptExecutedQuantity':       { 'index': 24, 'type': 'int', }, 
				'createDateTime':                     { 'index': 25, 'type': 'int', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                        ],
				                                      },
				'smartRouter':                        { 'index': 26, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '12'},
				                                        ],
				                                      },
				'orderBook':                          { 'index': 27, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '12'},
				                                        ],
				                                      },
				'parentsSmartRouter':                 { 'index': 28, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '12'},
				                                        ],
				                                      },
				'gamePlanType':                       { 'index': 29, 'type': 'ubyte', 'enum': 'OmGamePlanType', }, 
				'childQuantityPending':               { 'index': 30, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'childQuantityRejected':              { 'index': 31, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'childQuantityOpen':                  { 'index': 32, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'childQuantityPendingCorrect':        { 'index': 33, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'childQuantityCorrectAccepted':       { 'index': 34, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'childQuantityCorrectRejected':       { 'index': 35, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'childQuantityPendingCancel':         { 'index': 36, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'childQuantityCancelAccepted':        { 'index': 37, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'childQuantityCancelRejected':        { 'index': 38, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'exchangeExecutedQuantity':           { 'index': 39, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'isParked':                           { 'index': 40, 'type': 'bool', }, 
				'rejectReasonText':                   { 'index': 41, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                        'meta-fields': [
					                                    {'field': 'deprecated' , 'value' : 'true'},
					                                    {'field': 'maxStringLength' , 'value' : '256'},
				                                        ],
				                                      },
				'rejectReasonType':                   { 'index': 42, 'type': 'ubyte', 'enum': 'OmRejectReasonType', # FIELD HAS BEEN DEPRECATED
				                                        'meta-fields': [
					                                    {'field': 'deprecated' , 'value' : 'true'},
				                                        ],
				                                      },
				'childIocQuantityOpen':               { 'index': 43, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'matchPriorityTime':                  { 'index': 44, 'type': 'int', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                        ],
				                                      },
				'matchPriorityTimeMicro':             { 'index': 45, 'type': 'int', }, 
				'isRootOrder':                        { 'index': 46, 'type': 'bool', }, 
				'isLeafOrder':                        { 'index': 47, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                        'meta-fields': [
					                                    {'field': 'deprecated' , 'value' : 'true'},
				                                        ],
				                                      },
				'isSuspended':                        { 'index': 48, 'type': 'bool', }, 
				'eventDate':                          { 'index': 49, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '8'},
				                                        ],
				                                      },
				'eventNumber':                        { 'index': 50, 'type': 'int', }, 
				'eventSystemName':                    { 'index': 51, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '32'},
				                                        ],
				                                      },
				'suspendReasonText':                  { 'index': 52, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                        'meta-fields': [
					                                    {'field': 'deprecated' , 'value' : 'true'},
					                                    {'field': 'maxStringLength' , 'value' : '256'},
				                                        ],
				                                      },
				'gamePlanState':                      { 'index': 53, 'type': 'int', }, 
				'cancelNewStatus':                    { 'index': 54, 'type': 'ubyte', 'enum': 'OmCancelNewStatus', }, 
				'cancelNewVersion':                   { 'index': 55, 'type': 'uint', }, 
				'lastDestinationAcknowledgeTime':     { 'index': 56, 'type': 'int', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                        ],
				                                      },
				'isPendingDoneForDay':                { 'index': 57, 'type': 'bool', 'aliases': ['isDoneForDayPendingFinalExec'] }, 
				'isForceCancelPendingFinalExec':      { 'index': 58, 'type': 'bool', }, 
				'isAcceptCancelPendingFinalExec':     { 'index': 59, 'type': 'bool', }, 
				'isAcceptCorrectionPendingFinalExec': { 'index': 60, 'type': 'bool', }, 
				'executionSummaryList':               { 'index': 61, 'type': 'table', 'tablename': 'ExecutionSummary', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                                        ],
				                                      },
				'locateStatus':                       { 'index': 62, 'type': 'ubyte', 'enum': 'OmLocateStatus', }, 
				'locateRequestId':                    { 'index': 63, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '37'},
				                                        ],
				                                      },
				'firstExecutionTime':                 { 'index': 64, 'type': 'int', 
				                                        'meta-fields': [
					                                    {'field': 'rdbMergeIntoDateTime' , 'value' : 'firstExecutionTimeMicrosecond:firstExecutionTimestamp'},
					                                    {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                        ],
				                                      },
				'firstExecutionTimeMicrosecond':      { 'index': 65, 'type': 'int', }, 
				'orderCompletionTime':                { 'index': 66, 'type': 'int', 
				                                        'meta-fields': [
					                                    {'field': 'rdbMergeIntoDateTime' , 'value' : 'orderCompletionTimeMicrosecond:orderCompletionTimestamp'},
					                                    {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                        ],
				                                      },
				'orderCompletionTimeMicrosecond':     { 'index': 67, 'type': 'int', }, 
				'sendWithheld':                       { 'index': 68, 'type': 'bool', }, 
				'destinationComplianceOrderId':       { 'index': 69, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '30'},
				                                        ],
				                                      },
				'owner':                              { 'index': 70, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '32'},
				                                        ],
				                                      },
				'destinationOwner':                   { 'index': 71, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '32'},
				                                        ],
				                                      },
				'rediReportingInformation':           { 'index': 72, 'type': 'table', 'tablename': 'RediReportingInformation', # FIELD HAS BEEN DEPRECATED
				                                        'meta-fields': [
					                                    {'field': 'deprecated' , 'value' : 'true'},
					                                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                                        ],
				                                      },
				'childCount':                         { 'index': 73, 'type': 'int', }, 
				'smartRouterReworkCount':             { 'index': 74, 'type': 'int', }, 
				'createDateTimeMicroseconds':         { 'index': 75, 'type': 'int', }, 
				'executedQuantityBusted':             { 'index': 76, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'gamePlanSubState':                   { 'index': 77, 'type': 'int', }, 
				'cancelRequestReason':                { 'index': 78, 'type': 'ubyte', 'enum': 'OmAdministrativeCancelRequestReason', # FIELD HAS BEEN DEPRECATED
				                                        'meta-fields': [
					                                    {'field': 'deprecated' , 'value' : 'true'},
				                                        ],
				                                      },
				'rehomeDestinationId':                { 'index': 79, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '20'},
				                                        ],
				                                      },
				'cancelReason':                       { 'index': 80, 'type': 'ubyte', 'enum': 'OmCancelReason', }, 
				'orderSuspendReasons':                { 'index': 81, 'type': 'table', 'tablename': 'OrderSuspendReason', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                                        ],
				                                      },
				'rejectReasons':                      { 'index': 82, 'type': 'table', 'tablename': 'RejectReason', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                                        ],
				                                      },
				'isPendingApproval':                  { 'index': 83, 'type': 'bool', }, 
				'isSuspendedDownstream':              { 'index': 84, 'type': 'bool', }, 
				'downstreamOrderSuspendReasons':      { 'index': 85, 'type': 'table', 'tablename': 'OrderSuspendReason', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                                        ],
				                                      },
				'isDoneForDay':                       { 'index': 86, 'type': 'bool', }, 
				'parentGamePlanType':                 { 'index': 87, 'type': 'ubyte', 'enum': 'OmGamePlanType', }, 
				'dssEventId':                         { 'index': 88, 'type': 'string', }, 
				'executionLegSummary':                { 'index': 89, 'type': 'table', 'tablename': 'ExecutionLegSummary', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                                        ],
				                                      },
				'isReinstated':                       { 'index': 90, 'type': 'bool', }, 
				'averagePriceInExecutionCurrency':    { 'index': 91, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
				'isOwnershipTaken':                   { 'index': 92, 'type': 'bool', }, 
				'alertText':                          { 'index': 93, 'type': 'string', 
				                                        'meta-fields': [
					                                    {'field': 'maxStringLength' , 'value' : '300'},
				                                        ],
				                                      },
				'isQueuedByOm':                       { 'index': 94, 'type': 'bool', }, 
				'referencePriceForMarketImpactCheck': { 'index': 95, 'type': 'double', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'real'},
				                                        ],
				                                      },
			}, 
		}, 
		'OrderSuspendReason': {
			'id': 464, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'orderSuspendReasonType': { 'index': 0, 'type': 'ubyte', 'enum': 'OmOrderSuspendReasonType', }, 
				'suspendReasonText':      { 'index': 1, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '256'},
				                            ],
				                          },
			}, 
		}, 
		'OrderSuspendedDownstreamCommand': {
			'id': 330, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                 { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
				'externalReferences':            { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'collection'},
				                                   ],
				                                 },
				'orderId':                       { 'index': 2, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '29'},
				                                   ],
				                                 },
				'downstreamOrderSuspendReasons': { 'index': 3, 'type': 'table', 'tablename': 'OrderSuspendReason', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'collection'},
				                                   ],
				                                 },
			}, 
		}, 
		'OrderUnsuspendedDownstreamCommand': {
			'id': 331, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'orderId':            { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
			}, 
		}, 
		'OrderUpdate': {
			'id': 122, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'currentOrder':         { 'index': 0, 'type': 'table', 'tablename': 'OrderNotification', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'previousOrder':        { 'index': 1, 'type': 'table', 'tablename': 'OrderNotification', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'transactionalProduct': { 'index': 2, 'type': 'table', 'tablename': 'RdsTransactionalProduct', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'marketDataStamp':      { 'index': 3, 'type': 'table', 'tablename': 'MarketDataStamp', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'eventIdWrapper':       { 'index': 4, 'type': 'table', 'tablename': 'EventIdWrapper', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'eventData':            { 'index': 5, 'type': 'table', 'tablename': 'EventData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'orderHistorySummary':  { 'index': 6, 'type': 'table', 'tablename': 'OrderHistorySummary', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
			}, 
		}, 
		'ParameterizedPrice': {
			'id': 354, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'priceType':                 { 'index': 0, 'type': 'ubyte', 'enum': 'OmPriceType', }, 
				'priceOffset':               { 'index': 1, 'type': 'double', 
				                               'meta-fields': [
					                           {'field': 'dictionaryType' , 'value' : 'real'},
				                               ],
				                             },
				'priceOffsetType':           { 'index': 2, 'type': 'ubyte', 'enum': 'OmPriceOffsetType', }, 
				'priceResolutionStatus':     { 'index': 3, 'type': 'ubyte', 'enum': 'OmPriceResolutionStatus', }, 
				'priceResolutionTimestamp':  { 'index': 4, 'type': 'int', 
				                               'meta-fields': [
					                           {'field': 'dictionaryType' , 'value' : 'datetime'},
				                               ],
				                             },
				'priceRoundingStyle':        { 'index': 5, 'type': 'ubyte', 'enum': 'OmPriceRoundingStyle', }, 
				'pricePrecision':            { 'index': 6, 'type': 'int', }, 
				'usePrimaryVenueMarketData': { 'index': 7, 'type': 'bool', }, 
			}, 
		}, 
		'ParkedEventData': {
			'id': 103, 
			'version': 6, 
			'publishable': 'true', 
			'columns': {
				'orderId':                       { 'index': 0, 'type': 'string', # FIELD IS OBSOLETE
				                                   'meta-fields': [
					                               {'field': 'obsolete' , 'value' : 'true'},
					                               {'field': 'maxStringLength' , 'value' : '29'},
				                                   ],
				                                 },
				'eventType':                     { 'index': 1, 'type': 'ubyte', 'enum': 'OmEventType', # FIELD IS OBSOLETE
				                                   'meta-fields': [
					                               {'field': 'obsolete' , 'value' : 'true'},
				                                   ],
				                                 },
				'eventParameters':               { 'index': 2, 'type': 'table', 'tablename': 'EventParametersElement', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'collection'},
				                                   ],
				                                 },
				'internalEventType':             { 'index': 3, 'type': 'ubyte', 'enum': 'OmInternalEventType', }, 
				'orderInternalEventContext':     { 'index': 4, 'type': 'table', 'tablename': 'OrderInternalEventContext', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
				'ignoreDependencyTypeList':      { 'index': 5, 'type': 'table', 'tablename': 'IgnoreDependencyTypeElement', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'collection'},
				                                   ],
				                                 },
				'eventData':                     { 'index': 6, 'type': 'table', 'tablename': 'EventData', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
				'objectId':                      { 'index': 7, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '29'},
				                                   ],
				                                 },
				'businessObjectType':            { 'index': 8, 'type': 'ubyte', 'enum': 'OmBusinessObjectType', }, 
				'executionInternalEventContext': { 'index': 9, 'type': 'table', 'tablename': 'ExecutionInternalEventContext', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
			}, 
		}, 
		'PartialAcceptCancelOrderCommand': {
			'id': 319, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'orderId':            { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'externalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'quantity':           { 'index': 3, 'type': 'double', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'real'},
				                        ],
				                      },
			}, 
		}, 
		'PendingCancel': {
			'id': 100, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'orderId':               { 'index': 0, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'externalReferences':    { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
				'pendingCancelVersion':  { 'index': 2, 'type': 'int', }, 
				'cancelSendTime':        { 'index': 3, 'type': 'int', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'datetime'},
				                           ],
				                         },
				'orderVersion':          { 'index': 4, 'type': 'uint', }, 
				'oldExternalReferences': { 'index': 5, 'type': 'table', 'tablename': 'ExternalReference', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
			}, 
		}, 
		'PendingCorrection': {
			'id': 99, 
			'version': 10, 
			'publishable': 'true', 
			'columns': {
				'orderId':                             { 'index': 0, 'type': 'string', 
				                                         'meta-fields': [
					                                     {'field': 'maxStringLength' , 'value' : '29'},
				                                         ],
				                                       },
				'orderInstructionData':                { 'index': 1, 'type': 'table', 'tablename': 'OrderInstructionData', 
				                                         'meta-fields': [
					                                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                                         ],
				                                       },
				'externalReferences':                  { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                                         'meta-fields': [
					                                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                                         ],
				                                       },
				'pendingCorrectionVersion':            { 'index': 3, 'type': 'int', }, 
				'isCancelNewCorrection':               { 'index': 4, 'type': 'bool', }, 
				'correctionSendTime':                  { 'index': 5, 'type': 'int', 
				                                         'meta-fields': [
					                                     {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                         ],
				                                       },
				'orderVersion':                        { 'index': 6, 'type': 'uint', }, 
				'locateStatus':                        { 'index': 7, 'type': 'ubyte', 'enum': 'OmLocateStatus', }, 
				'externalReferencesToRemove':          { 'index': 8, 'type': 'table', 'tablename': 'ExternalReference', 
				                                         'meta-fields': [
					                                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                                         ],
				                                       },
				'autoForwardCorrection':               { 'index': 9, 'type': 'bool', }, 
				'isNonSourceInitiated':                { 'index': 10, 'type': 'bool', # FIELD IS OBSOLETE
				                                         'meta-fields': [
					                                     {'field': 'obsolete' , 'value' : 'true'},
				                                         ],
				                                       },
				'parentOrderGsuid':                    { 'index': 11, 'type': 'string', 
				                                         'meta-fields': [
					                                     {'field': 'maxStringLength' , 'value' : '29'},
				                                         ],
				                                       },
				'pendingCorrectionApprovalReferences': { 'index': 12, 'type': 'table', 'tablename': 'ApprovalTypeListMember', 
				                                         'meta-fields': [
					                                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                                         ],
				                                       },
			}, 
		}, 
		'PersistenceTransactionStatus': {
			'id': 66, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'datastreamName':   { 'index': 0, 'type': 'string', }, 
				'destinationName':  { 'index': 1, 'type': 'string', }, 
				'eventTime':        { 'index': 2, 'type': 'int', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'datetime'},
				                      ],
				                    },
				'sequenceNumber':   { 'index': 3, 'type': 'int', }, 
				'repositoryAction': { 'index': 4, 'type': 'ubyte', 'enum': 'OmRepositoryActionType', }, 
			}, 
		}, 
		'Placement': {
			'id': 112, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'executionPoint': { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '16'},
				                    ],
				                  },
				'orderType':      { 'index': 1, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'timeInForce':    { 'index': 2, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'quantity':       { 'index': 3, 'type': 'double', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'real'},
				                    ],
				                  },
				'limitPrice':     { 'index': 4, 'type': 'double', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'real'},
				                    ],
				                  },
				'siEligibility':  { 'index': 5, 'type': 'ubyte', 'enum': 'OmSiEligibility', }, 
			}, 
		}, 
		'PlacementDecision': {
			'id': 111, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'placementDecisionType':   { 'index': 0, 'type': 'ubyte', 'enum': 'OmPlacementDecisionType', }, 
				'placementDecisionReason': { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '150'},
				                             ],
				                           },
			}, 
		}, 
		'PlacementDetail': {
			'id': 528, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'destinationId':              { 'index': 0, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '20'},
				                                ],
				                              },
				'orderType':                  { 'index': 1, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'quantity':                   { 'index': 2, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'timeInForce':                { 'index': 3, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'limitPrice':                 { 'index': 4, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'pegType':                    { 'index': 5, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffset':                  { 'index': 6, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'tradingAlgorithm':           { 'index': 7, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '32'},
				                                ],
				                              },
				'tradingAlgorithmParameters': { 'index': 8, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '1024'},
				                                ],
				                              },
				'enhancedLiquidityPools':     { 'index': 9, 'type': 'table', 'tablename': 'EnhancedLiquidityPoolName', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
			}, 
		}, 
		'PlacementEvent': {
			'id': 113, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'placementDecisions': { 'index': 0, 'type': 'table', 'tablename': 'PlacementDecision', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'placements':         { 'index': 1, 'type': 'table', 'tablename': 'Placement', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'PosDupIdData': {
			'id': 31, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'posDupId':       { 'index': 0, 'type': 'string', }, 
				'posDupIdPrefix': { 'index': 1, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '50'},
				                    ],
				                  },
				'systemName':     { 'index': 2, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '32'},
				                    ],
				                  },
				'systemType':     { 'index': 3, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
			}, 
		}, 
		'PreviousTradeData': {
			'id': 409, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'exchangeMemberId': { 'index': 0, 'type': 'string', }, 
				'orderCapacity':    { 'index': 1, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':       { 'index': 2, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':    { 'index': 3, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
			}, 
		}, 
		'ProcessInfo': {
			'id': 151, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'networkAddress':     { 'index': 0, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '25'},
				                        ],
				                      },
				'instanceName':       { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '64'},
				                        ],
				                      },
				'processRole':        { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '16'},
				                        ],
				                      },
				'processName':        { 'index': 3, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '25'},
				                        ],
				                      },
				'runtimeEnvironment': { 'index': 4, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '25'},
				                        ],
				                      },
			}, 
		}, 
		'ProductInstrumentTypeCreditInformation': {
			'id': 471, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'productInstrumentType':            { 'index': 0, 'type': 'ubyte', 'enum': 'OmProductInstrumentType', }, 
				'currentNetOrderValue':             { 'index': 1, 'type': 'double', # FIELD IS OBSOLETE
				                                      'meta-fields': [
					                                  {'field': 'obsolete' , 'value' : 'true'},
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'maximumNetOrderValue':             { 'index': 2, 'type': 'double', # FIELD IS OBSOLETE
				                                      'meta-fields': [
					                                  {'field': 'obsolete' , 'value' : 'true'},
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'currentGrossOrderValue':           { 'index': 3, 'type': 'double', # FIELD IS OBSOLETE
				                                      'meta-fields': [
					                                  {'field': 'obsolete' , 'value' : 'true'},
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'maximumGrossOrderValue':           { 'index': 4, 'type': 'double', # FIELD IS OBSOLETE
				                                      'meta-fields': [
					                                  {'field': 'obsolete' , 'value' : 'true'},
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'currentCumulativeNetOrderValue':   { 'index': 5, 'type': 'double', # FIELD IS OBSOLETE
				                                      'meta-fields': [
					                                  {'field': 'obsolete' , 'value' : 'true'},
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'maximumCumulativeNetOrderValue':   { 'index': 6, 'type': 'double', # FIELD IS OBSOLETE
				                                      'meta-fields': [
					                                  {'field': 'obsolete' , 'value' : 'true'},
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'currentCumulativeGrossOrderValue': { 'index': 7, 'type': 'double', # FIELD IS OBSOLETE
				                                      'meta-fields': [
					                                  {'field': 'obsolete' , 'value' : 'true'},
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'maximumCumulativeGrossOrderValue': { 'index': 8, 'type': 'double', # FIELD IS OBSOLETE
				                                      'meta-fields': [
					                                  {'field': 'obsolete' , 'value' : 'true'},
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'currentNetExecutedValue':          { 'index': 9, 'type': 'double', # FIELD IS OBSOLETE
				                                      'meta-fields': [
					                                  {'field': 'obsolete' , 'value' : 'true'},
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'maximumNetExecutedValue':          { 'index': 10, 'type': 'double', # FIELD IS OBSOLETE
				                                      'meta-fields': [
					                                  {'field': 'obsolete' , 'value' : 'true'},
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'currentGrossExecutedValue':        { 'index': 11, 'type': 'double', # FIELD IS OBSOLETE
				                                      'meta-fields': [
					                                  {'field': 'obsolete' , 'value' : 'true'},
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'maximumGrossExecutedValue':        { 'index': 12, 'type': 'double', # FIELD IS OBSOLETE
				                                      'meta-fields': [
					                                  {'field': 'obsolete' , 'value' : 'true'},
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'creditType':                       { 'index': 13, 'type': 'ubyte', 'enum': 'OmCreditType', }, 
				'categoryCreditInformationList':    { 'index': 14, 'type': 'table', 'tablename': 'CategoryCreditInformation', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
			}, 
		}, 
		'ProductSynonym': {
			'id': 92, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'productId':     { 'index': 0, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '100'},
				                   ],
				                 },
				'productIdType': { 'index': 1, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
			}, 
		}, 
		'ProgramOrderIndex': {
			'id': 759, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'clientListId': { 'index': 0, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '128'},
				                  ],
				                },
				'orderIds':     { 'index': 1, 'type': 'table', 'tablename': 'OrderId', 
				                  'meta-fields': [
					              {'field': 'dictionaryType' , 'value' : 'collection'},
				                  ],
				                },
			}, 
		}, 
		'ProvidingBin': {
			'id': 419, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'providingBin': { 'index': 0, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '5'},
				                  ],
				                },
			}, 
		}, 
		'QueuedOrders': {
			'id': 688, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'orderQueueName': { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '64'},
				                    ],
				                  },
				'orderId':        { 'index': 1, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '29'},
				                    ],
				                  },
			}, 
		}, 
		'ReceivedMessageId': {
			'id': 408, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sequenceName':        { 'index': 0, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '50'},
				                         ],
				                       },
				'sequenceNumber':      { 'index': 1, 'type': 'int', }, 
				'messageCreationTime': { 'index': 2, 'type': 'int', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'datetime'},
				                         ],
				                       },
			}, 
		}, 
		'RediReportingInformation': {
			'id': 390, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'isFirstChildOrder':                { 'index': 0, 'type': 'bool', }, 
				'isFullParentQuantityChildOrder':   { 'index': 1, 'type': 'bool', }, 
				'parentOrderRediRefKey':            { 'index': 2, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '8'},
				                                      ],
				                                    },
				'clientOrderRediRefKey':            { 'index': 3, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '8'},
				                                      ],
				                                    },
				'clientOrderCreateDateTime':        { 'index': 4, 'type': 'int', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                      ],
				                                    },
				'parentOrderRediBranchSequence':    { 'index': 5, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '10'},
				                                      ],
				                                    },
				'clientOrderDestinationSystemType': { 'index': 6, 'type': 'ubyte', 'enum': 'OmExternalSystemType', }, 
				'clientOrderTradingAlgorithm':      { 'index': 7, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '32'},
				                                      ],
				                                    },
			}, 
		}, 
		'RegulatoryTimestamp': {
			'id': 604, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'regulatoryTimestamp':          { 'index': 0, 'type': 'int', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                  ],
				                                },
				'regulatoryTimestampType':      { 'index': 1, 'type': 'int', }, 
				'regulatoryTimestampOrigin':    { 'index': 2, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '12'},
				                                  ],
				                                },
				'deskType':                     { 'index': 3, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '2'},
				                                  ],
				                                },
				'deskTypeSource':               { 'index': 4, 'type': 'int', }, 
				'deskOrderHandlingInstruction': { 'index': 5, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '30'},
				                                  ],
				                                },
				'informationBarrierId':         { 'index': 6, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '12'},
				                                  ],
				                                },
			}, 
		}, 
		'RehomeOrderCommand': {
			'id': 320, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':       { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'orderId':             { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'externalReferences':  { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                         ],
				                       },
				'rehomeDestinationId': { 'index': 3, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '20'},
				                         ],
				                       },
			}, 
		}, 
		'ReinstateBasketCommand': {
			'id': 541, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'basket':        { 'index': 1, 'type': 'table', 'tablename': 'BasketNotification', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
			}, 
		}, 
		'ReinstateExecutionCommand': {
			'id': 515, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'execution':     { 'index': 1, 'type': 'table', 'tablename': 'ExecutionNotification', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
			}, 
		}, 
		'ReinstateOrderCommand': {
			'id': 513, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'order':         { 'index': 1, 'type': 'table', 'tablename': 'OrderNotification', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
			}, 
		}, 
		'ReinstatementFilterParameter': {
			'id': 518, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'filterParameterStr': { 'index': 0, 'type': 'string', }, 
			}, 
		}, 
		'ReinstatementViewFilter': {
			'id': 517, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'reinstatementFilterName':       { 'index': 0, 'type': 'string', }, 
				'reinstatementFilterParameters': { 'index': 1, 'type': 'table', 'tablename': 'ReinstatementFilterParameter', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'collection'},
				                                   ],
				                                 },
			}, 
		}, 
		'RejectApprovalRequestCommand': {
			'id': 678, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'rejectReason':  { 'index': 2, 'type': 'table', 'tablename': 'RejectReason', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'approvalTypes': { 'index': 3, 'type': 'table', 'tablename': 'ApprovalTypeListMember', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'collection'},
				                   ],
				                 },
				'approvalId':    { 'index': 4, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '12'},
				                   ],
				                 },
			}, 
		}, 
		'RejectBasketCommand': {
			'id': 336, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'basketId':           { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'externalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'RejectCancelBasketCommand': {
			'id': 341, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'basketId':           { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'externalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'RejectCancelExecutionCommand': {
			'id': 691, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'executionId':            { 'index': 0, 'type': 'string', 'aliases': ['execId'], 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'rejectReasons':          { 'index': 1, 'type': 'table', 'tablename': 'RejectReason', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'collection'},
				                            ],
				                          },
				'commandHeader':          { 'index': 2, 'type': 'table', 'tablename': 'CommandHeader', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'struct'},
				                            ],
				                          },
				'execExternalReferences': { 'index': 3, 'type': 'table', 'tablename': 'ExternalReference', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'collection'},
				                            ],
				                          },
			}, 
		}, 
		'RejectCancelOrderCommand': {
			'id': 51, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'orderId':            { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'rejectReasonText':   { 'index': 3, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '256'},
				                        ],
				                      },
				'rejectReasons':      { 'index': 4, 'type': 'table', 'tablename': 'RejectReason', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'RejectCorrectBasketCommand': {
			'id': 342, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'basketId':           { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'externalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'RejectCorrectOrderCommand': {
			'id': 45, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':        { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'externalReferences':   { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
				'orderId':              { 'index': 2, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'rejectReasonText':     { 'index': 3, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '256'},
				                          ],
				                        },
				'rejectReasons':        { 'index': 4, 'type': 'table', 'tablename': 'RejectReason', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
				'appliedControlLayers': { 'index': 5, 'type': 'table', 'tablename': 'AppliedControlLayer', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
			}, 
		}, 
		'RejectLocateRequestCommand': {
			'id': 367, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':    { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                      ],
				                    },
				'orderId':          { 'index': 1, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '29'},
				                      ],
				                    },
				'locateRequestId':  { 'index': 2, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '37'},
				                      ],
				                    },
				'rejectReasonText': { 'index': 3, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '256'},
				                      ],
				                    },
			}, 
		}, 
		'RejectOrderCommand': {
			'id': 43, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':        { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'externalReferences':   { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
				'orderId':              { 'index': 2, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'rejectReasonText':     { 'index': 3, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '256'},
				                          ],
				                        },
				'rejectReasons':        { 'index': 4, 'type': 'table', 'tablename': 'RejectReason', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
				'appliedControlLayers': { 'index': 5, 'type': 'table', 'tablename': 'AppliedControlLayer', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
			}, 
		}, 
		'RejectReason': {
			'id': 27, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'rejectReasonType': { 'index': 0, 'type': 'ubyte', 'enum': 'OmRejectReasonType', }, 
				'severity':         { 'index': 1, 'type': 'ubyte', 'enum': 'OmSeverity', # FIELD IS OBSOLETE
				                      'meta-fields': [
					                  {'field': 'obsolete' , 'value' : 'true'},
				                      ],
				                    },
				'rejectReasonText': { 'index': 2, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '256'},
				                      ],
				                    },
				'rejectingSystem':  { 'index': 3, 'type': 'ubyte', 'enum': 'OmRejectingSystem', }, 
			}, 
		}, 
		'RejectReserveLocateCommand': {
			'id': 378, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'posDupId':         { 'index': 0, 'type': 'string', }, 
				'rejectReasonText': { 'index': 1, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '256'},
				                      ],
				                    },
			}, 
		}, 
		'RelatedEntity': {
			'id': 25, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'relatedEntityType':  { 'index': 0, 'type': 'ubyte', 'enum': 'OmRelatedEntityType', }, 
				'relatedEntityGsuid': { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
			}, 
		}, 
		'RelatedEntityIndex': {
			'id': 133, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'entityId':                  { 'index': 0, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '29'},
				                               ],
				                             },
				'relatedEntityType':         { 'index': 1, 'type': 'ubyte', 'enum': 'OmRelatedEntityType', }, 
				'relatedEntityId':           { 'index': 2, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '29'},
				                               ],
				                             },
				'entityFirstVersion':        { 'index': 3, 'type': 'int', }, 
				'relatedEntityFirstVersion': { 'index': 4, 'type': 'int', }, 
			}, 
		}, 
		'ReleaseApprovalCommand': {
			'id': 681, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':         { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'buySell':               { 'index': 1, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'sellShort':             { 'index': 2, 'type': 'bool', }, 
				'sellShortExempt':       { 'index': 3, 'type': 'bool', }, 
				'productId':             { 'index': 4, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '100'},
				                           ],
				                         },
				'productIdType':         { 'index': 5, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'quantity':              { 'index': 6, 'type': 'double', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'real'},
				                           ],
				                         },
				'limitPrice':            { 'index': 7, 'type': 'double', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'real'},
				                           ],
				                         },
				'accounts':              { 'index': 8, 'type': 'table', 'tablename': 'Account', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
				'charges':               { 'index': 9, 'type': 'table', 'tablename': 'Charge', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
				'orderId':               { 'index': 10, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'investorId':            { 'index': 11, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '50'},
				                           ],
				                         },
				'executionPoint':        { 'index': 12, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '16'},
				                           ],
				                         },
				'subExecutionPoint':     { 'index': 13, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '16'},
				                           ],
				                         },
				'releaseApprovalReason': { 'index': 14, 'type': 'ubyte', 'enum': 'OmReleaseApprovalReason', }, 
				'approvalTypes':         { 'index': 15, 'type': 'table', 'tablename': 'ApprovalTypeListMember', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
				'approvalId':            { 'index': 16, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '12'},
				                           ],
				                         },
				'executedQuantity':      { 'index': 17, 'type': 'double', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'real'},
				                           ],
				                         },
				'referenceCharges':      { 'index': 18, 'type': 'table', 'tablename': 'Charge', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
			}, 
		}, 
		'ReleaseLocateCommand': {
			'id': 364, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':          { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'struct'},
				                            ],
				                          },
				'locateRequestId':        { 'index': 1, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '37'},
				                            ],
				                          },
				'releasedLocateQuantity': { 'index': 2, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'orderId':                { 'index': 3, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
			}, 
		}, 
		'ReleaseSendWithheldOrderCommand': {
			'id': 512, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                   { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'struct'},
				                                     ],
				                                   },
				'orderId':                         { 'index': 1, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '29'},
				                                     ],
				                                   },
				'externalReferences':              { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'orderType':                       { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'limitPrice':                      { 'index': 4, 'type': 'double', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'real'},
				                                     ],
				                                   },
				'executionPointOverride':          { 'index': 5, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '16'},
				                                     ],
				                                   },
				'maxTrancheSize':                  { 'index': 6, 'type': 'double', 'aliases': ['displaySize'], 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'real'},
				                                     ],
				                                   },
				'stopPrice':                       { 'index': 7, 'type': 'double', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'real'},
				                                     ],
				                                   },
				'tradingAlgorithm':                { 'index': 8, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '32'},
				                                     ],
				                                   },
				'pegType':                         { 'index': 9, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffset':                       { 'index': 10, 'type': 'double', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'real'},
				                                     ],
				                                   },
				'pegOffsetType':                   { 'index': 11, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'pegScope':                        { 'index': 12, 'type': 'ubyte', 'enum': 'OmPegScopeType', }, 
				'discretionaryReferencePriceType': { 'index': 13, 'type': 'ubyte', 'enum': 'OmDiscretionaryReferencePriceType', }, 
				'discretionaryOffset':             { 'index': 14, 'type': 'double', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'real'},
				                                     ],
				                                   },
				'discretionaryOffsetType':         { 'index': 15, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'orderbookVisibility':             { 'index': 16, 'type': 'ubyte', 'enum': 'OmOrderbookVisibilityType', }, 
				'offsetDirectionType':             { 'index': 17, 'type': 'ubyte', 'enum': 'OmOffsetDirectionType', }, 
				'subExecutionPointOverride':       { 'index': 18, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '16'},
				                                     ],
				                                   },
				'parameterizedLimitPrice':         { 'index': 19, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'struct'},
				                                     ],
				                                   },
				'resolveAllPrices':                { 'index': 20, 'type': 'bool', }, 
				'sellShort':                       { 'index': 21, 'type': 'bool', }, 
			}, 
		}, 
		'ReplayGuardFileData': {
			'id': 475, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'doRename':                 { 'index': 0, 'type': 'bool', }, 
				'replayGuardRecordUpdates': { 'index': 1, 'type': 'table', 'tablename': 'ReplayGuardRecordUpdate', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
			}, 
		}, 
		'ReplayGuardRecordUpdate': {
			'id': 476, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'updateTimestamp':  { 'index': 0, 'type': 'int', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'datetime'},
				                      ],
				                    },
				'recordVersion':    { 'index': 1, 'type': 'uint', }, 
				'tableId':          { 'index': 2, 'type': 'int', }, 
				'recordUpdateData': { 'index': 3, 'type': 'string', }, 
			}, 
		}, 
		'Request': {
			'id': 460, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'rmsMessage': { 'index': 0, 'type': 'table', 'tablename': 'Message', 
				                'meta-fields': [
					            {'field': 'dictionaryType' , 'value' : 'struct'},
				                ],
				              },
			}, 
		}, 
		'RequestApprovalCommand': {
			'id': 676, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':     { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'buySell':           { 'index': 1, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'sellShort':         { 'index': 2, 'type': 'bool', }, 
				'sellShortExempt':   { 'index': 3, 'type': 'bool', }, 
				'productId':         { 'index': 4, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '100'},
				                       ],
				                     },
				'productIdType':     { 'index': 5, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'quantity':          { 'index': 6, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'limitPrice':        { 'index': 7, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'accounts':          { 'index': 8, 'type': 'table', 'tablename': 'Account', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                       ],
				                     },
				'charges':           { 'index': 9, 'type': 'table', 'tablename': 'Charge', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                       ],
				                     },
				'orderId':           { 'index': 10, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '29'},
				                       ],
				                     },
				'investorId':        { 'index': 11, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '50'},
				                       ],
				                     },
				'executionPoint':    { 'index': 12, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '16'},
				                       ],
				                     },
				'subExecutionPoint': { 'index': 13, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '16'},
				                       ],
				                     },
				'approvalTypes':     { 'index': 14, 'type': 'table', 'tablename': 'ApprovalTypeListMember', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                       ],
				                     },
				'referenceCharges':  { 'index': 15, 'type': 'table', 'tablename': 'Charge', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                       ],
				                     },
				'positionOpenClose': { 'index': 16, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
			}, 
		}, 
		'RequestBasketImageCommand': {
			'id': 351, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'basketId':      { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
			}, 
		}, 
		'RequestCancelBasketCommand': {
			'id': 338, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'basketId':           { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'externalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'RequestCancelChildOrdersCommand': {
			'id': 356, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
			}, 
		}, 
		'RequestCancelExecutionCommand': {
			'id': 689, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'executionId':            { 'index': 0, 'type': 'string', 'aliases': ['execId'], 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'execExternalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'collection'},
				                            ],
				                          },
				'cancelReason':           { 'index': 2, 'type': 'ubyte', 'enum': 'OmCancelReason', }, 
				'commandHeader':          { 'index': 3, 'type': 'table', 'tablename': 'CommandHeader', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'struct'},
				                            ],
				                          },
			}, 
		}, 
		'RequestCancelMultiLegOrderCommand': {
			'id': 539, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':         { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'externalReferences':    { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
				'orderId':               { 'index': 2, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'oldExternalReferences': { 'index': 3, 'type': 'table', 'tablename': 'ExternalReference', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
			}, 
		}, 
		'RequestCancelOrderCommand': {
			'id': 50, 
			'version': 11, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':            { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                              ],
				                            },
				'externalReferences':       { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'orderId':                  { 'index': 2, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'oldExternalReferences':    { 'index': 3, 'type': 'table', 'tablename': 'ExternalReference', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'customerUser':             { 'index': 4, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '32'},
				                              ],
				                            },
				'ignoreMarketOnCloseCheck': { 'index': 5, 'type': 'bool', }, 
				'fixLineId':                { 'index': 6, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '32'},
				                              ],
				                            },
				'destinationTraderId':      { 'index': 7, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '30'},
				                              ],
				                            },
				'cancelRequestReason':      { 'index': 8, 'type': 'ubyte', 'enum': 'OmAdministrativeCancelRequestReason', # FIELD HAS BEEN DEPRECATED
				                              'meta-fields': [
					                          {'field': 'deprecated' , 'value' : 'true'},
				                              ],
				                            },
				'cancelReason':             { 'index': 9, 'type': 'ubyte', 'enum': 'OmCancelReason', }, 
				'fixClientType':            { 'index': 10, 'type': 'ubyte', 'enum': 'OmFixClientType', }, 
				'accessId':                 { 'index': 11, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'originatorIpAddress':      { 'index': 12, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '30'},
				                              ],
				                            },
				'originatorMacAddress':     { 'index': 13, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '20'},
				                              ],
				                            },
			}, 
		}, 
		'RequestCorrectBasketCommand': {
			'id': 337, 
			'version': 8, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':               { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'basketId':                    { 'index': 1, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'basketName':                  { 'index': 2, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'basketType':                  { 'index': 3, 'type': 'ubyte', 'enum': 'OmBasketType', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
				                                 ],
				                               },
				'orderCount':                  { 'index': 4, 'type': 'int', }, 
				'creatorId':                   { 'index': 5, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                 'meta-fields': [
					                             {'field': 'deprecated' , 'value' : 'true'},
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'destinationPartition':        { 'index': 6, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '32'},
				                                 ],
				                               },
				'opaqueBasketData':            { 'index': 7, 'type': 'binary', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'blob'},
				                                 ],
				                               },
				'accessId':                    { 'index': 8, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '29'},
				                                 ],
				                               },
				'externalReferences':          { 'index': 9, 'type': 'table', 'tablename': 'ExternalReference', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'basketRtlCategory':           { 'index': 10, 'type': 'table', 'tablename': 'BasketRtlCategory', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'calculatedBasketRtlCategory': { 'index': 11, 'type': 'table', 'tablename': 'BasketRtlCategory', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'basketDescription':           { 'index': 12, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '50'},
				                                 ],
				                               },
				'automationStrategy':          { 'index': 13, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '16'},
				                                 ],
				                               },
				'basketCategory':              { 'index': 14, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '16'},
				                                 ],
				                               },
				'visibilityGroups':            { 'index': 15, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
			}, 
		}, 
		'RequestCorrectMultiLegOrderCommand': {
			'id': 538, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':         { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'externalReferences':    { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
				'orderId':               { 'index': 2, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'quantity':              { 'index': 3, 'type': 'double', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'real'},
				                           ],
				                         },
				'timeInForce':           { 'index': 4, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'allOrNone':             { 'index': 5, 'type': 'bool', }, 
				'orderType':             { 'index': 6, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'limitPrice':            { 'index': 7, 'type': 'double', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'real'},
				                           ],
				                         },
				'capitalCommitCategory': { 'index': 8, 'type': 'ubyte', 'enum': 'OmCapitalCommitCategory', }, 
				'formatError':           { 'index': 9, 'type': 'table', 'tablename': 'FormatError', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'oldExternalReferences': { 'index': 10, 'type': 'table', 'tablename': 'ExternalReference', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
			}, 
		}, 
		'RequestCorrectOrderApprovalCommand': {
			'id': 679, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'buySell':            { 'index': 1, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'sellShort':          { 'index': 2, 'type': 'bool', }, 
				'sellShortExempt':    { 'index': 3, 'type': 'bool', }, 
				'productId':          { 'index': 4, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '100'},
				                        ],
				                      },
				'productIdType':      { 'index': 5, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'quantity':           { 'index': 6, 'type': 'double', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'real'},
				                        ],
				                      },
				'limitPrice':         { 'index': 7, 'type': 'double', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'real'},
				                        ],
				                      },
				'accounts':           { 'index': 8, 'type': 'table', 'tablename': 'Account', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'charges':            { 'index': 9, 'type': 'table', 'tablename': 'Charge', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'orderId':            { 'index': 10, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'investorId':         { 'index': 11, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '50'},
				                        ],
				                      },
				'executionPoint':     { 'index': 12, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '16'},
				                        ],
				                      },
				'subExecutionPoint':  { 'index': 13, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '16'},
				                        ],
				                      },
				'approvalTypes':      { 'index': 14, 'type': 'table', 'tablename': 'ApprovalTypeListMember', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'approvalCorrection': { 'index': 15, 'type': 'table', 'tablename': 'ApprovalCorrection', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'approvalId':         { 'index': 16, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '12'},
				                        ],
				                      },
				'referenceCharges':   { 'index': 17, 'type': 'table', 'tablename': 'Charge', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'positionOpenClose':  { 'index': 18, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
			}, 
		}, 
		'RequestCorrectOrderCommand': {
			'id': 44, 
			'version': 116, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                                { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'externalReferences':                           { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'externalReferenceTagReplacement':              { 'index': 2, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '64'},
				                                                  ],
				                                                },
				'orderId':                                      { 'index': 3, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '29'},
				                                                  ],
				                                                },
				'quantity':                                     { 'index': 4, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'orderType':                                    { 'index': 5, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'timeInForce':                                  { 'index': 6, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'limitPrice':                                   { 'index': 7, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'notHeld':                                      { 'index': 8, 'type': 'bool', }, 
				'executionPointOverride':                       { 'index': 9, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '16'},
				                                                  ],
				                                                },
				'executionCurrency':                            { 'index': 10, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '3'},
				                                                  ],
				                                                },
				'settlementCurrency':                           { 'index': 11, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '3'},
				                                                  ],
				                                                },
				'maxTrancheSize':                               { 'index': 12, 'type': 'double', 'aliases': ['displaySize'], 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'orderCapacity':                                { 'index': 13, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':                                   { 'index': 14, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':                                { 'index': 15, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'crossConsent':                                 { 'index': 16, 'type': 'ubyte', 'enum': 'OmCrossingOption', }, 
				'charges':                                      { 'index': 17, 'type': 'table', 'tablename': 'Charge', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'stopPrice':                                    { 'index': 18, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'settlementDateCalcMethod':                     { 'index': 19, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'settlementDate':                               { 'index': 20, 'type': 'int', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                  ],
				                                                },
				'startDateTime':                                { 'index': 21, 'type': 'int', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                  ],
				                                                },
				'expirationDateTime':                           { 'index': 22, 'type': 'int', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                  ],
				                                                },
				'sellShort':                                    { 'index': 23, 'type': 'bool', }, 
				'sellShortExempt':                              { 'index': 24, 'type': 'bool', }, 
				'positionOpenClose':                            { 'index': 25, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'tradingAlgorithm':                             { 'index': 26, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '32'},
				                                                  ],
				                                                },
				'capitalCommitQuantity':                        { 'index': 27, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'capitalCommitPrice':                           { 'index': 28, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'protectionType':                               { 'index': 29, 'type': 'ubyte', 'enum': 'OmProtectionType', }, 
				'verbalAgreementTimestamp':                     { 'index': 30, 'type': 'int', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                  ],
				                                                },
				'capitalCommitTime':                            { 'index': 31, 'type': 'int', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                  ],
				                                                },
				'capitalCommitType':                            { 'index': 32, 'type': 'ubyte', 'enum': 'OmCapitalCommitType', }, 
				'comments':                                     { 'index': 33, 'type': 'table', 'tablename': 'Comment', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'clientConsents':                               { 'index': 34, 'type': 'ubyte', 'enum': 'OmClientConsents', }, 
				'allOrNone':                                    { 'index': 35, 'type': 'bool', }, 
				'customerUser':                                 { 'index': 36, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '32'},
				                                                  ],
				                                                },
				'oldExternalReferences':                        { 'index': 37, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'chargesAdd':                                   { 'index': 38, 'type': 'table', 'tablename': 'Charge', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'chargesRemove':                                { 'index': 39, 'type': 'table', 'tablename': 'Charge', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'commentsAdd':                                  { 'index': 40, 'type': 'table', 'tablename': 'Comment', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'commentsRemove':                               { 'index': 41, 'type': 'table', 'tablename': 'Comment', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'allocationAccounts':                           { 'index': 42, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'allocationAccountsAdd':                        { 'index': 43, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'allocationAccountsRemove':                     { 'index': 44, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'smartRouteConsent':                            { 'index': 45, 'type': 'ubyte', 'enum': 'OmSmartRoutingOption', }, 
				'accounts':                                     { 'index': 46, 'type': 'table', 'tablename': 'Account', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'accountsToAdd':                                { 'index': 47, 'type': 'table', 'tablename': 'Account', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'accountsToRemove':                             { 'index': 48, 'type': 'table', 'tablename': 'Account', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'siEligibility':                                { 'index': 49, 'type': 'ubyte', 'enum': 'OmSiEligibility', }, 
				'tradingAlgorithmParameters':                   { 'index': 50, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '1024'},
				                                                  ],
				                                                },
				'clientStarId':                                 { 'index': 51, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '10'},
				                                                  ],
				                                                },
				'clientFixAcronym':                             { 'index': 52, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '20'},
				                                                  ],
				                                                },
				'pegType':                                      { 'index': 53, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffset':                                    { 'index': 54, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'pegOffsetType':                                { 'index': 55, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'pegScope':                                     { 'index': 56, 'type': 'ubyte', 'enum': 'OmPegScopeType', }, 
				'discretionaryReferencePriceType':              { 'index': 57, 'type': 'ubyte', 'enum': 'OmDiscretionaryReferencePriceType', }, 
				'discretionaryOffset':                          { 'index': 58, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'discretionaryOffsetType':                      { 'index': 59, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'orderbookVisibility':                          { 'index': 60, 'type': 'ubyte', 'enum': 'OmOrderbookVisibilityType', }, 
				'offsetDirectionType':                          { 'index': 61, 'type': 'ubyte', 'enum': 'OmOffsetDirectionType', }, 
				'isSalesManagedOrder':                          { 'index': 62, 'type': 'bool', }, 
				'isTraderAssignmentOrder':                      { 'index': 63, 'type': 'bool', }, 
				'isTraderManagedOrder':                         { 'index': 64, 'type': 'bool', }, 
				'isInternallyRoutableOrder':                    { 'index': 65, 'type': 'bool', }, 
				'creatorId':                                    { 'index': 66, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
					                                              {'field': 'maxStringLength' , 'value' : '29'},
				                                                  ],
				                                                },
				'basketId':                                     { 'index': 67, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
					                                              {'field': 'maxStringLength' , 'value' : '29'},
				                                                  ],
				                                                },
				'clientProductId':                              { 'index': 68, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '64'},
				                                                  ],
				                                                },
				'subExecutionPointOverride':                    { 'index': 69, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '16'},
				                                                  ],
				                                                },
				'isTradingChildOrder':                          { 'index': 70, 'type': 'bool', }, 
				'executionAttributionStrategy':                 { 'index': 71, 'type': 'ubyte', 'enum': 'OmExecutionAttributionStrategy', }, 
				'accessId':                                     { 'index': 72, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '29'},
				                                                  ],
				                                                },
				'minExecutableQuantity':                        { 'index': 73, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'minDiscretionaryQuantity':                     { 'index': 74, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'tradingPhase':                                 { 'index': 75, 'type': 'ubyte', 'enum': 'OmTradingPhase', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
				                                                  ],
				                                                },
				'routingStrategy':                              { 'index': 76, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '50'},
				                                                  ],
				                                                },
				'doNotIncrease':                                { 'index': 77, 'type': 'bool', }, 
				'doNotReduce':                                  { 'index': 78, 'type': 'bool', }, 
				'interMarketSweep':                             { 'index': 79, 'type': 'bool', }, 
				'destinationMarketOnly':                        { 'index': 80, 'type': 'bool', }, 
				'buyToCover':                                   { 'index': 81, 'type': 'bool', }, 
				'locateInformationList':                        { 'index': 82, 'type': 'table', 'tablename': 'LocateInformation', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'complianceOrderId':                            { 'index': 83, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '200'},
				                                                  ],
				                                                },
				'accessIdType':                                 { 'index': 84, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'partOfProgram':                                { 'index': 85, 'type': 'bool', }, 
				'arbitrageStrategy':                            { 'index': 86, 'type': 'ubyte', 'enum': 'OmArbitrageStrategy', }, 
				'algorithmicIndicator':                         { 'index': 87, 'type': 'ubyte', 'enum': 'OmAlgorithmicIndicator', }, 
				'trancheSizeDisplayRange':                      { 'index': 88, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'shouldIndicateOrder':                          { 'index': 89, 'type': 'bool', }, 
				'indicationQuantity':                           { 'index': 90, 'type': 'int', }, 
				'ignoreImbalanceCheck':                         { 'index': 91, 'type': 'bool', }, 
				'tradeViaInternalAlgorithm':                    { 'index': 92, 'type': 'bool', }, 
				'minimumDisplaySize':                           { 'index': 93, 'type': 'double', # FIELD IS OBSOLETE
				                                                  'meta-fields': [
					                                              {'field': 'obsolete' , 'value' : 'true'},
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'maximumDisplaySize':                           { 'index': 94, 'type': 'double', # FIELD IS OBSOLETE
				                                                  'meta-fields': [
					                                              {'field': 'obsolete' , 'value' : 'true'},
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'sigmaAlgorithm':                               { 'index': 95, 'type': 'ubyte', 'enum': 'OmSigmaAlgorithm', }, 
				'sigmaAlgorithmParameters':                     { 'index': 96, 'type': 'table', 'tablename': 'SigmaAlgorithmParameter', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'fixTextInstruction':                           { 'index': 97, 'type': 'string', 'aliases': ['clientAccountName','clientFixAccount'], 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '32'},
				                                                  ],
				                                                },
				'buySell':                                      { 'index': 98, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'productIdType':                                { 'index': 99, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'productId':                                    { 'index': 100, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '100'},
				                                                  ],
				                                                },
				'clientProductIdSuffix':                        { 'index': 101, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '8'},
				                                                  ],
				                                                },
				'formatError':                                  { 'index': 102, 'type': 'table', 'tablename': 'FormatError', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'dropCopyOms':                                  { 'index': 103, 'type': 'string', }, 
				'ignoreMarketOnCloseCheck':                     { 'index': 104, 'type': 'bool', }, 
				'consolidatedRegulatoryCode':                   { 'index': 105, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'clientListId':                                 { 'index': 106, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '128'},
				                                                  ],
				                                                },
				'doNotWaitForLocateResponse':                   { 'index': 107, 'type': 'bool', }, 
				'isLocateRequested':                            { 'index': 108, 'type': 'bool', }, 
				'locateRequesterIdPreferenceList':              { 'index': 109, 'type': 'table', 'tablename': 'LocateRequesterIdPreferenceListMember', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'parameterizedLimitPrice':                      { 'index': 110, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'resolveAllPrices':                             { 'index': 111, 'type': 'bool', }, 
				'isGsamAdvisory':                               { 'index': 112, 'type': 'bool', }, 
				'isSolicitedOrder':                             { 'index': 113, 'type': 'bool', }, 
				'isPartialOutEligible':                         { 'index': 114, 'type': 'bool', }, 
				'interventionConsent':                          { 'index': 115, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
				'brokerBillingType':                            { 'index': 116, 'type': 'ubyte', 'enum': 'OmBrokerBillingType', }, 
				'aggUnitName':                                  { 'index': 117, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
					                                              {'field': 'maxStringLength' , 'value' : '16'},
				                                                  ],
				                                                },
				'restrictedTradingListOverride':                { 'index': 118, 'type': 'table', 'tablename': 'RestrictedTradingListOverride', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'profitSplitOption':                            { 'index': 119, 'type': 'ubyte', 'enum': 'OmProfitSplitOption', }, 
				'primaryPartyType':                             { 'index': 120, 'type': 'ubyte', 'enum': 'OmPrimaryPartyType', }, 
				'customerPartyType':                            { 'index': 121, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'visibilityGroups':                             { 'index': 122, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'fixLineId':                                    { 'index': 123, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '32'},
				                                                  ],
				                                                },
				'businessUnit':                                 { 'index': 124, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '16'},
				                                                  ],
				                                                },
				'basketExternalReferences':                     { 'index': 125, 'type': 'table', 'tablename': 'ExternalReference', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'regNmsExemptionType':                          { 'index': 126, 'type': 'ubyte', 'enum': 'OmRegNmsExemptionType', }, 
				'currentOwner':                                 { 'index': 127, 'type': 'string', # FIELD IS OBSOLETE
				                                                  'meta-fields': [
					                                              {'field': 'obsolete' , 'value' : 'true'},
					                                              {'field': 'maxStringLength' , 'value' : '10'},
				                                                  ],
				                                                },
				'sourceSystemOwner':                            { 'index': 128, 'type': 'string', # FIELD IS OBSOLETE
				                                                  'meta-fields': [
					                                              {'field': 'obsolete' , 'value' : 'true'},
					                                              {'field': 'maxStringLength' , 'value' : '10'},
				                                                  ],
				                                                },
				'clientConsentsName':                           { 'index': 129, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '30'},
				                                                  ],
				                                                },
				'minSpreadConstraint':                          { 'index': 130, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'regulatoryReportDomain':                       { 'index': 131, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'sourceRegulatoryReportDomain':                 { 'index': 132, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'opaqueOrderData':                              { 'index': 133, 'type': 'binary', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
					                                              {'field': 'dictionaryType' , 'value' : 'blob'},
				                                                  ],
				                                                },
				'sourceOwner':                                  { 'index': 134, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '20'},
				                                                  ],
				                                                },
				'automationStrategy':                           { 'index': 135, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '16'},
				                                                  ],
				                                                },
				'primaryBasketExternalReference':               { 'index': 136, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'secondaryBasketExternalReferences':            { 'index': 137, 'type': 'table', 'tablename': 'BasketExternalReference', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'shouldAdvertiseExecutions':                    { 'index': 138, 'type': 'bool', }, 
				'isImbalanceOffsetOnly':                        { 'index': 139, 'type': 'bool', }, 
				'marketSession':                                { 'index': 140, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'locateInformationsToAdd':                      { 'index': 141, 'type': 'table', 'tablename': 'LocateInformation', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'locateInformationsToRemove':                   { 'index': 142, 'type': 'table', 'tablename': 'LocateInformation', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'locateRequesterIdPreferencesToAdd':            { 'index': 143, 'type': 'table', 'tablename': 'LocateRequesterIdPreferenceListMember', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'locateRequesterIdPreferencesToRemove':         { 'index': 144, 'type': 'table', 'tablename': 'LocateRequesterIdPreferenceListMember', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'tsorAlgorithm':                                { 'index': 145, 'type': 'string', # FIELD IS OBSOLETE
				                                                  'meta-fields': [
					                                              {'field': 'obsolete' , 'value' : 'true'},
					                                              {'field': 'maxStringLength' , 'value' : '16'},
				                                                  ],
				                                                },
				'tsorAlgorithmParameters':                      { 'index': 146, 'type': 'string', # FIELD IS OBSOLETE
				                                                  'meta-fields': [
					                                              {'field': 'obsolete' , 'value' : 'true'},
					                                              {'field': 'maxStringLength' , 'value' : '128'},
				                                                  ],
				                                                },
				'tradingAlgorithmEngine':                       { 'index': 147, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '32'},
				                                                  ],
				                                                },
				'isMinimumGuaranteedFillEligible':              { 'index': 148, 'type': 'bool', }, 
				'tsxRegulationCode':                            { 'index': 149, 'type': 'string', # FIELD IS OBSOLETE
				                                                  'meta-fields': [
					                                              {'field': 'obsolete' , 'value' : 'true'},
					                                              {'field': 'maxStringLength' , 'value' : '2'},
				                                                  ],
				                                                },
				'clientMembershipId':                           { 'index': 150, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '30'},
				                                                  ],
				                                                },
				'tradingStyle':                                 { 'index': 151, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '20'},
				                                                  ],
				                                                },
				'provideLiquidityOnly':                         { 'index': 152, 'type': 'bool', }, 
				'hideMembershipIdAtDestination':                { 'index': 153, 'type': 'bool', }, 
				'flowSpecificCanada':                           { 'index': 154, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'secShortSellExemptionReason':                  { 'index': 155, 'type': 'ubyte', 'enum': 'OmSecShortSellExemptionReason', }, 
				'visibilityGroupsToAdd':                        { 'index': 156, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'visibilityGroupsToRemove':                     { 'index': 157, 'type': 'table', 'tablename': 'VisibilityGroup', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'externalReferencesToRemove':                   { 'index': 158, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'destinationTraderId':                          { 'index': 159, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '30'},
				                                                  ],
				                                                },
				'clientOrderQuantity':                          { 'index': 160, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'attemptAutoAccept':                            { 'index': 161, 'type': 'bool', }, 
				'marginType':                                   { 'index': 162, 'type': 'ubyte', 'enum': 'OmMarginType', }, 
				'indicationPolicyParameters':                   { 'index': 163, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '20'},
				                                                  ],
				                                                },
				'opaqueOrderDataItemsToRemove':                 { 'index': 164, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'opaqueOrderDataItemsToSet':                    { 'index': 165, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'customerOeId':                                 { 'index': 166, 'type': 'string', 'aliases': ['customerOeid'], 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '32'},
				                                                  ],
				                                                },
				'fixClientType':                                { 'index': 167, 'type': 'ubyte', 'enum': 'OmFixClientType', }, 
				'advertisingPolicyParameters':                  { 'index': 168, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '20'},
				                                                  ],
				                                                },
				'rediReportingInformation':                     { 'index': 169, 'type': 'table', 'tablename': 'RediReportingInformation', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'fixClientInformation':                         { 'index': 170, 'type': 'table', 'tablename': 'FixClientInformation', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'brokerDealerOatsAttributes':                   { 'index': 171, 'type': 'table', 'tablename': 'BrokerDealerOatsAttributes', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'destinationId':                                { 'index': 172, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '20'},
				                                                  ],
				                                                },
				'approvalInformationsToAdd':                    { 'index': 173, 'type': 'table', 'tablename': 'ApprovalInformation', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'approvalInformationsToRemove':                 { 'index': 174, 'type': 'table', 'tablename': 'ApprovalInformation', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'regRepCode':                                   { 'index': 175, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '5'},
				                                                  ],
				                                                },
				'isWorkupOrder':                                { 'index': 176, 'type': 'bool', }, 
				'isCDSPassiveOrder':                            { 'index': 177, 'type': 'bool', }, 
				'workupSessionId':                              { 'index': 178, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '12'},
				                                                  ],
				                                                },
				'minimumIOCPriceImprovement':                   { 'index': 179, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'minimumAggressorRestTime':                     { 'index': 180, 'type': 'int', }, 
				'syntheticType':                                { 'index': 181, 'type': 'ubyte', 'enum': 'OmSyntheticType', }, 
				'customerOeIdType':                             { 'index': 182, 'type': 'ubyte', 'enum': 'OmOrganizationalEntityIdType', }, 
				'isCloakedOrder':                               { 'index': 183, 'type': 'bool', }, 
				'regNmsSweepWaivedClientUserId':                { 'index': 184, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '30'},
				                                                  ],
				                                                },
				'visibilityUserList':                           { 'index': 185, 'type': 'table', 'tablename': 'VisibilityUserId', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'tradingAlgorithmPrivateParameters':            { 'index': 186, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '1024'},
				                                                  ],
				                                                },
				'syntheticDetails':                             { 'index': 187, 'type': 'table', 'tablename': 'SyntheticDetails', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'enhancedLiquidityPools':                       { 'index': 188, 'type': 'table', 'tablename': 'EnhancedLiquidityPoolName', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'exchangeRates':                                { 'index': 189, 'type': 'table', 'tablename': 'ExchangeRate', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'tradingCountryOverride':                       { 'index': 190, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '2'},
				                                                  ],
				                                                },
				'providingBins':                                { 'index': 191, 'type': 'table', 'tablename': 'ProvidingBin', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'matchingBins':                                 { 'index': 192, 'type': 'table', 'tablename': 'MatchingBin', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'isNonSourceInitiated':                         { 'index': 193, 'type': 'bool', # FIELD IS OBSOLETE
				                                                  'meta-fields': [
					                                              {'field': 'obsolete' , 'value' : 'true'},
				                                                  ],
				                                                },
				'capitalCommitCategory':                        { 'index': 194, 'type': 'ubyte', 'enum': 'OmCapitalCommitCategory', }, 
				'facilitatedOrdersToAdd':                       { 'index': 195, 'type': 'table', 'tablename': 'OrderId', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'clientAlgorithmCategory':                      { 'index': 196, 'type': 'ubyte', 'enum': 'OmClientAlgorithmCategory', }, 
				'clientCustomerPartyType':                      { 'index': 197, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'relatedOptionOrderExternalReferences':         { 'index': 198, 'type': 'table', 'tablename': 'ExternalReference', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'salesAttributionUser':                         { 'index': 199, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '10'},
				                                                  ],
				                                                },
				'flowIdentifier':                               { 'index': 200, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'destinationFlowIdentifier':                    { 'index': 201, 'type': 'table', 'tablename': 'FlowIdentification', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'externalTradingAlgorithmDetails':              { 'index': 202, 'type': 'table', 'tablename': 'ExternalTradingAlgorithmDetails', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'clientAccessId':                               { 'index': 203, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '29'},
				                                                  ],
				                                                },
				'iosAccountExchangeCrossReference':             { 'index': 204, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
					                                              {'field': 'maxStringLength' , 'value' : '10'},
				                                                  ],
				                                                },
				'disableRealTimeExecutionNotification':         { 'index': 205, 'type': 'bool', }, 
				'appliedControlLayers':                         { 'index': 206, 'type': 'table', 'tablename': 'AppliedControlLayer', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'isAustraliaUndisclosedOrder':                  { 'index': 207, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
				                                                  ],
				                                                },
				'isOptionStrategyEquityLeg':                    { 'index': 208, 'type': 'bool', }, 
				'parentOrderGsuid':                             { 'index': 209, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '29'},
				                                                  ],
				                                                },
				'destinationAllowedBrokers':                    { 'index': 210, 'type': 'table', 'tablename': 'BrokerInfo', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'originatorIpAddress':                          { 'index': 211, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '30'},
				                                                  ],
				                                                },
				'originatorMacAddress':                         { 'index': 212, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '20'},
				                                                  ],
				                                                },
				'referenceCharges':                             { 'index': 213, 'type': 'table', 'tablename': 'Charge', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'referenceChargesAdd':                          { 'index': 214, 'type': 'table', 'tablename': 'Charge', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'referenceChargesRemove':                       { 'index': 215, 'type': 'table', 'tablename': 'Charge', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'tradingAlgorithmSequence':                     { 'index': 216, 'type': 'table', 'tablename': 'TradingAlgorithmSequence', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'flowSpecificAustralia':                        { 'index': 217, 'type': 'table', 'tablename': 'FlowSpecificAustralia', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'selfMatchPreventionId':                        { 'index': 218, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '12'},
				                                                  ],
				                                                },
				'isClientRequestedSendWithheldOrder':           { 'index': 219, 'type': 'bool', }, 
				'apolloTurnaroundInfoList':                     { 'index': 220, 'type': 'table', 'tablename': 'ApolloTurnaroundInfo', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'isOddLot':                                     { 'index': 221, 'type': 'bool', }, 
				'isClientBookable':                             { 'index': 222, 'type': 'bool', }, 
				'allocationSubAccounts':                        { 'index': 223, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'allocationSubAccountsAdd':                     { 'index': 224, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'allocationSubAccountsRemove':                  { 'index': 225, 'type': 'table', 'tablename': 'AllocationAccount', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'hedgeDestinationId':                           { 'index': 226, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '20'},
				                                                  ],
				                                                },
				'minExecutableNotionalValue':                   { 'index': 227, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'minSingleExecutionQuantity':                   { 'index': 228, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'minSingleExecutionNotionalValue':              { 'index': 229, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'isMinExecutableQuantityResidualNotExecutable': { 'index': 230, 'type': 'bool', }, 
				'isMinExecutableQuantityMinExecutionSize':      { 'index': 231, 'type': 'bool', }, 
				'bypassSyntheticValidations':                   { 'index': 232, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
				                                                  ],
				                                                },
			}, 
		}, 
		'RequestExecutionImageCommand': {
			'id': 127, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':          { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'struct'},
				                            ],
				                          },
				'executionId':            { 'index': 1, 'type': 'string', 'aliases': ['execId'], 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'execExternalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'collection'},
				                            ],
				                          },
			}, 
		}, 
		'RequestExpireOrderCommand': {
			'id': 418, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'orderId':            { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
			}, 
		}, 
		'RequestIndicationImageCommand': {
			'id': 709, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'indicationId':  { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
			}, 
		}, 
		'RequestLiquidityImageCommand': {
			'id': 736, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'liquidityId':   { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
			}, 
		}, 
		'RequestLocateCommand': {
			'id': 363, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                   { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'struct'},
				                                     ],
				                                   },
				'productId':                       { 'index': 1, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '100'},
				                                     ],
				                                   },
				'productIdType':                   { 'index': 2, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'locateRequestId':                 { 'index': 3, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '37'},
				                                     ],
				                                   },
				'locateRequesterIdPreferenceList': { 'index': 4, 'type': 'table', 'tablename': 'LocateRequesterIdPreferenceListMember', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'locateQuantity':                  { 'index': 5, 'type': 'double', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'real'},
				                                     ],
				                                   },
				'rejectIfInventoryUnavailable':    { 'index': 6, 'type': 'bool', }, 
				'ignoreStalenessCheck':            { 'index': 7, 'type': 'bool', }, 
				'orderId':                         { 'index': 8, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '29'},
				                                     ],
				                                   },
			}, 
		}, 
		'RequestLocateDetailsCommand': {
			'id': 365, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':    { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                      ],
				                    },
				'locateRequestId':  { 'index': 1, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '37'},
				                      ],
				                    },
				'executedQuantity': { 'index': 2, 'type': 'double', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'real'},
				                      ],
				                    },
				'orderId':          { 'index': 3, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '29'},
				                      ],
				                    },
			}, 
		}, 
		'RequestLocateForOrderCommand': {
			'id': 369, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'orderId':            { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'externalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'RequestMassCancelCommand': {
			'id': 345, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'customerUser':  { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '32'},
				                   ],
				                 },
				'fixLineId':     { 'index': 2, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '32'},
				                   ],
				                 },
			}, 
		}, 
		'RequestOrderImageCommand': {
			'id': 126, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'orderId':            { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'externalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'RequestReinstateExecutionsCommand': {
			'id': 516, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':            { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                              ],
				                            },
				'reinstatementViewName':    { 'index': 1, 'type': 'string', }, 
				'reinstatementViewFilters': { 'index': 2, 'type': 'table', 'tablename': 'ReinstatementViewFilter', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
			}, 
		}, 
		'RequestReinstateOrdersCommand': {
			'id': 514, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':            { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                              ],
				                            },
				'reinstatementViewName':    { 'index': 1, 'type': 'string', }, 
				'reinstatementViewFilters': { 'index': 2, 'type': 'table', 'tablename': 'ReinstatementViewFilter', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
			}, 
		}, 
		'RequestResponseCommand': {
			'id': 96, 
			'version': 45, 
			'publishable': 'true', 
			'columns': {
				'acceptCancelOrderCommand':                { 'index': 0, 'type': 'table', 'tablename': 'AcceptCancelOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'acceptCorrectOrderCommand':               { 'index': 1, 'type': 'table', 'tablename': 'AcceptCorrectOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'acceptOrderCommand':                      { 'index': 2, 'type': 'table', 'tablename': 'AcceptOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'cancelExecutionCommand':                  { 'index': 3, 'type': 'table', 'tablename': 'CancelExecutionCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'correctExecutionCommand':                 { 'index': 4, 'type': 'table', 'tablename': 'CorrectExecutionCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'createChildOrderCommand':                 { 'index': 5, 'type': 'table', 'tablename': 'CreateChildOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'createExecutionCommand':                  { 'index': 6, 'type': 'table', 'tablename': 'CreateExecutionCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'createOrderCommand':                      { 'index': 7, 'type': 'table', 'tablename': 'CreateOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'rejectCancelOrderCommand':                { 'index': 8, 'type': 'table', 'tablename': 'RejectCancelOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'rejectCorrectOrderCommand':               { 'index': 9, 'type': 'table', 'tablename': 'RejectCorrectOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'rejectOrderCommand':                      { 'index': 10, 'type': 'table', 'tablename': 'RejectOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestCancelOrderCommand':               { 'index': 11, 'type': 'table', 'tablename': 'RequestCancelOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestCorrectOrderCommand':              { 'index': 12, 'type': 'table', 'tablename': 'RequestCorrectOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'vikingAcceptCancelRequest':               { 'index': 13, 'type': 'table', 'tablename': 'VikingAcceptCancelRequest', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'vikingAcceptCorrectionRequest':           { 'index': 14, 'type': 'table', 'tablename': 'VikingAcceptCorrectionRequest', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'vikingDoneForDay':                        { 'index': 15, 'type': 'table', 'tablename': 'VikingDoneForDay', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'vikingExecution':                         { 'index': 16, 'type': 'table', 'tablename': 'VikingExecution', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'vikingNothingDone':                       { 'index': 17, 'type': 'table', 'tablename': 'VikingNothingDone', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'vikingOrderAccept':                       { 'index': 18, 'type': 'table', 'tablename': 'VikingOrderAccept', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'vikingOrderReject':                       { 'index': 19, 'type': 'table', 'tablename': 'VikingOrderReject', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'vikingRejectCancel':                      { 'index': 20, 'type': 'table', 'tablename': 'VikingRejectCancel', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'vikingRejectCorrection':                  { 'index': 21, 'type': 'table', 'tablename': 'VikingRejectCorrection', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'adminUpdateOrder':                        { 'index': 22, 'type': 'table', 'tablename': 'AdminUpdateOrder', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'adminUpdateExecution':                    { 'index': 23, 'type': 'table', 'tablename': 'AdminUpdateExecution', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestOrderImageCommand':                { 'index': 24, 'type': 'table', 'tablename': 'RequestOrderImageCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestExecutionImageCommand':            { 'index': 25, 'type': 'table', 'tablename': 'RequestExecutionImageCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'createBasketCommand':                     { 'index': 26, 'type': 'table', 'tablename': 'CreateBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'forceCancelBasketCommand':                { 'index': 27, 'type': 'table', 'tablename': 'ForceCancelBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'forceCorrectBasketCommand':               { 'index': 28, 'type': 'table', 'tablename': 'ForceCorrectBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'createChildBasketCommand':                { 'index': 29, 'type': 'table', 'tablename': 'CreateChildBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'mergeBasketCommand':                      { 'index': 30, 'type': 'table', 'tablename': 'MergeBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'mergeOrdersCommand':                      { 'index': 31, 'type': 'table', 'tablename': 'MergeOrdersCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'routeOrderCommand':                       { 'index': 32, 'type': 'table', 'tablename': 'RouteOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'routeBasketCommand':                      { 'index': 33, 'type': 'table', 'tablename': 'RouteBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'acceptBasketCommand':                     { 'index': 34, 'type': 'table', 'tablename': 'AcceptBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'rejectBasketCommand':                     { 'index': 35, 'type': 'table', 'tablename': 'RejectBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestCorrectBasketCommand':             { 'index': 36, 'type': 'table', 'tablename': 'RequestCorrectBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestCancelBasketCommand':              { 'index': 37, 'type': 'table', 'tablename': 'RequestCancelBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'acceptCancelBasketCommand':               { 'index': 38, 'type': 'table', 'tablename': 'AcceptCancelBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'acceptCorrectBasketCommand':              { 'index': 39, 'type': 'table', 'tablename': 'AcceptCorrectBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'rejectCancelBasketCommand':               { 'index': 40, 'type': 'table', 'tablename': 'RejectCancelBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'rejectCorrectBasketCommand':              { 'index': 41, 'type': 'table', 'tablename': 'RejectCorrectBasketCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'forceCancelOrderCommand':                 { 'index': 42, 'type': 'table', 'tablename': 'ForceCancelOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'suspendOrderCommand':                     { 'index': 43, 'type': 'table', 'tablename': 'SuspendOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'unsuspendOrderCommand':                   { 'index': 44, 'type': 'table', 'tablename': 'UnSuspendOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'doneForDayOrderCommand':                  { 'index': 45, 'type': 'table', 'tablename': 'DoneForDayOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'unDoneForDayOrderCommand':                { 'index': 46, 'type': 'table', 'tablename': 'UnDoneForDayOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'unsuspendExecutionCommand':               { 'index': 47, 'type': 'table', 'tablename': 'UnsuspendExecutionCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'clearExecutionIsSuspendAlertableCommand': { 'index': 48, 'type': 'table', 'tablename': 'ClearExecutionIsSuspendAlertableCommand', # FIELD HAS BEEN DEPRECATED
				                                             'meta-fields': [
					                                         {'field': 'deprecated' , 'value' : 'true'},
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'acknowledgeSuspendedExecutionCommand':    { 'index': 49, 'type': 'table', 'tablename': 'AcknowledgeSuspendedExecutionCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestBasketImageCommand':               { 'index': 50, 'type': 'table', 'tablename': 'RequestBasketImageCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestCancelChildOrdersCommand':         { 'index': 51, 'type': 'table', 'tablename': 'RequestCancelChildOrdersCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'cancelAllExecutionsForOrderCommand':      { 'index': 52, 'type': 'table', 'tablename': 'CancelAllExecutionsForOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'createOrderHierarchyCommand':             { 'index': 53, 'type': 'table', 'tablename': 'CreateOrderHierarchyCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'releaseSendWithheldOrderCommand':         { 'index': 54, 'type': 'table', 'tablename': 'ReleaseSendWithheldOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'createGroupedExecutionsCommand':          { 'index': 55, 'type': 'table', 'tablename': 'CreateGroupedExecutionsCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestReinstateOrdersCommand':           { 'index': 56, 'type': 'table', 'tablename': 'RequestReinstateOrdersCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestReinstateExecutionsCommand':       { 'index': 57, 'type': 'table', 'tablename': 'RequestReinstateExecutionsCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'reinstateOrderCommand':                   { 'index': 58, 'type': 'table', 'tablename': 'ReinstateOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestLocateForOrderCommand':            { 'index': 59, 'type': 'table', 'tablename': 'RequestLocateForOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'setTradingAlgorithmEngineCommand':        { 'index': 60, 'type': 'table', 'tablename': 'SetTradingAlgorithmEngineCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestMassCancelCommand':                { 'index': 61, 'type': 'table', 'tablename': 'RequestMassCancelCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'partialAcceptCancelOrderCommand':         { 'index': 62, 'type': 'table', 'tablename': 'PartialAcceptCancelOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'rehomeOrderCommand':                      { 'index': 63, 'type': 'table', 'tablename': 'RehomeOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'updateMatchingEngineStatusCommand':       { 'index': 64, 'type': 'table', 'tablename': 'UpdateMatchingEngineStatusCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'cancelMatchedExecutionsCommand':          { 'index': 65, 'type': 'table', 'tablename': 'CancelMatchedExecutionsCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'correctMatchedExecutionsCommand':         { 'index': 66, 'type': 'table', 'tablename': 'CorrectMatchedExecutionsCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'createTestCaseOverrideCommand':           { 'index': 67, 'type': 'table', 'tablename': 'CreateTestCaseOverrideCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'setOrderBlockCommand':                    { 'index': 68, 'type': 'table', 'tablename': 'SetOrderBlockCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'clearOrderBlockCommand':                  { 'index': 69, 'type': 'table', 'tablename': 'ClearOrderBlockCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'crossOrdersCommand':                      { 'index': 70, 'type': 'table', 'tablename': 'CrossOrdersCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'applyCorporateActionToOrderCommand':      { 'index': 71, 'type': 'table', 'tablename': 'ApplyCorporateActionToOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'linkChildOrdersCommand':                  { 'index': 72, 'type': 'table', 'tablename': 'LinkChildOrdersCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestExpireOrderCommand':               { 'index': 73, 'type': 'table', 'tablename': 'RequestExpireOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'createMultiLegOrderCommand':              { 'index': 74, 'type': 'table', 'tablename': 'CreateMultiLegOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'createChildMultiLegOrderCommand':         { 'index': 75, 'type': 'table', 'tablename': 'CreateChildMultiLegOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestCorrectMultiLegOrderCommand':      { 'index': 76, 'type': 'table', 'tablename': 'RequestCorrectMultiLegOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestCancelMultiLegOrderCommand':       { 'index': 77, 'type': 'table', 'tablename': 'RequestCancelMultiLegOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'vikingDeclarationAccept':                 { 'index': 78, 'type': 'table', 'tablename': 'VikingDeclarationAccept', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'vikingDeclarationReject':                 { 'index': 79, 'type': 'table', 'tablename': 'VikingDeclarationReject', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'linkContingentOrdersCommand':             { 'index': 80, 'type': 'table', 'tablename': 'LinkContingentOrdersCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'userAlertCommand':                        { 'index': 81, 'type': 'table', 'tablename': 'UserAlertCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'orderQueuedNotification':                 { 'index': 82, 'type': 'table', 'tablename': 'OrderQueuedNotification', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'mergeIntoExistingOrderCommand':           { 'index': 83, 'type': 'table', 'tablename': 'MergeIntoExistingOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'createSynchronizedChildOrdersCommand':    { 'index': 84, 'type': 'table', 'tablename': 'CreateSynchronizedChildOrdersCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestCancelExecutionCommand':           { 'index': 85, 'type': 'table', 'tablename': 'RequestCancelExecutionCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'acceptCancelExecutionCommand':            { 'index': 86, 'type': 'table', 'tablename': 'AcceptCancelExecutionCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'rejectCancelExecutionCommand':            { 'index': 87, 'type': 'table', 'tablename': 'RejectCancelExecutionCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'createIndicationCommand':                 { 'index': 88, 'type': 'table', 'tablename': 'CreateIndicationCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'forceCancelIndicationCommand':            { 'index': 89, 'type': 'table', 'tablename': 'ForceCancelIndicationCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'forceCorrectIndicationCommand':           { 'index': 90, 'type': 'table', 'tablename': 'ForceCorrectIndicationCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestIndicationImageCommand':           { 'index': 91, 'type': 'table', 'tablename': 'RequestIndicationImageCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'stampOrderMatchingBinsCommand':           { 'index': 92, 'type': 'table', 'tablename': 'StampOrderMatchingBinsCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'vikingCreateTradeReportVersion':          { 'index': 93, 'type': 'table', 'tablename': 'VikingCreateTradeReportVersion', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'createLiquidityCommand':                  { 'index': 94, 'type': 'table', 'tablename': 'CreateLiquidityCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'forceCorrectLiquidityCommand':            { 'index': 95, 'type': 'table', 'tablename': 'ForceCorrectLiquidityCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'forceCancelLiquidityCommand':             { 'index': 96, 'type': 'table', 'tablename': 'ForceCancelLiquidityCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'requestLiquidityImageCommand':            { 'index': 97, 'type': 'table', 'tablename': 'RequestLiquidityImageCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'validateCreateOrderCommand':              { 'index': 98, 'type': 'table', 'tablename': 'ValidateCreateOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
				'validateRequestCorrectOrderCommand':      { 'index': 99, 'type': 'table', 'tablename': 'ValidateRequestCorrectOrderCommand', 
				                                             'meta-fields': [
					                                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                                             ],
				                                           },
			}, 
		}, 
		'ReserveLocateCommand': {
			'id': 376, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':     { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'productId':         { 'index': 1, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '100'},
				                       ],
				                     },
				'productIdType':     { 'index': 2, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'locateQuantity':    { 'index': 3, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'locateRequesterId': { 'index': 4, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '40'},
				                       ],
				                     },
				'shouldResearch':    { 'index': 5, 'type': 'bool', }, 
			}, 
		}, 
		'Response': {
			'id': 459, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'rbid':        { 'index': 0, 'type': 'int', }, 
				'commentText': { 'index': 1, 'type': 'string', 
				                 'meta-fields': [
					             {'field': 'maxStringLength' , 'value' : '50'},
				                 ],
				               },
				'success':     { 'index': 2, 'type': 'bool', }, 
				'rmsMessage':  { 'index': 3, 'type': 'table', 'tablename': 'Message', 
				                 'meta-fields': [
					             {'field': 'dictionaryType' , 'value' : 'struct'},
				                 ],
				               },
			}, 
		}, 
		'RestrictedTradingListOverride': {
			'id': 372, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'rtlOverrideReason':   { 'index': 0, 'type': 'ubyte', 'enum': 'OmRtlOverrideReason', }, 
				'rtlOverrideApprover': { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '30'},
				                         ],
				                       },
			}, 
		}, 
		'RouteBasketCommand': {
			'id': 507, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':        { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'basketId':             { 'index': 1, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'destinationPartition': { 'index': 2, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '32'},
				                          ],
				                        },
				'externalReferences':   { 'index': 3, 'type': 'table', 'tablename': 'ExternalReference', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
			}, 
		}, 
		'RouteOrderCommand': {
			'id': 334, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                   { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'struct'},
				                                     ],
				                                   },
				'orderId':                         { 'index': 1, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '29'},
				                                     ],
				                                   },
				'externalReferences':              { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                                     ],
				                                   },
				'orderType':                       { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'limitPrice':                      { 'index': 4, 'type': 'double', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'real'},
				                                     ],
				                                   },
				'executionPointOverride':          { 'index': 5, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '16'},
				                                     ],
				                                   },
				'maxTrancheSize':                  { 'index': 6, 'type': 'double', 'aliases': ['displaySize'], 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'real'},
				                                     ],
				                                   },
				'stopPrice':                       { 'index': 7, 'type': 'double', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'real'},
				                                     ],
				                                   },
				'tradingAlgorithm':                { 'index': 8, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '32'},
				                                     ],
				                                   },
				'pegType':                         { 'index': 9, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffset':                       { 'index': 10, 'type': 'double', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'real'},
				                                     ],
				                                   },
				'pegOffsetType':                   { 'index': 11, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'pegScope':                        { 'index': 12, 'type': 'ubyte', 'enum': 'OmPegScopeType', }, 
				'discretionaryReferencePriceType': { 'index': 13, 'type': 'ubyte', 'enum': 'OmDiscretionaryReferencePriceType', }, 
				'discretionaryOffset':             { 'index': 14, 'type': 'double', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'real'},
				                                     ],
				                                   },
				'discretionaryOffsetType':         { 'index': 15, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'orderbookVisibility':             { 'index': 16, 'type': 'ubyte', 'enum': 'OmOrderbookVisibilityType', }, 
				'offsetDirectionType':             { 'index': 17, 'type': 'ubyte', 'enum': 'OmOffsetDirectionType', }, 
				'subExecutionPointOverride':       { 'index': 18, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '16'},
				                                     ],
				                                   },
				'parameterizedLimitPrice':         { 'index': 19, 'type': 'table', 'tablename': 'ParameterizedPrice', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'struct'},
				                                     ],
				                                   },
				'resolveAllPrices':                { 'index': 20, 'type': 'bool', }, 
				'isLocateRequested':               { 'index': 21, 'type': 'bool', }, 
			}, 
		}, 
		'RoutedMessage': {
			'id': 54, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':         { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'sourceSystemName':      { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '32'},
				                           ],
				                         },
				'destinationSystemName': { 'index': 2, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '32'},
				                           ],
				                         },
				'messageFormat':         { 'index': 3, 'type': 'ubyte', 'enum': 'OmMessageFormat', }, 
				'messageData':           { 'index': 4, 'type': 'binary', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'blob'},
				                           ],
				                         },
				'tableId':               { 'index': 5, 'type': 'int', }, 
			}, 
		}, 
		'Rule': {
			'id': 452, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'rid':         { 'index': 0, 'type': 'int', }, 
				'rver':        { 'index': 1, 'type': 'int', }, 
				'name':        { 'index': 2, 'type': 'string', 
				                 'meta-fields': [
					             {'field': 'maxStringLength' , 'value' : '50'},
				                 ],
				               },
				'description': { 'index': 3, 'type': 'string', 
				                 'meta-fields': [
					             {'field': 'maxStringLength' , 'value' : '50'},
				                 ],
				               },
			}, 
		}, 
		'RuleBaseSnapshot': {
			'id': 450, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'rbid':         { 'index': 0, 'type': 'int', }, 
				'snapshot':     { 'index': 1, 'type': 'int', }, 
				'rbver':        { 'index': 2, 'type': 'int', }, 
				'path':         { 'index': 3, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'realm':        { 'index': 4, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'description':  { 'index': 5, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'name':         { 'index': 6, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'active':       { 'index': 7, 'type': 'bool', }, 
				'itemDeleted':  { 'index': 8, 'type': 'bool', }, 
				'timestampUtc': { 'index': 9, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'creator':      { 'index': 10, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'log':          { 'index': 11, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
			}, 
		}, 
		'RuleSet': {
			'id': 451, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'rsid':              { 'index': 0, 'type': 'int', }, 
				'rsver':             { 'index': 1, 'type': 'int', }, 
				'name':              { 'index': 2, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '50'},
				                       ],
				                     },
				'description':       { 'index': 3, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '50'},
				                       ],
				                     },
				'ruleSetConstraint': { 'index': 4, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '50'},
				                       ],
				                     },
				'setType':           { 'index': 5, 'type': 'ubyte', 'enum': 'OmSetType', }, 
			}, 
		}, 
		'RuleSetSnapshot': {
			'id': 454, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'rsid':         { 'index': 0, 'type': 'int', }, 
				'rsver':        { 'index': 1, 'type': 'int', }, 
				'rbid':         { 'index': 2, 'type': 'int', }, 
				'snapshot':     { 'index': 3, 'type': 'int', }, 
				'priority':     { 'index': 4, 'type': 'int', }, 
				'active':       { 'index': 5, 'type': 'bool', }, 
				'itemDeleted':  { 'index': 6, 'type': 'bool', }, 
				'timestampUtc': { 'index': 7, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'creator':      { 'index': 8, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'log':          { 'index': 9, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
			}, 
		}, 
		'RuleSnapshot': {
			'id': 455, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'rid':          { 'index': 0, 'type': 'int', }, 
				'rver':         { 'index': 1, 'type': 'int', }, 
				'xmlver':       { 'index': 2, 'type': 'int', }, 
				'snapshot':     { 'index': 3, 'type': 'int', }, 
				'rsid':         { 'index': 4, 'type': 'int', }, 
				'priority':     { 'index': 5, 'type': 'int', }, 
				'active':       { 'index': 6, 'type': 'bool', }, 
				'itemDeleted':  { 'index': 7, 'type': 'bool', }, 
				'timestampUtc': { 'index': 8, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'creator':      { 'index': 9, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'log':          { 'index': 10, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
			}, 
		}, 
		'RuleXml': {
			'id': 453, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'rid':    { 'index': 0, 'type': 'int', }, 
				'xmlver': { 'index': 1, 'type': 'int', }, 
				'xml':    { 'index': 2, 'type': 'string', 
				            'meta-fields': [
					        {'field': 'maxStringLength' , 'value' : '500'},
				            ],
				          },
			}, 
		}, 
		'RuntimeInfoData': {
			'id': 761, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'startDate': { 'index': 0, 'type': 'int', 
				               'meta-fields': [
					           {'field': 'dictionaryType' , 'value' : 'date'},
				               ],
				             },
			}, 
		}, 
		'SEFPartyReference': {
			'id': 721, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sefPartyId':            { 'index': 0, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '32'},
				                           ],
				                         },
				'sefPartyIdSource':      { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '1'},
				                           ],
				                         },
				'sefPartyRole':          { 'index': 2, 'type': 'ubyte', 'enum': 'OmSEFPartyRole', }, 
				'sefNumberOfPartySubId': { 'index': 3, 'type': 'int', }, 
				'sefSubPartyReferences': { 'index': 4, 'type': 'table', 'tablename': 'SEFSubPartyReference', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
			}, 
		}, 
		'SEFRegulatoryReference': {
			'id': 722, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sefRegulatoryTradeId':            { 'index': 0, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '45'},
				                                     ],
				                                   },
				'sefRegulatoryTradeIdType':        { 'index': 1, 'type': 'int', }, 
				'sefTradeType':                    { 'index': 2, 'type': 'int', }, 
				'sefAvailableToTrade':             { 'index': 3, 'type': 'bool', }, 
				'seftradeRegulatoryTimeStamp':     { 'index': 4, 'type': 'int', 
				                                     'meta-fields': [
					                                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                     ],
				                                   },
				'sefTradeRegulatoryTimeStampType': { 'index': 5, 'type': 'int', }, 
				'sefVenueType':                    { 'index': 6, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '1'},
				                                     ],
				                                   },
				'sefIntendToClear':                { 'index': 7, 'type': 'bool', }, 
				'sefTradeClearingInstruction':     { 'index': 8, 'type': 'ubyte', 'enum': 'OmSEFTradeClearingInstruction', }, 
				'sefConfirmationMethod':           { 'index': 9, 'type': 'int', }, 
				'sefmandatoryClearingIndicator':   { 'index': 10, 'type': 'string', 
				                                     'meta-fields': [
					                                 {'field': 'maxStringLength' , 'value' : '1'},
				                                     ],
				                                   },
				'sefRegulatoryReportType':         { 'index': 11, 'type': 'int', }, 
			}, 
		}, 
		'SEFSubPartyReference': {
			'id': 720, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sefIsUSParty':  { 'index': 0, 'type': 'bool', }, 
				'sefSubPartyId': { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '50'},
				                   ],
				                 },
			}, 
		}, 
		'SequenceNameAndId': {
			'id': 154, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sequenceName': { 'index': 0, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'sequenceId':   { 'index': 1, 'type': 'int', }, 
			}, 
		}, 
		'SequencedMessageData': {
			'id': 30, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'version':                  { 'index': 0, 'type': 'int', }, 
				'messageData':              { 'index': 1, 'type': 'binary', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'blob'},
				                              ],
				                            },
				'messageFormat':            { 'index': 2, 'type': 'ubyte', 'enum': 'OmMessageFormat', }, 
				'sequenceName':             { 'index': 3, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '50'},
				                              ],
				                            },
				'sequenceNumber':           { 'index': 4, 'type': 'int', }, 
				'tableId':                  { 'index': 5, 'type': 'int', }, 
				'repositoryAction':         { 'index': 6, 'type': 'ubyte', 'enum': 'OmRepositoryActionType', }, 
				'referencedSequenceName':   { 'index': 7, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '50'},
				                              ],
				                            },
				'referencedSequenceNumber': { 'index': 8, 'type': 'int', }, 
				'serviceType':              { 'index': 9, 'type': 'ubyte', 'enum': 'OmServiceType', }, 
				'shouldIndex':              { 'index': 10, 'type': 'bool', }, 
			}, 
		}, 
		'SequencedMessageIndex': {
			'id': 149, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sequenceName': { 'index': 0, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'messageId':    { 'index': 1, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '64'},
				                  ],
				                },
				'serviceType':  { 'index': 2, 'type': 'ubyte', 'enum': 'OmServiceType', }, 
			}, 
		}, 
		'SequencedMessageNotificationStatus': {
			'id': 137, 
			'version': 1, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'deprecated' , 'value' : 'true'},
			],
			'columns': {
				'sequenceName':   { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '50'},
				                    ],
				                  },
				'sequenceNumber': { 'index': 1, 'type': 'int', }, 
				'messageStatus':  { 'index': 2, 'type': 'ubyte', 'enum': 'OmMessageStatus', }, 
			}, 
		}, 
		'SequencedMessageNotificationSummary': {
			'id': 138, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sequenceName':                         { 'index': 0, 'type': 'string', 
				                                          'meta-fields': [
					                                      {'field': 'maxStringLength' , 'value' : '50'},
				                                          ],
				                                        },
				'earliestUnacknowledgedSequenceNumber': { 'index': 1, 'type': 'int', }, 
				'lastSentSequenceNumber':               { 'index': 2, 'type': 'int', }, 
			}, 
		}, 
		'SetOrderBlockCommand': {
			'id': 328, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':  { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'struct'},
				                    ],
				                  },
				'orderBlockData': { 'index': 1, 'type': 'table', 'tablename': 'OrderBlockData', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'struct'},
				                    ],
				                  },
			}, 
		}, 
		'SetTradingAlgorithmEngineCommand': {
			'id': 318, 
			'version': 5, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                     { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                                       ],
				                                     },
				'orderId':                           { 'index': 1, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '29'},
				                                       ],
				                                     },
				'tradingAlgorithmEngine':            { 'index': 2, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '32'},
				                                       ],
				                                     },
				'tradingAlgorithm':                  { 'index': 3, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '32'},
				                                       ],
				                                     },
				'tradingAlgorithmParameters':        { 'index': 4, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '1024'},
				                                       ],
				                                     },
				'opaqueOrderDataItemsAdd':           { 'index': 5, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', # FIELD IS OBSOLETE
				                                       'meta-fields': [
					                                   {'field': 'obsolete' , 'value' : 'true'},
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'opaqueOrderDataItemsRemove':        { 'index': 6, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', # FIELD IS OBSOLETE
				                                       'meta-fields': [
					                                   {'field': 'obsolete' , 'value' : 'true'},
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'opaqueOrderDataItemsToRemove':      { 'index': 7, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'opaqueOrderDataItemsToSet':         { 'index': 8, 'type': 'table', 'tablename': 'OpaqueOrderDataItem', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
				'tradingAlgorithmPrivateParameters': { 'index': 9, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '1024'},
				                                       ],
				                                     },
			}, 
		}, 
		'SharedMemoryKeyDefinition': {
			'id': 2001, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'keyMemberSequenceNumber': { 'index': 0, 'type': 'int', }, 
				'columnId':                { 'index': 1, 'type': 'int', }, 
				'columnName':              { 'index': 2, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '20'},
				                             ],
				                           },
			}, 
		}, 
		'SharedMemoryTableIndex': {
			'id': 2000, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'keyId':                       { 'index': 0, 'type': 'int', }, 
				'keyName':                     { 'index': 1, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '64'},
				                                 ],
				                               },
				'shmTableId':                  { 'index': 2, 'type': 'int', }, 
				'tableName':                   { 'index': 3, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '64'},
				                                 ],
				                               },
				'initUser':                    { 'index': 4, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '20'},
				                                 ],
				                               },
				'initTime':                    { 'index': 5, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '20'},
				                                 ],
				                               },
				'indexInitializedByProcessId': { 'index': 6, 'type': 'int', }, 
				'indexInitializedByProcess':   { 'index': 7, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '256'},
				                                 ],
				                               },
				'lazilyCreated':               { 'index': 8, 'type': 'bool', }, 
				'isPrimaryIndex':              { 'index': 9, 'type': 'bool', }, 
				'supportsExactQueriesOnly':    { 'index': 10, 'type': 'bool', }, 
				'indexBucketCount':            { 'index': 11, 'type': 'uint', }, 
				'indexType':                   { 'index': 12, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '20'},
				                                 ],
				                               },
				'hashFunction':                { 'index': 13, 'type': 'string', 
				                                 'meta-fields': [
					                             {'field': 'maxStringLength' , 'value' : '20'},
				                                 ],
				                               },
				'isEnabled':                   { 'index': 14, 'type': 'bool', }, 
				'hashComponents':              { 'index': 15, 'type': 'table', 'tablename': 'SharedMemoryKeyDefinition', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'keyComponents':               { 'index': 16, 'type': 'table', 'tablename': 'SharedMemoryKeyDefinition', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
			}, 
		}, 
		'ShmSegmentEnvSettings': {
			'id': 11, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'maxSegments': { 'index': 0, 'type': 'int', }, 
				'baseAddress': { 'index': 1, 'type': 'string', 
				                 'meta-fields': [
					             {'field': 'maxStringLength' , 'value' : '20'},
				                 ],
				               },
				'baseSegment': { 'index': 2, 'type': 'string', 
				                 'meta-fields': [
					             {'field': 'maxStringLength' , 'value' : '20'},
				                 ],
				               },
				'segmentName': { 'index': 3, 'type': 'string', 
				                 'meta-fields': [
					             {'field': 'maxStringLength' , 'value' : '20'},
				                 ],
				               },
			}, 
		}, 
		'ShmSegmentInformation': {
			'id': 10, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'semBase':               { 'index': 0, 'type': 'int', }, 
				'initTime':              { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '20'},
				                           ],
				                         },
				'initUser':              { 'index': 2, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '20'},
				                           ],
				                         },
				'shmSegmentEnvSettings': { 'index': 3, 'type': 'table', 'tablename': 'ShmSegmentEnvSettings', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
			}, 
		}, 
		'ShmTableInfo': {
			'id': 13, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'shmTableId': { 'index': 0, 'type': 'int', }, 
			}, 
		}, 
		'SideKickEngineStateResponse': {
			'id': 63, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'currentEngineState':                 { 'index': 0, 'type': 'ubyte', 'enum': 'OmCurrentEngineState', }, 
				'timeOfLastActivity':                 { 'index': 1, 'type': 'int', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                        ],
				                                      },
				'lastNotificationId':                 { 'index': 2, 'type': 'int', }, 
				'sideKickResponseType':               { 'index': 3, 'type': 'ubyte', 'enum': 'OmSideKickResponseType', }, 
				'commandCheckpointDataRecords':       { 'index': 4, 'type': 'table', 'tablename': 'CommandCheckpointData', 
				                                        'meta-fields': [
					                                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                                        ],
				                                      },
				'isSideKickBasedNotificationAllowed': { 'index': 5, 'type': 'bool', }, 
			}, 
		}, 
		'SideKickRequestEngineState': {
			'id': 62, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'instanceName': { 'index': 0, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '64'},
				                  ],
				                },
			}, 
		}, 
		'SideKickRequestTransactionNotification': {
			'id': 18, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'notificationId': { 'index': 0, 'type': 'int', }, 
			}, 
		}, 
		'SideKickTransactionNotificationResponse': {
			'id': 19, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'notificationId':          { 'index': 0, 'type': 'int', }, 
				'transactionNotification': { 'index': 1, 'type': 'table', 'tablename': 'TransactionNotification', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'SigmaAcceptCancelOrderNotification': {
			'id': 384, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'productId':     { 'index': 2, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '100'},
				                   ],
				                 },
				'productIdType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'accessId':      { 'index': 4, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'accessIdType':  { 'index': 5, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
			}, 
		}, 
		'SigmaAcceptCorrectOrderNotification': {
			'id': 394, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'productId':     { 'index': 2, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '100'},
				                   ],
				                 },
				'productIdType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'accessId':      { 'index': 4, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'accessIdType':  { 'index': 5, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
			}, 
		}, 
		'SigmaAcceptOrderNotification': {
			'id': 391, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'orderId':            { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'productId':          { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '100'},
				                        ],
				                      },
				'productIdType':      { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'accessId':           { 'index': 4, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'accessIdType':       { 'index': 5, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'externalReferences': { 'index': 6, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'SigmaAlgorithmParameter': {
			'id': 139, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'liquidityPlusStyle': { 'index': 0, 'type': 'int', }, 
				'stealthStyle':       { 'index': 1, 'type': 'int', }, 
			}, 
		}, 
		'SigmaExecutionNotification': {
			'id': 387, 
			'version': 5, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':       { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'orderId':             { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'productId':           { 'index': 2, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '100'},
				                         ],
				                       },
				'productIdType':       { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'accessId':            { 'index': 4, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'accessIdType':        { 'index': 5, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'executionId':         { 'index': 6, 'type': 'string', 'aliases': ['execId'], 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'executionQuantity':   { 'index': 7, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'executedQuantity':    { 'index': 8, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'quantityRemaining':   { 'index': 9, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'executionPrice':      { 'index': 10, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'executionPoint':      { 'index': 11, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '16'},
				                         ],
				                       },
				'exchangeBillingCode': { 'index': 12, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '7'},
				                         ],
				                       },
			}, 
		}, 
		'SigmaForceCancelOrderNotification': {
			'id': 386, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':    { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                      ],
				                    },
				'orderId':          { 'index': 1, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '29'},
				                      ],
				                    },
				'productId':        { 'index': 2, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '100'},
				                      ],
				                    },
				'productIdType':    { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'accessId':         { 'index': 4, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '29'},
				                      ],
				                    },
				'accessIdType':     { 'index': 5, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'rejectReasonType': { 'index': 6, 'type': 'ubyte', 'enum': 'OmRejectReasonType', }, 
			}, 
		}, 
		'SigmaNewMultiLegOrderNotification': {
			'id': 465, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':        { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'orderInstructionData': { 'index': 1, 'type': 'table', 'tablename': 'OrderInstructionData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'legInformationList':   { 'index': 2, 'type': 'table', 'tablename': 'LegInformation', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
				'quantityRemaining':    { 'index': 3, 'type': 'double', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'real'},
				                          ],
				                        },
				'venueEntitlements':    { 'index': 4, 'type': 'table', 'tablename': 'VenueEntitlement', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
			}, 
		}, 
		'SigmaNewOrderNotification': {
			'id': 392, 
			'version': 5, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':        { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'orderInstructionData': { 'index': 1, 'type': 'table', 'tablename': 'OrderInstructionData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'orderId':              { 'index': 2, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'productId':            { 'index': 3, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '100'},
				                          ],
				                        },
				'productIdType':        { 'index': 4, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'venueEntitlements':    { 'index': 5, 'type': 'table', 'tablename': 'VenueEntitlement', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'collection'},
				                          ],
				                        },
				'quantityRemaining':    { 'index': 6, 'type': 'double', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'real'},
				                          ],
				                        },
			}, 
		}, 
		'SigmaRejectCancelOrderNotification': {
			'id': 385, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'productId':     { 'index': 2, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '100'},
				                   ],
				                 },
				'productIdType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'accessId':      { 'index': 4, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'accessIdType':  { 'index': 5, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'rejectReasons': { 'index': 6, 'type': 'table', 'tablename': 'RejectReason', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'collection'},
				                   ],
				                 },
			}, 
		}, 
		'SigmaRejectCorrectOrderNotification': {
			'id': 393, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'productId':     { 'index': 2, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '100'},
				                   ],
				                 },
				'productIdType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'accessId':      { 'index': 4, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'accessIdType':  { 'index': 5, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'rejectReasons': { 'index': 6, 'type': 'table', 'tablename': 'RejectReason', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'collection'},
				                   ],
				                 },
			}, 
		}, 
		'SigmaRejectOrderNotification': {
			'id': 383, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'orderId':            { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'productId':          { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '100'},
				                        ],
				                      },
				'productIdType':      { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'accessId':           { 'index': 4, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'accessIdType':       { 'index': 5, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'rejectReasons':      { 'index': 6, 'type': 'table', 'tablename': 'RejectReason', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'externalReferences': { 'index': 7, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'SigmaRequestCancelOrderNotification': {
			'id': 388, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'productId':     { 'index': 2, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '100'},
				                   ],
				                 },
				'productIdType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'accessId':      { 'index': 4, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'accessIdType':  { 'index': 5, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
			}, 
		}, 
		'SigmaRequestCorrectOrderNotification': {
			'id': 389, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':        { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'orderId':              { 'index': 1, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'productId':            { 'index': 2, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '100'},
				                          ],
				                        },
				'productIdType':        { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'accessId':             { 'index': 4, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'accessIdType':         { 'index': 5, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
				'orderInstructionData': { 'index': 6, 'type': 'table', 'tablename': 'OrderInstructionData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
			}, 
		}, 
		'SigmaSuspendOrderNotification': {
			'id': 398, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'productId':     { 'index': 2, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '100'},
				                   ],
				                 },
				'productIdType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'accessId':      { 'index': 4, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'accessIdType':  { 'index': 5, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
			}, 
		}, 
		'SigmaUnSuspendOrderNotification': {
			'id': 399, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'productId':     { 'index': 2, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '100'},
				                   ],
				                 },
				'productIdType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'accessId':      { 'index': 4, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'accessIdType':  { 'index': 5, 'type': 'ubyte', 'enum': 'OmAccessIdType', }, 
			}, 
		}, 
		'SmartRoutingEvent': {
			'id': 114, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'venueRestrictions':           { 'index': 0, 'type': 'table', 'tablename': 'VenueRestriction', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'gameplanConstraints':         { 'index': 1, 'type': 'table', 'tablename': 'Constraint', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'mifidConstraints':            { 'index': 2, 'type': 'table', 'tablename': 'Constraint', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'placementEvent':              { 'index': 3, 'type': 'table', 'tablename': 'PlacementEvent', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'l2Montage':                   { 'index': 4, 'type': 'table', 'tablename': 'L2MarketDataStamp', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'collection'},
				                                 ],
				                               },
				'mifidAttributes':             { 'index': 5, 'type': 'table', 'tablename': 'MifidAttributes', 
				                                 'meta-fields': [
					                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                 ],
				                               },
				'internalEventSequenceNumber': { 'index': 6, 'type': 'int', }, 
			}, 
		}, 
		'SnapshotHistory': {
			'id': 456, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'rbid':         { 'index': 0, 'type': 'int', }, 
				'snapshot':     { 'index': 1, 'type': 'int', }, 
				'timestampUtc': { 'index': 2, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'log':          { 'index': 3, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
				'creator':      { 'index': 4, 'type': 'string', 
				                  'meta-fields': [
					              {'field': 'maxStringLength' , 'value' : '50'},
				                  ],
				                },
			}, 
		}, 
		'StampOrderMatchingBinsCommand': {
			'id': 712, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'orderId':            { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'externalReferences': { 'index': 2, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'matchingBins':       { 'index': 3, 'type': 'table', 'tablename': 'MatchingBin', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
			}, 
		}, 
		'SuspendOrderCommand': {
			'id': 129, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'orderId':            { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'suspendReasonText':  { 'index': 3, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '256'},
				                        ],
				                      },
			}, 
		}, 
		'SwapDetails': {
			'id': 495, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'paymentCurrency':     { 'index': 0, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '3'},
				                         ],
				                       },
				'denominatedCurrency': { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '3'},
				                         ],
				                       },
				'swapTerm':            { 'index': 2, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '5'},
				                         ],
				                       },
			}, 
		}, 
		'SyntheticDetails': {
			'id': 498, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'swapDetails':       { 'index': 0, 'type': 'table', 'tablename': 'SwapDetails', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'fundingLegDetails': { 'index': 1, 'type': 'table', 'tablename': 'FundingLegDetails', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'equityLegDetails':  { 'index': 2, 'type': 'table', 'tablename': 'EquityLegDetails', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'ebcsDetails':       { 'index': 3, 'type': 'table', 'tablename': 'EbcsDetails', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
			}, 
		}, 
		'TestCaseOverrideData': {
			'id': 324, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'testCaseOverrideId':    { 'index': 0, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'testCaseOverrideRules': { 'index': 1, 'type': 'table', 'tablename': 'TestCaseOverrideRule', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
			}, 
		}, 
		'TestCaseOverrideRule': {
			'id': 323, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'orderStatusDataFilter':         { 'index': 0, 'type': 'table', 'tablename': 'OrderStatusData', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
				'orderInstructionDataFilter':    { 'index': 1, 'type': 'table', 'tablename': 'OrderInstructionData', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
				'orderStatusDataOverrides':      { 'index': 2, 'type': 'table', 'tablename': 'OrderStatusData', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
				'orderInstructionDataOverrides': { 'index': 3, 'type': 'table', 'tablename': 'OrderInstructionData', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
			}, 
		}, 
		'ThreadActivityStart': {
			'id': 714, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'threadId':        { 'index': 0, 'type': 'int', }, 
				'processId':       { 'index': 1, 'type': 'int', }, 
				'userId':          { 'index': 2, 'type': 'string', }, 
				'commandLine':     { 'index': 3, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '256'},
				                     ],
				                   },
				'threadStartTime': { 'index': 4, 'type': 'int', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                     ],
				                   },
			}, 
		}, 
		'ThreadActivityUpdate': {
			'id': 715, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'threadId':                   { 'index': 0, 'type': 'int', }, 
				'threadCpuUsageMilliseconds': { 'index': 1, 'type': 'uint', }, 
			}, 
		}, 
		'Trade': {
			'id': 140, 
			'version': 6, 
			'publishable': 'true', 
			'columns': {
				'sequence':               { 'index': 0, 'type': 'int', }, 
				'clearingMessageId':      { 'index': 1, 'type': 'string', }, 
				'clearingVersion':        { 'index': 2, 'type': 'string', }, 
				'clearingMessageType':    { 'index': 3, 'type': 'ubyte', 'enum': 'OmTradeType', }, 
				'tradeId':                { 'index': 4, 'type': 'string', }, 
				'parentTradeId':          { 'index': 5, 'type': 'string', }, 
				'orderId':                { 'index': 6, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'executionId':            { 'index': 7, 'type': 'string', 'aliases': ['execId'], 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'state':                  { 'index': 8, 'type': 'string', }, 
				'status':                 { 'index': 9, 'type': 'ubyte', 'enum': 'OmTradeStatus', }, 
				'clearingDateStr':        { 'index': 10, 'type': 'string', }, 
				'tradeDate':              { 'index': 11, 'type': 'string', }, 
				'historical':             { 'index': 12, 'type': 'bool', }, 
				'executionTime':          { 'index': 13, 'type': 'int', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'datetime'},
				                            ],
				                          },
				'buySell':                { 'index': 14, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'price':                  { 'index': 15, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'quantity':               { 'index': 16, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'fillQuantity':           { 'index': 17, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'clearingOrderType':      { 'index': 18, 'type': 'string', }, 
				'tradeType':              { 'index': 19, 'type': 'string', }, 
				'clearingExecutionType':  { 'index': 20, 'type': 'string', }, 
				'userId':                 { 'index': 21, 'type': 'string', }, 
				'feeCode':                { 'index': 22, 'type': 'string', }, 
				'origin':                 { 'index': 23, 'type': 'string', }, 
				'reference':              { 'index': 24, 'type': 'string', }, 
				'clientReference':        { 'index': 25, 'type': 'string', }, 
				'exchangeMemberId':       { 'index': 26, 'type': 'string', }, 
				'executingMemberId':      { 'index': 27, 'type': 'string', }, 
				'clearingMemberId':       { 'index': 28, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '16'},
				                            ],
				                          },
				'clearingAccount':        { 'index': 29, 'type': 'string', }, 
				'clearingAccountType':    { 'index': 30, 'type': 'string', }, 
				'clearingProductList':    { 'index': 31, 'type': 'table', 'tablename': 'ClearingProduct', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'collection'},
				                            ],
				                          },
				'tradeSubId':             { 'index': 32, 'type': 'string', }, 
				'parentTradeSubId':       { 'index': 33, 'type': 'string', }, 
				'giveUpStatus':           { 'index': 34, 'type': 'ubyte', 'enum': 'OmGiveUp', }, 
				'giveUpMessage':          { 'index': 35, 'type': 'string', }, 
				'giveUpId':               { 'index': 36, 'type': 'string', }, 
				'spread':                 { 'index': 37, 'type': 'bool', }, 
				'openClose':              { 'index': 38, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'ctiCode':                { 'index': 39, 'type': 'string', }, 
				'residualQuantity':       { 'index': 40, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'oppositeMemberId':       { 'index': 41, 'type': 'string', }, 
				'averagePriceIndicator':  { 'index': 42, 'type': 'ubyte', 'enum': 'OmApi', }, 
				'roundedPrice':           { 'index': 43, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'error':                  { 'index': 44, 'type': 'string', }, 
				'tradingVenue':           { 'index': 45, 'type': 'string', }, 
				'tradeSubType':           { 'index': 46, 'type': 'string', }, 
				'clearingOrganizationId': { 'index': 47, 'type': 'string', }, 
				'submittingMemberCode':   { 'index': 48, 'type': 'string', }, 
				'instructionElementId':   { 'index': 49, 'type': 'int', }, 
				'clearingOrgId':          { 'index': 50, 'type': 'string', }, 
				'commission':             { 'index': 51, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'originalClearingDate':   { 'index': 52, 'type': 'string', }, 
				'asOfDate':               { 'index': 53, 'type': 'string', }, 
			}, 
		}, 
		'TradeReportResponse': {
			'id': 510, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'actReportStatus':                     { 'index': 0, 'type': 'string', 
				                                         'meta-fields': [
					                                     {'field': 'maxStringLength' , 'value' : '1'},
				                                         ],
				                                       },
				'tradeReportResponseId':               { 'index': 1, 'type': 'string', 
				                                         'meta-fields': [
					                                     {'field': 'maxStringLength' , 'value' : '10'},
				                                         ],
				                                       },
				'tradeReportState':                    { 'index': 2, 'type': 'ubyte', 'enum': 'OmTradeReportState', }, 
				'rejectReasonText':                    { 'index': 3, 'type': 'string', 
				                                         'meta-fields': [
					                                     {'field': 'maxStringLength' , 'value' : '256'},
				                                         ],
				                                       },
				'tradeReportResponseControlDateLocal': { 'index': 4, 'type': 'int', 
				                                         'meta-fields': [
					                                     {'field': 'dictionaryType' , 'value' : 'date'},
				                                         ],
				                                       },
			}, 
		}, 
		'TradeReportResponseCommand': {
			'id': 511, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':       { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'executionId':         { 'index': 1, 'type': 'string', 'aliases': ['execId'], 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'tradeReportResponse': { 'index': 2, 'type': 'table', 'tablename': 'TradeReportResponse', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
			}, 
		}, 
		'TradeUpdateTypeList': {
			'id': 305, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'tradeUpdate': { 'index': 0, 'type': 'ubyte', 'enum': 'OmTradeUpdateType', }, 
			}, 
		}, 
		'TradingAlgorithmSequence': {
			'id': 716, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'investmentAlgorithmId':         { 'index': 0, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '32'},
				                                   ],
				                                 },
				'executionAlgorithmId':          { 'index': 1, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '32'},
				                                   ],
				                                 },
				'sorAlgorithmId':                { 'index': 2, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '32'},
				                                   ],
				                                 },
				'workflowAutomationAlgorithmId': { 'index': 3, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '32'},
				                                   ],
				                                 },
			}, 
		}, 
		'TradingControlAttributes': {
			'id': 760, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'isImpactfulForAggregateOrderPriceImpactControl': { 'index': 0, 'type': 'bool', }, 
			}, 
		}, 
		'TradingUnitCreditInformation': {
			'id': 472, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'tradingUnitId':                              { 'index': 0, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '8'},
				                                                ],
				                                              },
				'parentTradingUnitId':                        { 'index': 1, 'type': 'string', 
				                                                'meta-fields': [
					                                            {'field': 'maxStringLength' , 'value' : '29'},
				                                                ],
				                                              },
				'productInstrumentTypeCreditInformationList': { 'index': 2, 'type': 'table', 'tablename': 'ProductInstrumentTypeCreditInformation', 
				                                                'meta-fields': [
					                                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                ],
				                                              },
			}, 
		}, 
		'TransactionElement': {
			'id': 382, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'repositoryAction': { 'index': 0, 'type': 'ubyte', 'enum': 'OmRepositoryActionType', }, 
				'newVersion':       { 'index': 1, 'type': 'uint', }, 
				'oldVersion':       { 'index': 2, 'type': 'uint', }, 
				'tableId':          { 'index': 3, 'type': 'int', }, 
				'recordData':       { 'index': 4, 'type': 'binary', 
				                      'meta-fields': [
					                  {'field': 'rdbConvertToIvComAs' , 'value' : 'businessObject:tableId'},
					                  {'field': 'dictionaryType' , 'value' : 'blob'},
				                      ],
				                    },
			}, 
		}, 
		'TransactionLogEntry': {
			'id': 152, 
			'version': 4, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbMessageKeyPart' , 'value' : 'eventId,transactionCommitId,processInfo/networkAddress,processInfo/instanceName,processInfo/processRole,processInfo/processName,processInfo/runtimeEnvironment,transactionTime'},
			],
			'columns': {
				'eventId':                    { 'index': 0, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'transactionCommitId':        { 'index': 1, 'type': 'string', 'aliases': ['eventGsuid'], 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'eventTimeMicrosecond':       { 'index': 2, 'type': 'int', }, 
				'eventTime':                  { 'index': 3, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'rdbMergeIntoDateTime' , 'value' : 'eventTimeMicrosecond:eventTimestamp'},
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'messageData':                { 'index': 4, 'type': 'binary', # FIELD HAS BEEN DEPRECATED
				                                'meta-fields': [
					                            {'field': 'deprecated' , 'value' : 'true'},
					                            {'field': 'dictionaryType' , 'value' : 'blob'},
				                                ],
				                              },
				'tableId':                    { 'index': 5, 'type': 'int', }, 
				'processInfo':                { 'index': 6, 'type': 'table', 'tablename': 'ProcessInfo', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
				'sequencedMessageIndexes':    { 'index': 7, 'type': 'table', 'tablename': 'SequencedMessageIndex', # FIELD HAS BEEN DEPRECATED
				                                'meta-fields': [
					                            {'field': 'deprecated' , 'value' : 'true'},
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'transactionMessageElements': { 'index': 8, 'type': 'table', 'tablename': 'TransactionMessageElement', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'messageWrapperIndexes':      { 'index': 9, 'type': 'table', 'tablename': 'MessageWrapperIndex', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
				'transactionTime':            { 'index': 10, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'transactionMessages':        { 'index': 11, 'type': 'table', 'tablename': 'TransactionMessage', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'collection'},
				                                ],
				                              },
			}, 
		}, 
		'TransactionMessage': {
			'id': 173, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'messageType':         { 'index': 0, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '50'},
				                         ],
				                       },
				'messageSummaryText':  { 'index': 1, 'type': 'string', }, 
				'transactionElements': { 'index': 2, 'type': 'table', 'tablename': 'TransactionElement', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                         ],
				                       },
				'orderId':             { 'index': 3, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
			}, 
		}, 
		'TransactionMessageElement': {
			'id': 158, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'messageData':  { 'index': 0, 'type': 'binary', 
				                  'meta-fields': [
					              {'field': 'dictionaryType' , 'value' : 'blob'},
				                  ],
				                },
				'messageIndex': { 'index': 1, 'type': 'int', }, 
			}, 
		}, 
		'TransactionNotification': {
			'id': 381, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'transactionCommitIdInt':         { 'index': 0, 'type': 'int', }, 
				'transactionElements':            { 'index': 1, 'type': 'table', 'tablename': 'TransactionElement', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'transactionTime':                { 'index': 2, 'type': 'int', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                    ],
				                                  },
				'transactionTimeMicrosecond':     { 'index': 3, 'type': 'uint', }, 
				'transactionDurationMicrosecond': { 'index': 4, 'type': 'uint', }, 
			}, 
		}, 
		'TransactionTimeSpan': {
			'id': 147, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'transactionCommitId':       { 'index': 0, 'type': 'string', 'aliases': ['eventGsuid'], 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '29'},
				                               ],
				                             },
				'eventBeginTimeMicrosecond': { 'index': 1, 'type': 'int', }, 
				'eventBeginTime':            { 'index': 2, 'type': 'int', 
				                               'meta-fields': [
					                           {'field': 'rdbMergeIntoDateTime' , 'value' : 'eventBeginTimeMicrosecond:eventBeginTimestamp'},
					                           {'field': 'dictionaryType' , 'value' : 'datetime'},
				                               ],
				                             },
				'eventEndTimeMicrosecond':   { 'index': 3, 'type': 'int', }, 
				'eventEndTime':              { 'index': 4, 'type': 'int', 
				                               'meta-fields': [
					                           {'field': 'rdbMergeIntoDateTime' , 'value' : 'eventEndTimeMicrosecond:eventEndTimestamp'},
					                           {'field': 'dictionaryType' , 'value' : 'datetime'},
				                               ],
				                             },
			}, 
		}, 
		'TransactionalProductWrapperData': {
			'id': 125, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'productId':            { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '100'},
				                          ],
				                        },
				'transactionalProduct': { 'index': 1, 'type': 'table', 'tablename': 'RdsTransactionalProduct', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
			}, 
		}, 
		'UnDoneForDayOrderCommand': {
			'id': 344, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'orderId':            { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
			}, 
		}, 
		'UnSuspendOrderCommand': {
			'id': 130, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                 { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
				'externalReferences':            { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'collection'},
				                                   ],
				                                 },
				'orderId':                       { 'index': 2, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '29'},
				                                   ],
				                                 },
				'unSuspendReasonText':           { 'index': 3, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '256'},
				                                   ],
				                                 },
				'takeOwnership':                 { 'index': 4, 'type': 'bool', }, 
				'restrictedTradingListOverride': { 'index': 5, 'type': 'table', 'tablename': 'RestrictedTradingListOverride', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
			}, 
		}, 
		'UniqueIdData': {
			'id': 32, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'version':          { 'index': 0, 'type': 'int', }, 
				'uniqueIdPrefix':   { 'index': 1, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '50'},
				                      ],
				                    },
				'repositoryAction': { 'index': 2, 'type': 'ubyte', 'enum': 'OmRepositoryActionType', }, 
			}, 
		}, 
		'UniversalTradeId': {
			'id': 762, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'universalTradeId': { 'index': 0, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '31'},
				                      ],
				                    },
			}, 
		}, 
		'UnsuspendExecutionCommand': {
			'id': 346, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'externalReferences':           { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                  ],
				                                },
				'executionId':                  { 'index': 2, 'type': 'string', 'aliases': ['execId'], 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'executionUnsuspendReasonText': { 'index': 3, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '256'},
				                                  ],
				                                },
				'unsuspendExecutionOverride':   { 'index': 4, 'type': 'bool', }, 
			}, 
		}, 
		'UpdateLocateDetailsCommand': {
			'id': 368, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':     { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'locateRequestId':   { 'index': 1, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '37'},
				                       ],
				                     },
				'locateDetailsList': { 'index': 2, 'type': 'table', 'tablename': 'LocateDetails', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                       ],
				                     },
				'orderId':           { 'index': 3, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '29'},
				                       ],
				                     },
			}, 
		}, 
		'UpdateMatchingEngineStatusCommand': {
			'id': 163, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'matchingEngineStatus':      { 'index': 0, 'type': 'ubyte', 'enum': 'OmMatchingEngineStatus', }, 
				'matchingEngineStatusScope': { 'index': 1, 'type': 'ubyte', 'enum': 'OmMatchingEngineStatusScope', }, 
				'productId':                 { 'index': 2, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '100'},
				                               ],
				                             },
				'productIdType':             { 'index': 3, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'tradingUnitId':             { 'index': 4, 'type': 'string', 
				                               'meta-fields': [
					                           {'field': 'maxStringLength' , 'value' : '8'},
				                               ],
				                             },
			}, 
		}, 
		'UserAlertCommand': {
			'id': 176, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'externalReferences': { 'index': 1, 'type': 'table', 'tablename': 'ExternalReference', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'collection'},
				                        ],
				                      },
				'orderId':            { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'alertText':          { 'index': 3, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '300'},
				                        ],
				                      },
			}, 
		}, 
		'UserPositionData': {
			'id': 314, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'positionHashKey': { 'index': 0, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '64'},
				                     ],
				                   },
				'shortPosition':   { 'index': 1, 'type': 'double', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'real'},
				                     ],
				                   },
				'longPosition':    { 'index': 2, 'type': 'double', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'real'},
				                     ],
				                   },
			}, 
		}, 
		'ValidateCreateOrderCommand': {
			'id': 438, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':      { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
				'createOrderCommand': { 'index': 1, 'type': 'table', 'tablename': 'CreateOrderCommand', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'struct'},
				                        ],
				                      },
			}, 
		}, 
		'ValidateRequestCorrectOrderCommand': {
			'id': 439, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':              { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
				'requestCorrectOrderCommand': { 'index': 1, 'type': 'table', 'tablename': 'RequestCorrectOrderCommand', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
			}, 
		}, 
		'ValidationApprovalInformation': {
			'id': 441, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'validationApprovalType':   { 'index': 0, 'type': 'ubyte', 'enum': 'OmApprovalType', }, 
				'validationApprovalStatus': { 'index': 1, 'type': 'ubyte', 'enum': 'OmApprovalStatus', }, 
				'validationApprovalText':   { 'index': 2, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '256'},
				                              ],
				                            },
			}, 
		}, 
		'ValidationResponse': {
			'id': 440, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'validationResult':                  { 'index': 0, 'type': 'ubyte', 'enum': 'OmValidationResult', }, 
				'validationApprovalInformationList': { 'index': 1, 'type': 'table', 'tablename': 'ValidationApprovalInformation', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
			}, 
		}, 
		'VenueEntitlement': {
			'id': 396, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'venue': { 'index': 0, 'type': 'string', 
				           'meta-fields': [
					       {'field': 'maxStringLength' , 'value' : '9'},
				           ],
				         },
			}, 
		}, 
		'VenueRestriction': {
			'id': 119, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'executionPoint':    { 'index': 0, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '16'},
				                       ],
				                     },
				'minPrice':          { 'index': 1, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'maxPrice':          { 'index': 2, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'minQuantity':       { 'index': 3, 'type': 'int', }, 
				'maxQuantity':       { 'index': 4, 'type': 'int', }, 
				'minValue':          { 'index': 5, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'maxValue':          { 'index': 6, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				't2EvaluationTrace': { 'index': 7, 'type': 'binary', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'blob'},
				                       ],
				                     },
			}, 
		}, 
		'VikingAcceptCancelRequest': {
			'id': 80, 
			'version': 7, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':            { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                              ],
				                            },
				'orderId':                  { 'index': 1, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'exchangeOrderId':          { 'index': 2, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '64'},
				                              ],
				                            },
				'quantityRemaining':        { 'index': 3, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'executedQuantity':         { 'index': 4, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'applicationStripe':        { 'index': 5, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '18'},
				                              ],
				                            },
				'prevExchangeOrderId':      { 'index': 6, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '32'},
				                              ],
				                            },
				'orderVersion':             { 'index': 7, 'type': 'uint', }, 
				'cancelledQuantity':        { 'index': 8, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'destinationMembershipId':  { 'index': 9, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '30'},
				                              ],
				                            },
				'lastVikingId':             { 'index': 10, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '64'},
				                              ],
				                            },
				'flowSpecificCanada':       { 'index': 11, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                              ],
				                            },
				'settlementDateCalcMethod': { 'index': 12, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'settlementDate':           { 'index': 13, 'type': 'int', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'datetime'},
				                              ],
				                            },
			}, 
		}, 
		'VikingAcceptCorrectionRequest': {
			'id': 77, 
			'version': 9, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':                { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'orderId':                      { 'index': 1, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'exchangeOrderId':              { 'index': 2, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
				'quantityRemaining':            { 'index': 3, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'executedQuantity':             { 'index': 4, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'applicationStripe':            { 'index': 5, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '18'},
				                                  ],
				                                },
				'prevExchangeOrderId':          { 'index': 6, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '32'},
				                                  ],
				                                },
				'orderVersion':                 { 'index': 7, 'type': 'uint', }, 
				'lastVikingId':                 { 'index': 8, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
				'destinationMembershipId':      { 'index': 9, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '30'},
				                                  ],
				                                },
				'destinationComplianceOrderId': { 'index': 10, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '30'},
				                                  ],
				                                },
				'flowSpecificCanada':           { 'index': 11, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'settlementDateCalcMethod':     { 'index': 12, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'settlementDate':               { 'index': 13, 'type': 'int', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                  ],
				                                },
				'acceptedCorrectionQuantity':   { 'index': 14, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'deltaQuantity':                { 'index': 15, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
			}, 
		}, 
		'VikingAmendMultiLegOrder': {
			'id': 166, 
			'version': 11, 
			'publishable': 'true', 
			'columns': {
				'orderId':                        { 'index': 0, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '29'},
				                                    ],
				                                  },
				'orderVersion':                   { 'index': 1, 'type': 'uint', }, 
				'lastVikingId':                   { 'index': 2, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '64'},
				                                    ],
				                                  },
				'vikingLineId':                   { 'index': 3, 'type': 'string', 'aliases': ['vikingLHId'], 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '64'},
				                                    ],
				                                  },
				'orderType':                      { 'index': 4, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'limitPrice':                     { 'index': 5, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'quantity':                       { 'index': 6, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'destinationMembershipId':        { 'index': 7, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '30'},
				                                    ],
				                                  },
				'counterPartyId':                 { 'index': 8, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '29'},
				                                    ],
				                                  },
				'consolidatedRegulatoryCode':     { 'index': 9, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'vikingOrderLegs':                { 'index': 10, 'type': 'table', 'tablename': 'VikingOrderLeg', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'commandHeader':                  { 'index': 11, 'type': 'table', 'tablename': 'CommandHeader', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                    ],
				                                  },
				'exchangeOrderId':                { 'index': 12, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '64'},
				                                    ],
				                                  },
				'timeInForce':                    { 'index': 13, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'expirationDateTime':             { 'index': 14, 'type': 'int', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                    ],
				                                  },
				'allOrNone':                      { 'index': 15, 'type': 'bool', }, 
				'vikingDestinationId':            { 'index': 16, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '20'},
				                                    ],
				                                  },
				'exchangeQuantity':               { 'index': 17, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'orderOriginCode':                { 'index': 18, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '1'},
				                                    ],
				                                  },
				'marketMakerId':                  { 'index': 19, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'marketMakerOCCClearingAccount':  { 'index': 20, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'deltaQuantity':                  { 'index': 21, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'clearingFirm':                   { 'index': 22, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'preferredMarketMakerId':         { 'index': 23, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'isDirectedOrderWithAuction':     { 'index': 24, 'type': 'bool', }, 
				'vikingDestinationSubId':         { 'index': 25, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '20'},
				                                    ],
				                                  },
				'marketMakerExchangeRepresented': { 'index': 26, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '4'},
				                                    ],
				                                  },
			}, 
		}, 
		'VikingAmendOrder': {
			'id': 74, 
			'version': 77, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada,flowSpecificAustralia'},
			],
			'columns': {
				'commandHeader':                                { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'orderId':                                      { 'index': 1, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '29'},
				                                                  ],
				                                                },
				'exchangeOrderId':                              { 'index': 2, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '64'},
				                                                  ],
				                                                },
				'orderType':                                    { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'quantity':                                     { 'index': 4, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'deltaQuantity':                                { 'index': 5, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'timeInForce':                                  { 'index': 6, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'expirationDateTime':                           { 'index': 7, 'type': 'int', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                  ],
				                                                },
				'allOrNone':                                    { 'index': 8, 'type': 'bool', }, 
				'limitPrice':                                   { 'index': 9, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'stopPrice':                                    { 'index': 10, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'executionCurrency':                            { 'index': 11, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '3'},
				                                                  ],
				                                                },
				'maxTrancheSize':                               { 'index': 12, 'type': 'double', 'aliases': ['displaySize'], 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'traderExchangeId':                             { 'index': 13, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '30'},
				                                                  ],
				                                                },
				'applicationStripe':                            { 'index': 14, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '18'},
				                                                  ],
				                                                },
				'productSynonyms':                              { 'index': 15, 'type': 'table', 'tablename': 'ProductSynonym', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'vikingMarketId':                               { 'index': 16, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '16'},
				                                                  ],
				                                                },
				'vikingMarketIdType':                           { 'index': 17, 'type': 'ubyte', 'enum': 'OmVikingMarketIdType', }, 
				'ignoreAggressionCheck':                        { 'index': 18, 'type': 'bool', }, 
				'ignoreOddLotCheck':                            { 'index': 19, 'type': 'bool', }, 
				'buySell':                                      { 'index': 20, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'accountSynonym':                               { 'index': 21, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '50'},
				                                                  ],
				                                                },
				'prevExchangeOrderId':                          { 'index': 22, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '32'},
				                                                  ],
				                                                },
				'orderCapacity':                                { 'index': 23, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':                                   { 'index': 24, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':                                { 'index': 25, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'orderVersion':                                 { 'index': 26, 'type': 'uint', }, 
				'lastVikingId':                                 { 'index': 27, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '64'},
				                                                  ],
				                                                },
				'sellShort':                                    { 'index': 28, 'type': 'bool', }, 
				'sellShortExempt':                              { 'index': 29, 'type': 'bool', }, 
				'priceStabilization':                           { 'index': 30, 'type': 'bool', }, 
				'vikingSubMarketId':                            { 'index': 31, 'type': 'string', }, 
				'lotSize':                                      { 'index': 32, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'pegType':                                      { 'index': 33, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffset':                                    { 'index': 34, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'pegOffsetType':                                { 'index': 35, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'pegScope':                                     { 'index': 36, 'type': 'ubyte', 'enum': 'OmPegScopeType', }, 
				'discretionaryReferencePriceType':              { 'index': 37, 'type': 'ubyte', 'enum': 'OmDiscretionaryReferencePriceType', }, 
				'discretionaryOffset':                          { 'index': 38, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'discretionaryOffsetType':                      { 'index': 39, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'orderbookVisibility':                          { 'index': 40, 'type': 'ubyte', 'enum': 'OmOrderbookVisibilityType', }, 
				'offsetDirectionType':                          { 'index': 41, 'type': 'ubyte', 'enum': 'OmOffsetDirectionType', }, 
				'tradingPhase':                                 { 'index': 42, 'type': 'ubyte', 'enum': 'OmTradingPhase', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
				                                                  ],
				                                                },
				'notHeld':                                      { 'index': 43, 'type': 'bool', }, 
				'routingStrategy':                              { 'index': 44, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '50'},
				                                                  ],
				                                                },
				'doNotIncrease':                                { 'index': 45, 'type': 'bool', }, 
				'doNotReduce':                                  { 'index': 46, 'type': 'bool', }, 
				'interMarketSweep':                             { 'index': 47, 'type': 'bool', }, 
				'destinationMarketOnly':                        { 'index': 48, 'type': 'bool', }, 
				'destinationMembershipId':                      { 'index': 49, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '30'},
				                                                  ],
				                                                },
				'vikingLineId':                                 { 'index': 50, 'type': 'string', 'aliases': ['vikingLHId'], 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '64'},
				                                                  ],
				                                                },
				'buyToCover':                                   { 'index': 51, 'type': 'bool', }, 
				'consolidatedRegulatoryCode':                   { 'index': 52, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'isOddLot':                                     { 'index': 53, 'type': 'bool', }, 
				'marketProtection':                             { 'index': 54, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'marketProtectionType':                         { 'index': 55, 'type': 'ubyte', 'enum': 'OmMarketProtectionType', }, 
				'quantityRemaining':                            { 'index': 56, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'isStrategyOrder':                              { 'index': 57, 'type': 'bool', }, 
				'partOfProgram':                                { 'index': 58, 'type': 'bool', }, 
				'arbitrageStrategy':                            { 'index': 59, 'type': 'ubyte', 'enum': 'OmArbitrageStrategy', }, 
				'algorithmicIndicator':                         { 'index': 60, 'type': 'ubyte', 'enum': 'OmAlgorithmicIndicator', }, 
				'trancheSizeDisplayRange':                      { 'index': 61, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'ignoreImbalanceCheck':                         { 'index': 62, 'type': 'bool', }, 
				'startDateTime':                                { 'index': 63, 'type': 'int', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                  ],
				                                                },
				'minExecutableQuantity':                        { 'index': 64, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'ignoreMarketOnCloseCheck':                     { 'index': 65, 'type': 'bool', }, 
				'vikingDestinationId':                          { 'index': 66, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '20'},
				                                                  ],
				                                                },
				'crossConsent':                                 { 'index': 67, 'type': 'ubyte', 'enum': 'OmCrossingOption', }, 
				'interventionConsent':                          { 'index': 68, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
				'contractMaturityMonth':                        { 'index': 69, 'type': 'int', }, 
				'contractMaturityYear':                         { 'index': 70, 'type': 'int', }, 
				'isInterCommodityStrategy':                     { 'index': 71, 'type': 'bool', }, 
				'traderComment':                                { 'index': 72, 'type': 'table', 'tablename': 'Comment', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'minDiscretionaryQuantity':                     { 'index': 73, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'brokerBillingType':                            { 'index': 74, 'type': 'ubyte', 'enum': 'OmBrokerBillingType', }, 
				'businessUnit':                                 { 'index': 75, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '16'},
				                                                  ],
				                                                },
				'counterPartyId':                               { 'index': 76, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '29'},
				                                                  ],
				                                                },
				'counterpartyTraderId':                         { 'index': 77, 'type': 'string', }, 
				'productInstrumentType':                        { 'index': 78, 'type': 'ubyte', 'enum': 'OmProductInstrumentType', }, 
				'contractMaturityDay':                          { 'index': 79, 'type': 'int', }, 
				'putCall':                                      { 'index': 80, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'positionOpenClose':                            { 'index': 81, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'strikePrice':                                  { 'index': 82, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'facilitationPercent':                          { 'index': 83, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'isEnhancedLimitOrder':                         { 'index': 84, 'type': 'bool', }, 
				'isSpecialLimitOrder':                          { 'index': 85, 'type': 'bool', }, 
				'sellShortArbitrage':                           { 'index': 86, 'type': 'bool', }, 
				'sellShortCover':                               { 'index': 87, 'type': 'bool', }, 
				'sellShortCross':                               { 'index': 88, 'type': 'bool', }, 
				'contractMultiplier':                           { 'index': 89, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'sourceBusinessUnit':                           { 'index': 90, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '16'},
				                                                  ],
				                                                },
				'isImbalanceOffsetOnly':                        { 'index': 91, 'type': 'bool', }, 
				'marketSession':                                { 'index': 92, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'investorId':                                   { 'index': 93, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '50'},
				                                                  ],
				                                                },
				'exchangeAccount':                              { 'index': 94, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '50'},
				                                                  ],
				                                                },
				'isMinimumGuaranteedFillEligible':              { 'index': 95, 'type': 'bool', }, 
				'tsxRegulationCode':                            { 'index': 96, 'type': 'string', # FIELD IS OBSOLETE
				                                                  'meta-fields': [
					                                              {'field': 'obsolete' , 'value' : 'true'},
					                                              {'field': 'maxStringLength' , 'value' : '2'},
				                                                  ],
				                                                },
				'clientMembershipId':                           { 'index': 97, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '30'},
				                                                  ],
				                                                },
				'clientsReference':                             { 'index': 98, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '50'},
				                                                  ],
				                                                },
				'customerName':                                 { 'index': 99, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '50'},
				                                                  ],
				                                                },
				'owner':                                        { 'index': 100, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '32'},
				                                                  ],
				                                                },
				'hideMembershipIdAtDestination':                { 'index': 101, 'type': 'bool', }, 
				'flowSpecificCanada':                           { 'index': 102, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'exchangeQuantity':                             { 'index': 103, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'whiteLabelDataId':                             { 'index': 104, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '20'},
				                                                  ],
				                                                },
				'vikingDestinationSubId':                       { 'index': 105, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '20'},
				                                                  ],
				                                                },
				'provideLiquidityOnly':                         { 'index': 106, 'type': 'bool', }, 
				'orderOriginCode':                              { 'index': 107, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '1'},
				                                                  ],
				                                                },
				'marketMakerId':                                { 'index': 108, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '5'},
				                                                  ],
				                                                },
				'marketMakerOCCClearingAccount':                { 'index': 109, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '5'},
				                                                  ],
				                                                },
				'marketMakerExchangeRepresented':               { 'index': 110, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '4'},
				                                                  ],
				                                                },
				'isSolicitedOrder':                             { 'index': 111, 'type': 'bool', }, 
				'isTradingAutomationGenerated':                 { 'index': 112, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
				                                                  ],
				                                                },
				'senderLocation':                               { 'index': 113, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '32'},
				                                                  ],
				                                                },
				'destinationMembershipPassword':                { 'index': 114, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '30'},
				                                                  ],
				                                                },
				'originatorIpAddress':                          { 'index': 115, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '30'},
				                                                  ],
				                                                },
				'tradingAlgorithm':                             { 'index': 116, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '32'},
				                                                  ],
				                                                },
				'tradingAlgorithmParameters':                   { 'index': 117, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '1024'},
				                                                  ],
				                                                },
				'contractForDifferences':                       { 'index': 118, 'type': 'bool', }, 
				'smartRouteConsent':                            { 'index': 119, 'type': 'ubyte', 'enum': 'OmSmartRoutingOption', }, 
				'smartRoutedIndicator':                         { 'index': 120, 'type': 'bool', }, 
				'executedQuantity':                             { 'index': 121, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'orderCreationType':                            { 'index': 122, 'type': 'ubyte', 'enum': 'OmOrderCreationType', }, 
				'ctiCode':                                      { 'index': 123, 'type': 'string', }, 
				'isGsiOrderMarkingTowerStyle':                  { 'index': 124, 'type': 'bool', }, 
				'clearingFirm':                                 { 'index': 125, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '5'},
				                                                  ],
				                                                },
				'deltaPrice':                                   { 'index': 126, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'preferredMarketMakerId':                       { 'index': 127, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '5'},
				                                                  ],
				                                                },
				'isDirectedOrderWithAuction':                   { 'index': 128, 'type': 'bool', }, 
				'declarationType':                              { 'index': 129, 'type': 'ubyte', 'enum': 'OmDeclarationType', }, 
				'vikingNotionalCheckPriceCurrency':             { 'index': 130, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '3'},
				                                                  ],
				                                                },
				'vikingNotionalCheckPrice':                     { 'index': 131, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'nearLegPricePreference':                       { 'index': 132, 'type': 'ubyte', 'enum': 'OmNearLegPricePreference', }, 
				'externalTradingAlgorithmDetails':              { 'index': 133, 'type': 'table', 'tablename': 'ExternalTradingAlgorithmDetails', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'allocationOrderId':                            { 'index': 134, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '32'},
				                                                  ],
				                                                },
				'iosAccountExchangeCrossReference':             { 'index': 135, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
					                                              {'field': 'maxStringLength' , 'value' : '10'},
				                                                  ],
				                                                },
				'isAustraliaUndisclosedOrder':                  { 'index': 136, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
				                                                  ],
				                                                },
				'destinationAllowedBrokers':                    { 'index': 137, 'type': 'table', 'tablename': 'BrokerInfo', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                  ],
				                                                },
				'clientStarId':                                 { 'index': 138, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '10'},
				                                                  ],
				                                                },
				'originatorMacAddress':                         { 'index': 139, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '20'},
				                                                  ],
				                                                },
				'australiaUnintentionalCrossPreventionKey':     { 'index': 140, 'type': 'int', # FIELD HAS BEEN DEPRECATED
				                                                  'meta-fields': [
					                                              {'field': 'deprecated' , 'value' : 'true'},
				                                                  ],
				                                                },
				'exchangeAlgorithmId':                          { 'index': 141, 'type': 'int', }, 
				'flowSpecificAustralia':                        { 'index': 142, 'type': 'table', 'tablename': 'FlowSpecificAustralia', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                  ],
				                                                },
				'isKoreaPostMarginAccountOrder':                { 'index': 143, 'type': 'bool', }, 
				'exchangeSubAccount':                           { 'index': 144, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '50'},
				                                                  ],
				                                                },
				'selfMatchPreventionId':                        { 'index': 145, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '12'},
				                                                  ],
				                                                },
				'asiaFflFlowGroup':                             { 'index': 146, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '32'},
				                                                  ],
				                                                },
				'hedgeStrategy':                                { 'index': 147, 'type': 'ubyte', 'enum': 'OmHedgeStrategy', }, 
				'isMinExecutableQuantityResidualNotExecutable': { 'index': 148, 'type': 'bool', }, 
				'isMinExecutableQuantityMinExecutionSize':      { 'index': 149, 'type': 'bool', }, 
				'primaryAccountGsEntity':                       { 'index': 150, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '9'},
				                                                  ],
				                                                },
				'exchangeLimitPrice':                           { 'index': 151, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'exchangeStopPrice':                            { 'index': 152, 'type': 'double', 
				                                                  'meta-fields': [
					                                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                                  ],
				                                                },
				'exchangeLimitPriceCurrency':                   { 'index': 153, 'type': 'string', 
				                                                  'meta-fields': [
					                                              {'field': 'maxStringLength' , 'value' : '3'},
				                                                  ],
				                                                },
			}, 
		}, 
		'VikingCancelLegOrder': {
			'id': 167, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'orderId':                 { 'index': 0, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'orderVersion':            { 'index': 1, 'type': 'uint', }, 
				'lastVikingId':            { 'index': 2, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'vikingLineId':            { 'index': 3, 'type': 'string', 'aliases': ['vikingLHId'], 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'quantity':                { 'index': 4, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'destinationMembershipId': { 'index': 5, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'counterPartyId':          { 'index': 6, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'vikingOrderLegs':         { 'index': 7, 'type': 'table', 'tablename': 'VikingOrderLeg', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
			}, 
		}, 
		'VikingCancelMultiLegOrder': {
			'id': 168, 
			'version': 6, 
			'publishable': 'true', 
			'columns': {
				'orderId':                 { 'index': 0, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'orderVersion':            { 'index': 1, 'type': 'uint', }, 
				'lastVikingId':            { 'index': 2, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'vikingLineId':            { 'index': 3, 'type': 'string', 'aliases': ['vikingLHId'], 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'quantity':                { 'index': 4, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'destinationMembershipId': { 'index': 5, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'counterPartyId':          { 'index': 6, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'vikingOrderLegs':         { 'index': 7, 'type': 'table', 'tablename': 'VikingOrderLeg', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'commandHeader':           { 'index': 8, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'exchangeOrderId':         { 'index': 9, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'crossMatchingId':         { 'index': 10, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'vikingDestinationId':     { 'index': 11, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '20'},
				                             ],
				                           },
				'clearingFirm':            { 'index': 12, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '5'},
				                             ],
				                           },
				'cancelNewVersion':        { 'index': 13, 'type': 'uint', }, 
				'vikingDestinationSubId':  { 'index': 14, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '20'},
				                             ],
				                           },
			}, 
		}, 
		'VikingCancelOrder': {
			'id': 76, 
			'version': 37, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':                 { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
				'orderId':                       { 'index': 1, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '29'},
				                                   ],
				                                 },
				'exchangeOrderId':               { 'index': 2, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '64'},
				                                   ],
				                                 },
				'orderType':                     { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'quantity':                      { 'index': 4, 'type': 'double', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'real'},
				                                   ],
				                                 },
				'traderExchangeId':              { 'index': 5, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '30'},
				                                   ],
				                                 },
				'applicationStripe':             { 'index': 6, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '18'},
				                                   ],
				                                 },
				'productSynonyms':               { 'index': 7, 'type': 'table', 'tablename': 'ProductSynonym', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'collection'},
				                                   ],
				                                 },
				'vikingMarketId':                { 'index': 8, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '16'},
				                                   ],
				                                 },
				'vikingMarketIdType':            { 'index': 9, 'type': 'ubyte', 'enum': 'OmVikingMarketIdType', }, 
				'buySell':                       { 'index': 10, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'accountSynonym':                { 'index': 11, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '50'},
				                                   ],
				                                 },
				'prevExchangeOrderId':           { 'index': 12, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '32'},
				                                   ],
				                                 },
				'orderVersion':                  { 'index': 13, 'type': 'uint', }, 
				'lastVikingId':                  { 'index': 14, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '64'},
				                                   ],
				                                 },
				'vikingSubMarketId':             { 'index': 15, 'type': 'string', }, 
				'cancelNewVersion':              { 'index': 16, 'type': 'uint', }, 
				'vikingLineId':                  { 'index': 17, 'type': 'string', 'aliases': ['vikingLHId'], 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '64'},
				                                   ],
				                                 },
				'buyToCover':                    { 'index': 18, 'type': 'bool', }, 
				'destinationMembershipId':       { 'index': 19, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '30'},
				                                   ],
				                                 },
				'isStrategyOrder':               { 'index': 20, 'type': 'bool', }, 
				'sellShort':                     { 'index': 21, 'type': 'bool', }, 
				'ignoreMarketOnCloseCheck':      { 'index': 22, 'type': 'bool', }, 
				'vikingDestinationId':           { 'index': 23, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '20'},
				                                   ],
				                                 },
				'contractMaturityMonth':         { 'index': 24, 'type': 'int', }, 
				'contractMaturityYear':          { 'index': 25, 'type': 'int', }, 
				'isInterCommodityStrategy':      { 'index': 26, 'type': 'bool', }, 
				'counterPartyId':                { 'index': 27, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '29'},
				                                   ],
				                                 },
				'counterpartyTraderId':          { 'index': 28, 'type': 'string', }, 
				'productInstrumentType':         { 'index': 29, 'type': 'ubyte', 'enum': 'OmProductInstrumentType', }, 
				'contractMaturityDay':           { 'index': 30, 'type': 'int', }, 
				'putCall':                       { 'index': 31, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'positionOpenClose':             { 'index': 32, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'strikePrice':                   { 'index': 33, 'type': 'double', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'real'},
				                                   ],
				                                 },
				'facilitationPercent':           { 'index': 34, 'type': 'double', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'real'},
				                                   ],
				                                 },
				'isEnhancedLimitOrder':          { 'index': 35, 'type': 'bool', }, 
				'isSpecialLimitOrder':           { 'index': 36, 'type': 'bool', }, 
				'sellShortArbitrage':            { 'index': 37, 'type': 'bool', }, 
				'sellShortCover':                { 'index': 38, 'type': 'bool', }, 
				'sellShortCross':                { 'index': 39, 'type': 'bool', }, 
				'sourceBusinessUnit':            { 'index': 40, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '16'},
				                                   ],
				                                 },
				'investorId':                    { 'index': 41, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '50'},
				                                   ],
				                                 },
				'exchangeAccount':               { 'index': 42, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '50'},
				                                   ],
				                                 },
				'orderbookVisibility':           { 'index': 43, 'type': 'ubyte', 'enum': 'OmOrderbookVisibilityType', }, 
				'whiteLabelDataId':              { 'index': 44, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '20'},
				                                   ],
				                                 },
				'sellShortExempt':               { 'index': 45, 'type': 'bool', }, 
				'vikingDestinationSubId':        { 'index': 46, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '20'},
				                                   ],
				                                 },
				'flowSpecificCanada':            { 'index': 47, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'struct'},
				                                   ],
				                                 },
				'isTradingAutomationGenerated':  { 'index': 48, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                   'meta-fields': [
					                               {'field': 'deprecated' , 'value' : 'true'},
				                                   ],
				                                 },
				'senderLocation':                { 'index': 49, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '32'},
				                                   ],
				                                 },
				'targetQuoteId':                 { 'index': 50, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '32'},
				                                   ],
				                                 },
				'destinationMembershipPassword': { 'index': 51, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '30'},
				                                   ],
				                                 },
				'originatorIpAddress':           { 'index': 52, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '30'},
				                                   ],
				                                 },
				'cancelReason':                  { 'index': 53, 'type': 'ubyte', 'enum': 'OmCancelReason', }, 
				'isOddLot':                      { 'index': 54, 'type': 'bool', }, 
				'algorithmicIndicator':          { 'index': 55, 'type': 'ubyte', 'enum': 'OmAlgorithmicIndicator', }, 
				'smartRoutedIndicator':          { 'index': 56, 'type': 'bool', }, 
				'orderCreationType':             { 'index': 57, 'type': 'ubyte', 'enum': 'OmOrderCreationType', }, 
				'ctiCode':                       { 'index': 58, 'type': 'string', }, 
				'limitPrice':                    { 'index': 59, 'type': 'double', 
				                                   'meta-fields': [
					                               {'field': 'dictionaryType' , 'value' : 'real'},
				                                   ],
				                                 },
				'timeInForce':                   { 'index': 60, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'clearingFirm':                  { 'index': 61, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '5'},
				                                   ],
				                                 },
				'orderCapacity':                 { 'index': 62, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'nearLegPricePreference':        { 'index': 63, 'type': 'ubyte', 'enum': 'OmNearLegPricePreference', }, 
				'originatorMacAddress':          { 'index': 64, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '20'},
				                                   ],
				                                 },
				'exchangeAlgorithmId':           { 'index': 65, 'type': 'int', }, 
				'isKoreaPostMarginAccountOrder': { 'index': 66, 'type': 'bool', }, 
				'arbitrageStrategy':             { 'index': 67, 'type': 'ubyte', 'enum': 'OmArbitrageStrategy', }, 
				'exchangeSubAccount':            { 'index': 68, 'type': 'string', 
				                                   'meta-fields': [
					                               {'field': 'maxStringLength' , 'value' : '50'},
				                                   ],
				                                 },
				'hedgeStrategy':                 { 'index': 69, 'type': 'ubyte', 'enum': 'OmHedgeStrategy', }, 
			}, 
		}, 
		'VikingControl': {
			'id': 310, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'command': { 'index': 0, 'type': 'string', }, 
			}, 
		}, 
		'VikingCreateTradeReportVersion': {
			'id': 609, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':         { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'falconTradeReportData': { 'index': 1, 'type': 'table', 'tablename': 'FalconTradeReportData', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
			}, 
		}, 
		'VikingDeclaration': {
			'id': 421, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':         { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'struct'},
				                           ],
				                         },
				'orderId':               { 'index': 1, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'vikingMarketId':        { 'index': 2, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '16'},
				                           ],
				                         },
				'buySell':               { 'index': 3, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'quantity':              { 'index': 4, 'type': 'double', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'real'},
				                           ],
				                         },
				'productSynonyms':       { 'index': 5, 'type': 'table', 'tablename': 'ProductSynonym', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'collection'},
				                           ],
				                         },
				'declarationType':       { 'index': 6, 'type': 'ubyte', 'enum': 'OmDeclarationType', }, 
				'orderCapacity':         { 'index': 7, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'basketId':              { 'index': 8, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'exchangeOrderId':       { 'index': 9, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '64'},
				                           ],
				                         },
				'orderVersion':          { 'index': 10, 'type': 'uint', }, 
				'traderExchangeId':      { 'index': 11, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '30'},
				                           ],
				                         },
				'vikingDestinationId':   { 'index': 12, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '20'},
				                           ],
				                         },
				'lotSize':               { 'index': 13, 'type': 'double', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'real'},
				                           ],
				                         },
				'businessUnit':          { 'index': 14, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '16'},
				                           ],
				                         },
				'productInstrumentType': { 'index': 15, 'type': 'ubyte', 'enum': 'OmProductInstrumentType', }, 
				'exchangeAccount':       { 'index': 16, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '50'},
				                           ],
				                         },
			}, 
		}, 
		'VikingDeclarationAccept': {
			'id': 422, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
			}, 
		}, 
		'VikingDeclarationReject': {
			'id': 423, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'rejectReasons': { 'index': 2, 'type': 'table', 'tablename': 'RejectReason', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'collection'},
				                   ],
				                 },
			}, 
		}, 
		'VikingDoneForDay': {
			'id': 79, 
			'version': 6, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'orderId':                 { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'exchangeOrderId':         { 'index': 2, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'quantityRemaining':       { 'index': 3, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executedQuantity':        { 'index': 4, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'applicationStripe':       { 'index': 5, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '18'},
				                             ],
				                           },
				'prevExchangeOrderId':     { 'index': 6, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '32'},
				                             ],
				                           },
				'orderVersion':            { 'index': 7, 'type': 'uint', }, 
				'destinationMembershipId': { 'index': 8, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'rejectReasons':           { 'index': 9, 'type': 'table', 'tablename': 'RejectReason', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'flowSpecificCanada':      { 'index': 10, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'cancelledQuantity':       { 'index': 11, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
			}, 
		}, 
		'VikingExecution': {
			'id': 53, 
			'version': 43, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':                  { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                    ],
				                                  },
				'quantity':                       { 'index': 1, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'buySell':                        { 'index': 2, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'creatorId':                      { 'index': 3, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                    'meta-fields': [
					                                {'field': 'deprecated' , 'value' : 'true'},
					                                {'field': 'maxStringLength' , 'value' : '29'},
				                                    ],
				                                  },
				'orderId':                        { 'index': 4, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '29'},
				                                    ],
				                                  },
				'executionPrice':                 { 'index': 5, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'settlementCurrency':             { 'index': 6, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '3'},
				                                    ],
				                                  },
				'settlementDateCalcMethod':       { 'index': 7, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'exchangeExecutionId':            { 'index': 8, 'type': 'string', }, 
				'settlementDate':                 { 'index': 9, 'type': 'int', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                    ],
				                                  },
				'executionTime':                  { 'index': 10, 'type': 'int', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                    ],
				                                  },
				'exchangeOrderId':                { 'index': 11, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '64'},
				                                    ],
				                                  },
				'counterPartyId':                 { 'index': 12, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '29'},
				                                    ],
				                                  },
				'settlementCalendar':             { 'index': 13, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '16'},
				                                    ],
				                                  },
				'executionCapacity':              { 'index': 14, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionVenue':                 { 'index': 15, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '16'},
				                                    ],
				                                  },
				'executionTransactionType':       { 'index': 16, 'type': 'ubyte', 'enum': 'OmExecutionTransactionType', }, 
				'productSynonyms':                { 'index': 17, 'type': 'table', 'tablename': 'ProductSynonym', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'executionType':                  { 'index': 18, 'type': 'ubyte', 'enum': 'OmExecutionType', }, 
				'prevExchangeOrderId':            { 'index': 19, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '32'},
				                                    ],
				                                  },
				'executionTimeLocal':             { 'index': 20, 'type': 'int', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                    ],
				                                  },
				'orderVersion':                   { 'index': 21, 'type': 'uint', }, 
				'executionSubVenue':              { 'index': 22, 'type': 'string', }, 
				'isExecFromAuction':              { 'index': 23, 'type': 'bool', }, 
				'isExecFromDarkOrder':            { 'index': 24, 'type': 'bool', }, 
				'liquidityIndicator':             { 'index': 25, 'type': 'ubyte', 'enum': 'OmLiquidityIndicatorType', }, 
				'accounts':                       { 'index': 26, 'type': 'table', 'tablename': 'Account', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'clearingMemberId':               { 'index': 27, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '16'},
				                                    ],
				                                  },
				'vikingExecutionId':              { 'index': 28, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '100'},
				                                    ],
				                                  },
				'destinationMembershipId':        { 'index': 29, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '30'},
				                                    ],
				                                  },
				'executedQuantity':               { 'index': 30, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'sellShort':                      { 'index': 31, 'type': 'bool', }, 
				'executionLastMarket':            { 'index': 32, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '16'},
				                                    ],
				                                  },
				'nyseBillingIndicator':           { 'index': 33, 'type': 'ubyte', 'enum': 'OmNyseBillingIndicator', }, 
				'oldVikingExecutionId':           { 'index': 34, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '100'},
				                                    ],
				                                  },
				'executionSession':               { 'index': 35, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'brokerId':                       { 'index': 36, 'type': 'string', }, 
				'tradeReportingType':             { 'index': 37, 'type': 'ubyte', 'enum': 'OmTradeReportingType', }, 
				'tradeReportingExecutionType':    { 'index': 38, 'type': 'ubyte', 'enum': 'OmTradeReportingExecutionType', }, 
				'executionReason':                { 'index': 39, 'type': 'ubyte', 'enum': 'OmExecutionReason', }, 
				'exchangeBillingCode':            { 'index': 40, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '7'},
				                                    ],
				                                  },
				'exchangeAccessFee':              { 'index': 41, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'executionTimeMicrosecond':       { 'index': 42, 'type': 'int', }, 
				'isEnhancedLimitOrder':           { 'index': 43, 'type': 'bool', }, 
				'isSpecialLimitOrder':            { 'index': 44, 'type': 'bool', }, 
				'sellShortArbitrage':             { 'index': 45, 'type': 'bool', }, 
				'sellShortCover':                 { 'index': 46, 'type': 'bool', }, 
				'sellShortCross':                 { 'index': 47, 'type': 'bool', }, 
				'exchangeMemberId':               { 'index': 48, 'type': 'string', }, 
				'contractMultiplier':             { 'index': 49, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'traderComment':                  { 'index': 50, 'type': 'table', 'tablename': 'Comment', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                    ],
				                                  },
				'exchangeLoginId':                { 'index': 51, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '50'},
				                                    ],
				                                  },
				'sellShortExempt':                { 'index': 52, 'type': 'bool', }, 
				'whiteLabelDataId':               { 'index': 53, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '20'},
				                                    ],
				                                  },
				'doNotBook':                      { 'index': 54, 'type': 'bool', }, 
				'flowSpecificCanada':             { 'index': 55, 'type': 'table', 'tablename': 'FlowSpecificCanada', # FIELD IS OBSOLETE
				                                    'meta-fields': [
					                                {'field': 'obsolete' , 'value' : 'true'},
					                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                    ],
				                                  },
				'exchangeExecutionSecondaryId':   { 'index': 56, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '32'},
				                                    ],
				                                  },
				'execFlowSpecificCanada':         { 'index': 57, 'type': 'table', 'tablename': 'ExecFlowSpecificCanada', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                    ],
				                                  },
				'crossMatchingId':                { 'index': 58, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '30'},
				                                    ],
				                                  },
				'executionCurrency':              { 'index': 59, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '3'},
				                                    ],
				                                  },
				'isLateTrade':                    { 'index': 60, 'type': 'bool', }, 
				'charges':                        { 'index': 61, 'type': 'table', 'tablename': 'Charge', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'clearingDate':                   { 'index': 62, 'type': 'int', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                    ],
				                                  },
				'exchangeOrderSecondaryId':       { 'index': 63, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '32'},
				                                    ],
				                                  },
				'australiaTradeConditionCode':    { 'index': 64, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                    'meta-fields': [
					                                {'field': 'deprecated' , 'value' : 'true'},
					                                {'field': 'maxStringLength' , 'value' : '8'},
				                                    ],
				                                  },
				'executionCancelType':            { 'index': 65, 'type': 'ubyte', 'enum': 'OmExecutionCancelType', }, 
				'exchangeAccount':                { 'index': 66, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '50'},
				                                    ],
				                                  },
				'referenceCharges':               { 'index': 67, 'type': 'table', 'tablename': 'Charge', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'flowSpecificSEF':                { 'index': 68, 'type': 'table', 'tablename': 'FlowSpecificSEF', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                    ],
				                                  },
				'generatedExternalKey':           { 'index': 69, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '64'},
				                                    ],
				                                  },
				'crossPartyOrderCapacity':        { 'index': 70, 'type': 'table', 'tablename': 'CrossPartyOrderCapacity', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                    ],
				                                  },
				'execFlowSpecificAustralia':      { 'index': 71, 'type': 'table', 'tablename': 'ExecFlowSpecificAustralia', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                    ],
				                                  },
				'exchangeExecutionPrice':         { 'index': 72, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'exchangeExecutionPriceCurrency': { 'index': 73, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '3'},
				                                    ],
				                                  },
			}, 
		}, 
		'VikingExecutionLeg': {
			'id': 605, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'quantity':            { 'index': 0, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'productSynonyms':     { 'index': 1, 'type': 'table', 'tablename': 'ProductSynonym', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                         ],
				                       },
				'buySell':             { 'index': 2, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'executionPrice':      { 'index': 3, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'exchangeExecutionId': { 'index': 4, 'type': 'string', }, 
			}, 
		}, 
		'VikingExecutionNotification': {
			'id': 172, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'productSynonyms':          { 'index': 0, 'type': 'table', 'tablename': 'ProductSynonym', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'orderId':                  { 'index': 1, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'quantity':                 { 'index': 2, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'buySell':                  { 'index': 3, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'executionPrice':           { 'index': 4, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'exchangeExecutionId':      { 'index': 5, 'type': 'string', }, 
				'counterPartyId':           { 'index': 6, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'executionVenue':           { 'index': 7, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '16'},
				                              ],
				                            },
				'executionTime':            { 'index': 8, 'type': 'int', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'datetime'},
				                              ],
				                            },
				'exchangeOrderId':          { 'index': 9, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '64'},
				                              ],
				                            },
				'vikingOrderId':            { 'index': 10, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'traderExchangeId':         { 'index': 11, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '30'},
				                              ],
				                            },
				'executionCapacity':        { 'index': 12, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionCurrency':        { 'index': 13, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '3'},
				                              ],
				                            },
				'senderCompID':             { 'index': 14, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '128'},
				                              ],
				                            },
				'tradeId':                  { 'index': 15, 'type': 'string', }, 
				'matchId':                  { 'index': 16, 'type': 'string', }, 
				'productIdMarket':          { 'index': 17, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '4'},
				                              ],
				                            },
				'executionType':            { 'index': 18, 'type': 'ubyte', 'enum': 'OmExecutionType', }, 
				'executionTransactionType': { 'index': 19, 'type': 'ubyte', 'enum': 'OmExecutionTransactionType', }, 
				'generatedExternalKey':     { 'index': 20, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '64'},
				                              ],
				                            },
			}, 
		}, 
		'VikingExerciseAssignment': {
			'id': 303, 
			'version': 6, 
			'publishable': 'true', 
			'columns': {
				'messageId':           { 'index': 0, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '64'},
				                         ],
				                       },
				'receivedTime':        { 'index': 1, 'type': 'int', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'datetime'},
				                         ],
				                       },
				'transactionType':     { 'index': 2, 'type': 'string', }, 
				'eventType':           { 'index': 3, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'countryCode':         { 'index': 4, 'type': 'string', }, 
				'exchangeCode':        { 'index': 5, 'type': 'string', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
				                         ],
				                       },
				'contractType':        { 'index': 6, 'type': 'string', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
				                         ],
				                       },
				'productSynonyms':     { 'index': 7, 'type': 'table', 'tablename': 'ProductSynonym', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
					                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                         ],
				                       },
				'strikePrice':         { 'index': 8, 'type': 'double', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'putCall':             { 'index': 9, 'type': 'ubyte', 'enum': 'OmPutCall', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
				                         ],
				                       },
				'expiry':              { 'index': 10, 'type': 'int', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
					                     {'field': 'dictionaryType' , 'value' : 'date'},
				                         ],
				                       },
				'transactionId':       { 'index': 11, 'type': 'string', }, 
				'accountId':           { 'index': 12, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '50'},
				                         ],
				                       },
				'accountTypeStr':      { 'index': 13, 'type': 'string', }, 
				'quantity':            { 'index': 14, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'executionTime':       { 'index': 15, 'type': 'int', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'datetime'},
				                         ],
				                       },
				'clearingDate':        { 'index': 16, 'type': 'int', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
					                     {'field': 'dictionaryType' , 'value' : 'datetime'},
				                         ],
				                       },
				'executingMemberId':   { 'index': 17, 'type': 'string', }, 
				'clearingMemberId':    { 'index': 18, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '16'},
				                         ],
				                       },
				'endOfDay':            { 'index': 19, 'type': 'bool', }, 
				'contractVersion':     { 'index': 20, 'type': 'string', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
				                         ],
				                       },
				'clearingDateStr':     { 'index': 21, 'type': 'string', }, 
				'flexTrade':           { 'index': 22, 'type': 'bool', }, 
				'clearingProductList': { 'index': 23, 'type': 'table', 'tablename': 'ClearingProduct', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                         ],
				                       },
				'status':              { 'index': 24, 'type': 'ubyte', 'enum': 'OmTradeStatus', }, 
			}, 
		}, 
		'VikingForceCancelOrderCommand': {
			'id': 308, 
			'version': 5, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'orderId':                 { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'exchangeOrderId':         { 'index': 2, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'quantityRemaining':       { 'index': 3, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executedQuantity':        { 'index': 4, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'applicationStripe':       { 'index': 5, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '18'},
				                             ],
				                           },
				'prevExchangeOrderId':     { 'index': 6, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '32'},
				                             ],
				                           },
				'orderVersion':            { 'index': 7, 'type': 'uint', }, 
				'cancelledQuantity':       { 'index': 8, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'destinationMembershipId': { 'index': 9, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'cancelNewVersion':        { 'index': 10, 'type': 'uint', }, 
				'rejectingSystem':         { 'index': 11, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                             'meta-fields': [
					                         {'field': 'deprecated' , 'value' : 'true'},
				                             ],
				                           },
				'rejectReasons':           { 'index': 12, 'type': 'table', 'tablename': 'RejectReason', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'flowSpecificCanada':      { 'index': 13, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingInstruction': {
			'id': 301, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'instructionId':           { 'index': 0, 'type': 'string', }, 
				'tradeType':               { 'index': 1, 'type': 'string', }, 
				'tradeSubType':            { 'index': 2, 'type': 'string', }, 
				'feeCode':                 { 'index': 3, 'type': 'string', }, 
				'tradeDate':               { 'index': 4, 'type': 'string', }, 
				'clearingDate':            { 'index': 5, 'type': 'int', # FIELD IS OBSOLETE
				                             'meta-fields': [
					                         {'field': 'obsolete' , 'value' : 'true'},
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'updateTimestamp':         { 'index': 6, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'executionPrice':          { 'index': 7, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'averagePrice':            { 'index': 8, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'priceQuote':              { 'index': 9, 'type': 'string', }, 
				'historical':              { 'index': 10, 'type': 'bool', }, 
				'exchangeCode':            { 'index': 11, 'type': 'string', }, 
				'traderExchangeId':        { 'index': 12, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'executingMemberId':       { 'index': 13, 'type': 'string', }, 
				'floorMemberId':           { 'index': 14, 'type': 'string', }, 
				'userName':                { 'index': 15, 'type': 'string', }, 
				'productSynonyms':         { 'index': 16, 'type': 'table', 'tablename': 'ProductSynonym', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'strikePrice':             { 'index': 17, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'contractType':            { 'index': 18, 'type': 'string', }, 
				'putCall':                 { 'index': 19, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'transactionTime':         { 'index': 20, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'tradeInstructionDetails': { 'index': 21, 'type': 'table', 'tablename': 'VikingTradeInstructionDetail', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'clearingDateStr':         { 'index': 22, 'type': 'string', }, 
				'clearingMemberId':        { 'index': 23, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '16'},
				                             ],
				                           },
				'oppositeMemberId':        { 'index': 24, 'type': 'string', }, 
				'tradeId':                 { 'index': 25, 'type': 'string', }, 
				'tradeSubId':              { 'index': 26, 'type': 'string', }, 
				'expiry':                  { 'index': 27, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'date'},
				                             ],
				                           },
				'buySell':                 { 'index': 28, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'limitPrice':              { 'index': 29, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'quantity':                { 'index': 30, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'accountId':               { 'index': 31, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '50'},
				                             ],
				                           },
				'accountTypeStr':          { 'index': 32, 'type': 'string', }, 
				'originCode':              { 'index': 33, 'type': 'string', }, 
				'ctiCode':                 { 'index': 34, 'type': 'string', }, 
				'positionOpenClose':       { 'index': 35, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
			}, 
		}, 
		'VikingInstructionAck': {
			'id': 302, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'instructionId':           { 'index': 0, 'type': 'string', }, 
				'clearingInstruction':     { 'index': 1, 'type': 'ubyte', 'enum': 'OmClearingInstructionType', }, 
				'rejectingSystem':         { 'index': 2, 'type': 'ubyte', 'enum': 'OmRejectingSystem', }, 
				'errorCode':               { 'index': 3, 'type': 'string', }, 
				'rejectReasonText':        { 'index': 4, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '256'},
				                             ],
				                           },
				'tradeDate':               { 'index': 5, 'type': 'string', }, 
				'eventType':               { 'index': 6, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'tradeInstructionDetails': { 'index': 7, 'type': 'table', 'tablename': 'VikingTradeInstructionDetail', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingInstrumentStatus': {
			'id': 86, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'orderId':          { 'index': 0, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '29'},
				                      ],
				                    },
				'currency':         { 'index': 1, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '3'},
				                      ],
				                    },
				'productId':        { 'index': 2, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '100'},
				                      ],
				                    },
				'rejectReasonText': { 'index': 3, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                      'meta-fields': [
					                  {'field': 'deprecated' , 'value' : 'true'},
					                  {'field': 'maxStringLength' , 'value' : '256'},
				                      ],
				                    },
				'statusCode':       { 'index': 4, 'type': 'int', }, 
				'eventType':        { 'index': 5, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'updateTimestamp':  { 'index': 6, 'type': 'int', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'datetime'},
				                      ],
				                    },
				'vikingMarketId':   { 'index': 7, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '16'},
				                      ],
				                    },
				'commandHeader':    { 'index': 8, 'type': 'table', 'tablename': 'CommandHeader', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                      ],
				                    },
				'rejectingSystem':  { 'index': 9, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                      'meta-fields': [
					                  {'field': 'deprecated' , 'value' : 'true'},
				                      ],
				                    },
				'rejectReasons':    { 'index': 10, 'type': 'table', 'tablename': 'RejectReason', 
				                      'meta-fields': [
					                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                      ],
				                    },
			}, 
		}, 
		'VikingInstrumentStatusList': {
			'id': 91, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'instrumentStatusList':    { 'index': 0, 'type': 'table', 'tablename': 'VikingInstrumentStatus', # FIELD IS OBSOLETE
				                             'meta-fields': [
					                         {'field': 'obsolete' , 'value' : 'true'},
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'instrumentStatusListNew': { 'index': 1, 'type': 'table', 'tablename': 'VikingInstrumentStatus', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'commandHeader':           { 'index': 2, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingMassCancelRequest': {
			'id': 307, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'productIdMarket': { 'index': 0, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '4'},
				                     ],
				                   },
				'lineId':          { 'index': 1, 'type': 'string', }, 
				'commandHeader':   { 'index': 2, 'type': 'table', 'tablename': 'CommandHeader', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'struct'},
				                     ],
				                   },
				'includeGtcs':     { 'index': 3, 'type': 'bool', }, 
				'productSynonyms': { 'index': 4, 'type': 'table', 'tablename': 'ProductSynonym', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                     ],
				                   },
			}, 
		}, 
		'VikingMessageStore': {
			'id': 325, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'sequenceNumber':        { 'index': 0, 'type': 'int', }, 
				'messageData':           { 'index': 1, 'type': 'binary', 
				                           'meta-fields': [
					                       {'field': 'dictionaryType' , 'value' : 'blob'},
				                           ],
				                         },
				'messageTypeIdentifier': { 'index': 2, 'type': 'uint', }, 
				'messageFormat':         { 'index': 3, 'type': 'ubyte', 'enum': 'OmMessageFormat', }, 
				'vikingOrderId':         { 'index': 4, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
				'lineHandlerSessionId':  { 'index': 5, 'type': 'string', 
				                           'meta-fields': [
					                       {'field': 'maxStringLength' , 'value' : '29'},
				                           ],
				                         },
			}, 
		}, 
		'VikingMultiLegExecution': {
			'id': 178, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':            { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'struct'},
				                              ],
				                            },
				'quantity':                 { 'index': 1, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'productSynonyms':          { 'index': 2, 'type': 'table', 'tablename': 'ProductSynonym', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
				'buySell':                  { 'index': 3, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'executionPrice':           { 'index': 4, 'type': 'double', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'real'},
				                              ],
				                            },
				'settlementCurrency':       { 'index': 5, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '3'},
				                              ],
				                            },
				'settlementCalendar':       { 'index': 6, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '16'},
				                              ],
				                            },
				'orderId':                  { 'index': 7, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '29'},
				                              ],
				                            },
				'exchangeOrderId':          { 'index': 8, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '64'},
				                              ],
				                            },
				'exchangeExecutionId':      { 'index': 9, 'type': 'string', }, 
				'vikingExecutionId':        { 'index': 10, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '100'},
				                              ],
				                            },
				'executionCapacity':        { 'index': 11, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionVenue':           { 'index': 12, 'type': 'string', 
				                              'meta-fields': [
					                          {'field': 'maxStringLength' , 'value' : '16'},
				                              ],
				                            },
				'executionSubVenue':        { 'index': 13, 'type': 'string', }, 
				'executionTransactionType': { 'index': 14, 'type': 'ubyte', 'enum': 'OmExecutionTransactionType', }, 
				'executionTime':            { 'index': 15, 'type': 'int', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'datetime'},
				                              ],
				                            },
				'executionSession':         { 'index': 16, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'vikingExecutionLegs':      { 'index': 17, 'type': 'table', 'tablename': 'VikingExecutionLeg', 
				                              'meta-fields': [
					                          {'field': 'dictionaryType' , 'value' : 'collection'},
				                              ],
				                            },
			}, 
		}, 
		'VikingMultiLegOrder': {
			'id': 165, 
			'version': 15, 
			'publishable': 'true', 
			'columns': {
				'orderId':                        { 'index': 0, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '29'},
				                                    ],
				                                  },
				'orderVersion':                   { 'index': 1, 'type': 'uint', }, 
				'orderType':                      { 'index': 2, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'limitPrice':                     { 'index': 3, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'quantity':                       { 'index': 4, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'timeInForce':                    { 'index': 5, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'expirationDateTime':             { 'index': 6, 'type': 'int', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                    ],
				                                  },
				'allOrNone':                      { 'index': 7, 'type': 'bool', }, 
				'notHeld':                        { 'index': 8, 'type': 'bool', }, 
				'destinationMembershipId':        { 'index': 9, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '30'},
				                                    ],
				                                  },
				'counterPartyId':                 { 'index': 10, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '29'},
				                                    ],
				                                  },
				'consolidatedRegulatoryCode':     { 'index': 11, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'vikingOrderLegs':                { 'index': 12, 'type': 'table', 'tablename': 'VikingOrderLeg', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                    ],
				                                  },
				'commandHeader':                  { 'index': 13, 'type': 'table', 'tablename': 'CommandHeader', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                    ],
				                                  },
				'facilitationPercent':            { 'index': 14, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'facilitationPrice':              { 'index': 15, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'vikingDestinationId':            { 'index': 16, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '20'},
				                                    ],
				                                  },
				'crossMatchingId':                { 'index': 17, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '30'},
				                                    ],
				                                  },
				'vikingMarketId':                 { 'index': 18, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '16'},
				                                    ],
				                                  },
				'vikingMarketIdType':             { 'index': 19, 'type': 'ubyte', 'enum': 'OmVikingMarketIdType', }, 
				'orderOriginCode':                { 'index': 20, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '1'},
				                                    ],
				                                  },
				'marketMakerId':                  { 'index': 21, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'marketMakerOCCClearingAccount':  { 'index': 22, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'isATSTrade':                     { 'index': 23, 'type': 'bool', }, 
				'crossRequestReason':             { 'index': 24, 'type': 'ubyte', 'enum': 'OmCrossRequestReason', }, 
				'facilitationStepUpPrice':        { 'index': 25, 'type': 'double', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                    ],
				                                  },
				'clearingFirm':                   { 'index': 26, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'preferredMarketMakerId':         { 'index': 27, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '5'},
				                                    ],
				                                  },
				'isDirectedOrderWithAuction':     { 'index': 28, 'type': 'bool', }, 
				'cancelNewVersion':               { 'index': 29, 'type': 'uint', }, 
				'vikingDestinationSubId':         { 'index': 30, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '20'},
				                                    ],
				                                  },
				'australiaTradeConditionCode':    { 'index': 31, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                    'meta-fields': [
					                                {'field': 'deprecated' , 'value' : 'true'},
					                                {'field': 'maxStringLength' , 'value' : '8'},
				                                    ],
				                                  },
				'marketMakerExchangeRepresented': { 'index': 32, 'type': 'string', 
				                                    'meta-fields': [
					                                {'field': 'maxStringLength' , 'value' : '4'},
				                                    ],
				                                  },
				'tradeAgreementDate':             { 'index': 33, 'type': 'int', 
				                                    'meta-fields': [
					                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                    ],
				                                  },
			}, 
		}, 
		'VikingNothingDone': {
			'id': 78, 
			'version': 3, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':       { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'orderId':             { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'exchangeOrderId':     { 'index': 2, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '64'},
				                         ],
				                       },
				'quantityRemaining':   { 'index': 3, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'executedQuantity':    { 'index': 4, 'type': 'double', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'real'},
				                         ],
				                       },
				'applicationStripe':   { 'index': 5, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '18'},
				                         ],
				                       },
				'prevExchangeOrderId': { 'index': 6, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '32'},
				                         ],
				                       },
				'orderVersion':        { 'index': 7, 'type': 'uint', }, 
				'flowSpecificCanada':  { 'index': 8, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
			}, 
		}, 
		'VikingOrder': {
			'id': 34, 
			'version': 84, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada,flowSpecificAustralia'},
			],
			'columns': {
				'commandHeader':                                  { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'orderId':                                        { 'index': 1, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'orderType':                                      { 'index': 2, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'quantity':                                       { 'index': 3, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'buySell':                                        { 'index': 4, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'timeInForce':                                    { 'index': 5, 'type': 'ubyte', 'enum': 'OmTimeInForce', }, 
				'expirationDateTime':                             { 'index': 6, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'allOrNone':                                      { 'index': 7, 'type': 'bool', }, 
				'orderCapacity':                                  { 'index': 8, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':                                     { 'index': 9, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':                                  { 'index': 10, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'limitPrice':                                     { 'index': 11, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'stopPrice':                                      { 'index': 12, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'executionCurrency':                              { 'index': 13, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '3'},
				                                                    ],
				                                                  },
				'maxTrancheSize':                                 { 'index': 14, 'type': 'double', 'aliases': ['displaySize'], 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'traderExchangeId':                               { 'index': 15, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'applicationStripe':                              { 'index': 16, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '18'},
				                                                    ],
				                                                  },
				'productSynonyms':                                { 'index': 17, 'type': 'table', 'tablename': 'ProductSynonym', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'vikingMarketId':                                 { 'index': 18, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'vikingMarketIdType':                             { 'index': 19, 'type': 'ubyte', 'enum': 'OmVikingMarketIdType', }, 
				'ignoreAggressionCheck':                          { 'index': 20, 'type': 'bool', }, 
				'ignoreOddLotCheck':                              { 'index': 21, 'type': 'bool', }, 
				'accountSynonym':                                 { 'index': 22, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'orderVersion':                                   { 'index': 23, 'type': 'uint', }, 
				'sellShort':                                      { 'index': 24, 'type': 'bool', }, 
				'sellShortExempt':                                { 'index': 25, 'type': 'bool', }, 
				'priceStabilization':                             { 'index': 26, 'type': 'bool', }, 
				'whenIssued':                                     { 'index': 27, 'type': 'bool', }, 
				'marginType':                                     { 'index': 28, 'type': 'ubyte', 'enum': 'OmMarginType', }, 
				'vikingSubMarketId':                              { 'index': 29, 'type': 'string', }, 
				'lotSize':                                        { 'index': 30, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'pegType':                                        { 'index': 31, 'type': 'ubyte', 'enum': 'OmPegType', }, 
				'pegOffset':                                      { 'index': 32, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'pegOffsetType':                                  { 'index': 33, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'pegScope':                                       { 'index': 34, 'type': 'ubyte', 'enum': 'OmPegScopeType', }, 
				'discretionaryReferencePriceType':                { 'index': 35, 'type': 'ubyte', 'enum': 'OmDiscretionaryReferencePriceType', }, 
				'discretionaryOffset':                            { 'index': 36, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'discretionaryOffsetType':                        { 'index': 37, 'type': 'ubyte', 'enum': 'OmOffsetType', }, 
				'orderbookVisibility':                            { 'index': 38, 'type': 'ubyte', 'enum': 'OmOrderbookVisibilityType', }, 
				'clearingExchange':                               { 'index': 39, 'type': 'string', }, 
				'offsetDirectionType':                            { 'index': 40, 'type': 'ubyte', 'enum': 'OmOffsetDirectionType', }, 
				'tradingPhase':                                   { 'index': 41, 'type': 'ubyte', 'enum': 'OmTradingPhase', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'routingStrategy':                                { 'index': 42, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'doNotIncrease':                                  { 'index': 43, 'type': 'bool', }, 
				'doNotReduce':                                    { 'index': 44, 'type': 'bool', }, 
				'notHeld':                                        { 'index': 45, 'type': 'bool', }, 
				'interMarketSweep':                               { 'index': 46, 'type': 'bool', }, 
				'destinationMarketOnly':                          { 'index': 47, 'type': 'bool', }, 
				'cancelNewVersion':                               { 'index': 48, 'type': 'uint', }, 
				'destinationMembershipId':                        { 'index': 49, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'buyToCover':                                     { 'index': 50, 'type': 'bool', }, 
				'consolidatedRegulatoryCode':                     { 'index': 51, 'type': 'ubyte', 'enum': 'OmConsolidatedRegulatoryCode', }, 
				'isOddLot':                                       { 'index': 52, 'type': 'bool', }, 
				'marketProtection':                               { 'index': 53, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'marketProtectionType':                           { 'index': 54, 'type': 'ubyte', 'enum': 'OmMarketProtectionType', }, 
				'isStrategyOrder':                                { 'index': 55, 'type': 'bool', }, 
				'partOfProgram':                                  { 'index': 56, 'type': 'bool', }, 
				'arbitrageStrategy':                              { 'index': 57, 'type': 'ubyte', 'enum': 'OmArbitrageStrategy', }, 
				'algorithmicIndicator':                           { 'index': 58, 'type': 'ubyte', 'enum': 'OmAlgorithmicIndicator', }, 
				'trancheSizeDisplayRange':                        { 'index': 59, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'ignoreImbalanceCheck':                           { 'index': 60, 'type': 'bool', }, 
				'startDateTime':                                  { 'index': 61, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'minExecutableQuantity':                          { 'index': 62, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'vikingDestinationId':                            { 'index': 63, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'crossConsent':                                   { 'index': 64, 'type': 'ubyte', 'enum': 'OmCrossingOption', }, 
				'interventionConsent':                            { 'index': 65, 'type': 'ubyte', 'enum': 'OmInterventionOption', }, 
				'contractMaturityMonth':                          { 'index': 66, 'type': 'int', }, 
				'contractMaturityYear':                           { 'index': 67, 'type': 'int', }, 
				'isInterCommodityStrategy':                       { 'index': 68, 'type': 'bool', }, 
				'orderCreationType':                              { 'index': 69, 'type': 'ubyte', 'enum': 'OmOrderCreationType', }, 
				'crossRequestReason':                             { 'index': 70, 'type': 'ubyte', 'enum': 'OmCrossRequestReason', }, 
				'counterPartyId':                                 { 'index': 71, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '29'},
				                                                    ],
				                                                  },
				'crossMatchingId':                                { 'index': 72, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'isEnhancedLimitOrder':                           { 'index': 73, 'type': 'bool', }, 
				'isSpecialLimitOrder':                            { 'index': 74, 'type': 'bool', }, 
				'sellShortArbitrage':                             { 'index': 75, 'type': 'bool', }, 
				'sellShortCover':                                 { 'index': 76, 'type': 'bool', }, 
				'sellShortCross':                                 { 'index': 77, 'type': 'bool', }, 
				'minDiscretionaryQuantity':                       { 'index': 78, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'traderComment':                                  { 'index': 79, 'type': 'table', 'tablename': 'Comment', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'brokerBillingType':                              { 'index': 80, 'type': 'ubyte', 'enum': 'OmBrokerBillingType', }, 
				'isMarketMakingOrder':                            { 'index': 81, 'type': 'bool', }, 
				'businessUnit':                                   { 'index': 82, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'counterpartyTraderId':                           { 'index': 83, 'type': 'string', }, 
				'primaryAccountGsEntity':                         { 'index': 84, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '9'},
				                                                    ],
				                                                  },
				'productInstrumentType':                          { 'index': 85, 'type': 'ubyte', 'enum': 'OmProductInstrumentType', }, 
				'contractMaturityDay':                            { 'index': 86, 'type': 'int', }, 
				'putCall':                                        { 'index': 87, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'positionOpenClose':                              { 'index': 88, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'strikePrice':                                    { 'index': 89, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'facilitationPercent':                            { 'index': 90, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'isImbalanceOffsetOnly':                          { 'index': 91, 'type': 'bool', }, 
				'contractMultiplier':                             { 'index': 92, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'sourceBusinessUnit':                             { 'index': 93, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '16'},
				                                                    ],
				                                                  },
				'marketSession':                                  { 'index': 94, 'type': 'ubyte', 'enum': 'OmMarketSession', }, 
				'facilitationPrice':                              { 'index': 95, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'commission':                                     { 'index': 96, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'investorId':                                     { 'index': 97, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'exchangeAccount':                                { 'index': 98, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'isMinimumGuaranteedFillEligible':                { 'index': 99, 'type': 'bool', }, 
				'tsxRegulationCode':                              { 'index': 100, 'type': 'string', # FIELD IS OBSOLETE
				                                                    'meta-fields': [
					                                                {'field': 'obsolete' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '2'},
				                                                    ],
				                                                  },
				'clientMembershipId':                             { 'index': 101, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'allocationOrderId':                              { 'index': 102, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'clientsReference':                               { 'index': 103, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'customerName':                                   { 'index': 104, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'owner':                                          { 'index': 105, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'hideMembershipIdAtDestination':                  { 'index': 106, 'type': 'bool', }, 
				'flowSpecificCanada':                             { 'index': 107, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'whiteLabelDataId':                               { 'index': 108, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'vikingDestinationSubId':                         { 'index': 109, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'provideLiquidityOnly':                           { 'index': 110, 'type': 'bool', }, 
				'facilitationPositionOpenClose':                  { 'index': 111, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'orderOriginCode':                                { 'index': 112, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '1'},
				                                                    ],
				                                                  },
				'marketMakerId':                                  { 'index': 113, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'marketMakerOCCClearingAccount':                  { 'index': 114, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'marketMakerExchangeRepresented':                 { 'index': 115, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '4'},
				                                                    ],
				                                                  },
				'isSolicitedOrder':                               { 'index': 116, 'type': 'bool', }, 
				'targetQuoteId':                                  { 'index': 117, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'isTradingAutomationGenerated':                   { 'index': 118, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'senderLocation':                                 { 'index': 119, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'isLateTrade':                                    { 'index': 120, 'type': 'bool', }, 
				'destinationMembershipPassword':                  { 'index': 121, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'originatorIpAddress':                            { 'index': 122, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '30'},
				                                                    ],
				                                                  },
				'settlementDateCalcMethod':                       { 'index': 123, 'type': 'ubyte', 'enum': 'OmSettlementDateCalcMethod', }, 
				'settlementDate':                                 { 'index': 124, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'tradingAlgorithm':                               { 'index': 125, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'tradingAlgorithmParameters':                     { 'index': 126, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '1024'},
				                                                    ],
				                                                  },
				'contractForDifferences':                         { 'index': 127, 'type': 'bool', }, 
				'smartRouteConsent':                              { 'index': 128, 'type': 'ubyte', 'enum': 'OmSmartRoutingOption', }, 
				'isLateAuctionOrder':                             { 'index': 129, 'type': 'bool', }, 
				'isWorkupOrder':                                  { 'index': 130, 'type': 'bool', }, 
				'isCDSPassiveOrder':                              { 'index': 131, 'type': 'bool', }, 
				'workupSessionId':                                { 'index': 132, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '12'},
				                                                    ],
				                                                  },
				'smartRoutedIndicator':                           { 'index': 133, 'type': 'bool', }, 
				'isATSTrade':                                     { 'index': 134, 'type': 'bool', }, 
				'isGsiOrderMarkingTowerStyle':                    { 'index': 135, 'type': 'bool', }, 
				'facilitationStepUpPrice':                        { 'index': 136, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'ctiCode':                                        { 'index': 137, 'type': 'string', }, 
				'clearingFirm':                                   { 'index': 138, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'preferredMarketMakerId':                         { 'index': 139, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '5'},
				                                                    ],
				                                                  },
				'isDirectedOrderWithAuction':                     { 'index': 140, 'type': 'bool', }, 
				'settlementBoardOverride':                        { 'index': 141, 'type': 'ubyte', 'enum': 'OmSettlementBoardOverride', }, 
				'ignoreExchangePriceRangeCheck':                  { 'index': 142, 'type': 'bool', }, 
				'exchangeResendEligible':                         { 'index': 143, 'type': 'bool', }, 
				'koreaReportType':                                { 'index': 144, 'type': 'ubyte', 'enum': 'OmKoreaReportType', }, 
				'declarationType':                                { 'index': 145, 'type': 'ubyte', 'enum': 'OmDeclarationType', }, 
				'vikingNotionalCheckPriceCurrency':               { 'index': 146, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '3'},
				                                                    ],
				                                                  },
				'vikingNotionalCheckPrice':                       { 'index': 147, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'isDestinationIndicationOfInterestMatchingOrder': { 'index': 148, 'type': 'bool', }, 
				'nearLegPricePreference':                         { 'index': 149, 'type': 'ubyte', 'enum': 'OmNearLegPricePreference', }, 
				'externalTradingAlgorithmDetails':                { 'index': 150, 'type': 'table', 'tablename': 'ExternalTradingAlgorithmDetails', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isCorporateBuyBackOrder':                        { 'index': 151, 'type': 'bool', }, 
				'australiaTradeConditionCode':                    { 'index': 152, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '8'},
				                                                    ],
				                                                  },
				'iosAccountExchangeCrossReference':               { 'index': 153, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'basisOfQuotation':                               { 'index': 154, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '6'},
				                                                    ],
				                                                  },
				'tradeAgreementDate':                             { 'index': 155, 'type': 'int', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                    ],
				                                                  },
				'isAustraliaUndisclosedOrder':                    { 'index': 156, 'type': 'bool', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'destinationAllowedBrokers':                      { 'index': 157, 'type': 'table', 'tablename': 'BrokerInfo', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'collection'},
				                                                    ],
				                                                  },
				'clientStarId':                                   { 'index': 158, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '10'},
				                                                    ],
				                                                  },
				'originatorMacAddress':                           { 'index': 159, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '20'},
				                                                    ],
				                                                  },
				'executeSynthetically':                           { 'index': 160, 'type': 'bool', }, 
				'australiaUnintentionalCrossPreventionKey':       { 'index': 161, 'type': 'int', # FIELD HAS BEEN DEPRECATED
				                                                    'meta-fields': [
					                                                {'field': 'deprecated' , 'value' : 'true'},
				                                                    ],
				                                                  },
				'exchangeAlgorithmId':                            { 'index': 162, 'type': 'int', }, 
				'flowSpecificAustralia':                          { 'index': 163, 'type': 'table', 'tablename': 'FlowSpecificAustralia', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isKoreaPostMarginAccountOrder':                  { 'index': 164, 'type': 'bool', }, 
				'exchangeSubAccount':                             { 'index': 165, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '50'},
				                                                    ],
				                                                  },
				'selfMatchPreventionId':                          { 'index': 166, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '12'},
				                                                    ],
				                                                  },
				'flowSpecificSEF':                                { 'index': 167, 'type': 'table', 'tablename': 'FlowSpecificSEF', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'asiaFflFlowGroup':                               { 'index': 168, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '32'},
				                                                    ],
				                                                  },
				'hedgeStrategy':                                  { 'index': 169, 'type': 'ubyte', 'enum': 'OmHedgeStrategy', }, 
				'orderGroupData':                                 { 'index': 170, 'type': 'table', 'tablename': 'OrderGroupData', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                    ],
				                                                  },
				'isBlockOrder':                                   { 'index': 171, 'type': 'bool', }, 
				'isMinExecutableQuantityResidualNotExecutable':   { 'index': 172, 'type': 'bool', }, 
				'isMinExecutableQuantityMinExecutionSize':        { 'index': 173, 'type': 'bool', }, 
				'exchangeLimitPrice':                             { 'index': 174, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'exchangeStopPrice':                              { 'index': 175, 'type': 'double', 
				                                                    'meta-fields': [
					                                                {'field': 'dictionaryType' , 'value' : 'real'},
				                                                    ],
				                                                  },
				'exchangeLimitPriceCurrency':                     { 'index': 176, 'type': 'string', 
				                                                    'meta-fields': [
					                                                {'field': 'maxStringLength' , 'value' : '3'},
				                                                    ],
				                                                  },
			}, 
		}, 
		'VikingOrderAccept': {
			'id': 33, 
			'version': 11, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':                { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'orderId':                      { 'index': 1, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '29'},
				                                  ],
				                                },
				'exchangeOrderId':              { 'index': 2, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
				'quantityRemaining':            { 'index': 3, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'executedQuantity':             { 'index': 4, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'applicationStripe':            { 'index': 5, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '18'},
				                                  ],
				                                },
				'prevExchangeOrderId':          { 'index': 6, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '32'},
				                                  ],
				                                },
				'orderVersion':                 { 'index': 7, 'type': 'uint', }, 
				'lastVikingId':                 { 'index': 8, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
				'vikingLineId':                 { 'index': 9, 'type': 'string', 'aliases': ['vikingLHId'], 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '64'},
				                                  ],
				                                },
				'destinationMembershipId':      { 'index': 10, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '30'},
				                                  ],
				                                },
				'destinationComplianceOrderId': { 'index': 11, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '30'},
				                                  ],
				                                },
				'exchangeLoginId':              { 'index': 12, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '50'},
				                                  ],
				                                },
				'exchangeQuantity':             { 'index': 13, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'flowSpecificCanada':           { 'index': 14, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'struct'},
				                                  ],
				                                },
				'quantity':                     { 'index': 15, 'type': 'double', 
				                                  'meta-fields': [
					                              {'field': 'dictionaryType' , 'value' : 'real'},
				                                  ],
				                                },
				'exchangeOrderSecondaryId':     { 'index': 16, 'type': 'string', 
				                                  'meta-fields': [
					                              {'field': 'maxStringLength' , 'value' : '32'},
				                                  ],
				                                },
			}, 
		}, 
		'VikingOrderAck': {
			'id': 306, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'orderId':         { 'index': 0, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '29'},
				                     ],
				                   },
				'productIdMarket': { 'index': 1, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '4'},
				                     ],
				                   },
				'lineId':          { 'index': 2, 'type': 'string', }, 
				'commandHeader':   { 'index': 3, 'type': 'table', 'tablename': 'CommandHeader', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'struct'},
				                     ],
				                   },
			}, 
		}, 
		'VikingOrderDestinationUpdate': {
			'id': 309, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'orderId':                    { 'index': 0, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'exchangeOrderId':            { 'index': 1, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '64'},
				                                ],
				                              },
				'quantityRemaining':          { 'index': 2, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'executedQuantity':           { 'index': 3, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'limitPrice':                 { 'index': 4, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
				'orderType':                  { 'index': 5, 'type': 'ubyte', 'enum': 'OmOrderType', }, 
				'commandHeader':              { 'index': 6, 'type': 'table', 'tablename': 'CommandHeader', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
				'executedQuantityReinstated': { 'index': 7, 'type': 'double', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'real'},
				                                ],
				                              },
			}, 
		}, 
		'VikingOrderLeg': {
			'id': 164, 
			'version': 8, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificAustralia'},
			],
			'columns': {
				'orderId':                          { 'index': 0, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '29'},
				                                      ],
				                                    },
				'buySell':                          { 'index': 1, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'sellShort':                        { 'index': 2, 'type': 'bool', }, 
				'quantity':                         { 'index': 3, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'productInstrumentType':            { 'index': 4, 'type': 'ubyte', 'enum': 'OmProductInstrumentType', }, 
				'contractMaturityDay':              { 'index': 5, 'type': 'int', }, 
				'contractMaturityMonth':            { 'index': 6, 'type': 'int', }, 
				'contractMaturityYear':             { 'index': 7, 'type': 'int', }, 
				'productSynonyms':                  { 'index': 8, 'type': 'table', 'tablename': 'ProductSynonym', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'collection'},
				                                      ],
				                                    },
				'positionOpenClose':                { 'index': 9, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'putCall':                          { 'index': 10, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'strikePrice':                      { 'index': 11, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'crossMatchingId':                  { 'index': 12, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '30'},
				                                      ],
				                                    },
				'facilitationPercent':              { 'index': 13, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'orderCapacity':                    { 'index': 14, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'isMarketMakingOrder':              { 'index': 15, 'type': 'bool', }, 
				'crossRequestReason':               { 'index': 16, 'type': 'ubyte', 'enum': 'OmCrossRequestReason', }, 
				'facilitationPositionOpenClose':    { 'index': 17, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'sellShortExempt':                  { 'index': 18, 'type': 'bool', }, 
				'accountSynonym':                   { 'index': 19, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '50'},
				                                      ],
				                                    },
				'marginType':                       { 'index': 20, 'type': 'ubyte', 'enum': 'OmMarginType', }, 
				'iosAccountExchangeCrossReference': { 'index': 21, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                                      'meta-fields': [
					                                  {'field': 'deprecated' , 'value' : 'true'},
					                                  {'field': 'maxStringLength' , 'value' : '10'},
				                                      ],
				                                    },
				'lotSize':                          { 'index': 22, 'type': 'double', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'real'},
				                                      ],
				                                    },
				'flowSpecificAustralia':            { 'index': 23, 'type': 'table', 'tablename': 'FlowSpecificAustralia', 
				                                      'meta-fields': [
					                                  {'field': 'dictionaryType' , 'value' : 'struct'},
				                                      ],
				                                    },
				'destinationMembershipId':          { 'index': 24, 'type': 'string', 
				                                      'meta-fields': [
					                                  {'field': 'maxStringLength' , 'value' : '30'},
				                                      ],
				                                    },
			}, 
		}, 
		'VikingOrderQueueState': {
			'id': 326, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'upstreamOrderId':      { 'index': 0, 'type': 'string', }, 
				'vikingOrderState':     { 'index': 1, 'type': 'ubyte', 'enum': 'OmVikingOrderState', }, 
				'lineHandlerSessionId': { 'index': 2, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'notificationId':       { 'index': 3, 'type': 'int', }, 
			}, 
		}, 
		'VikingOrderReinstateCommand': {
			'id': 317, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':     { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'vikingRouteLookup': { 'index': 1, 'type': 'table', 'tablename': 'VikingRouteLookup', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
			}, 
		}, 
		'VikingOrderReject': {
			'id': 75, 
			'version': 6, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'orderId':                 { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'rejectingSystem':         { 'index': 2, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                             'meta-fields': [
					                         {'field': 'deprecated' , 'value' : 'true'},
				                             ],
				                           },
				'rejectReasons':           { 'index': 3, 'type': 'table', 'tablename': 'RejectReason', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'quantityRemaining':       { 'index': 4, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executedQuantity':        { 'index': 5, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'applicationStripe':       { 'index': 6, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '18'},
				                             ],
				                           },
				'prevExchangeOrderId':     { 'index': 7, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '32'},
				                             ],
				                           },
				'orderVersion':            { 'index': 8, 'type': 'uint', }, 
				'destinationMembershipId': { 'index': 9, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'lastVikingId':            { 'index': 10, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'flowSpecificCanada':      { 'index': 11, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingPersistTranData': {
			'id': 299, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'tranType':           { 'index': 0, 'type': 'int', }, 
				'vikingIdKey':        { 'index': 1, 'type': 'string', }, 
				'orderId':            { 'index': 2, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'orderVersion':       { 'index': 3, 'type': 'uint', }, 
				'exchangeOrderId':    { 'index': 4, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '64'},
				                        ],
				                      },
				'omSvrDatastream':    { 'index': 5, 'type': 'string', }, 
				'lhSvrDatastream':    { 'index': 6, 'type': 'string', }, 
				'isGtc':              { 'index': 7, 'type': 'bool', }, 
				'expirationDate':     { 'index': 8, 'type': 'int', }, 
				'messageDataId':      { 'index': 9, 'type': 'string', }, 
				'messageData':        { 'index': 10, 'type': 'binary', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'blob'},
				                        ],
				                      },
				'messageDataTableId': { 'index': 11, 'type': 'int', }, 
				'clientDatastream':   { 'index': 12, 'type': 'string', }, 
				'clientMessageId':    { 'index': 13, 'type': 'string', }, 
			}, 
		}, 
		'VikingQuote': {
			'id': 84, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'executionCurrency': { 'index': 0, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '3'},
				                       ],
				                     },
				'eventType':         { 'index': 1, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'orderId':           { 'index': 2, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '29'},
				                       ],
				                     },
				'groupId':           { 'index': 3, 'type': 'string', }, 
				'productId':         { 'index': 4, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '100'},
				                       ],
				                     },
				'productIdType':     { 'index': 5, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'updateTimestamp':   { 'index': 6, 'type': 'int', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'datetime'},
				                       ],
				                     },
				'bidPrice':          { 'index': 7, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'askPrice':          { 'index': 8, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'bidSize':           { 'index': 9, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'askSize':           { 'index': 10, 'type': 'double', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'real'},
				                       ],
				                     },
				'commandHeader':     { 'index': 11, 'type': 'table', 'tablename': 'CommandHeader', 
				                       'meta-fields': [
					                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                       ],
				                     },
				'vikingMarketId':    { 'index': 12, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '16'},
				                       ],
				                     },
				'orderCapacity':     { 'index': 13, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'principalType':     { 'index': 14, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'traderExchangeId':  { 'index': 15, 'type': 'string', 
				                       'meta-fields': [
					                   {'field': 'maxStringLength' , 'value' : '30'},
				                       ],
				                     },
				'quoteCancelReason': { 'index': 16, 'type': 'ubyte', 'enum': 'OmQuoteCancelReason', }, 
			}, 
		}, 
		'VikingQuoteAck': {
			'id': 87, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'orderId':         { 'index': 0, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '29'},
				                     ],
				                   },
				'groupId':         { 'index': 1, 'type': 'string', }, 
				'eventType':       { 'index': 2, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'rejectingSystem': { 'index': 3, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                     'meta-fields': [
					                 {'field': 'deprecated' , 'value' : 'true'},
				                     ],
				                   },
				'rejectReasons':   { 'index': 4, 'type': 'table', 'tablename': 'RejectReason', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                     ],
				                   },
				'updateTimestamp': { 'index': 5, 'type': 'int', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                     ],
				                   },
				'commandHeader':   { 'index': 6, 'type': 'table', 'tablename': 'CommandHeader', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'struct'},
				                     ],
				                   },
			}, 
		}, 
		'VikingRejectCancel': {
			'id': 81, 
			'version': 5, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'orderId':                 { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'rejectingSystem':         { 'index': 2, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                             'meta-fields': [
					                         {'field': 'deprecated' , 'value' : 'true'},
				                             ],
				                           },
				'rejectReasons':           { 'index': 3, 'type': 'table', 'tablename': 'RejectReason', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'quantityRemaining':       { 'index': 4, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executedQuantity':        { 'index': 5, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'applicationStripe':       { 'index': 6, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '18'},
				                             ],
				                           },
				'prevExchangeOrderId':     { 'index': 7, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '32'},
				                             ],
				                           },
				'orderVersion':            { 'index': 8, 'type': 'uint', }, 
				'destinationMembershipId': { 'index': 9, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'flowSpecificCanada':      { 'index': 10, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingRejectCorrection': {
			'id': 82, 
			'version': 5, 
			'publishable': 'true', 
			'meta-fields': [
			    {'field': 'rdbAsOwnTable' , 'value' : 'flowSpecificCanada'},
			],
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'orderId':                 { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'rejectingSystem':         { 'index': 2, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                             'meta-fields': [
					                         {'field': 'deprecated' , 'value' : 'true'},
				                             ],
				                           },
				'rejectReasons':           { 'index': 3, 'type': 'table', 'tablename': 'RejectReason', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'rejectReasonText':        { 'index': 4, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '256'},
				                             ],
				                           },
				'quantityRemaining':       { 'index': 5, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executedQuantity':        { 'index': 6, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'applicationStripe':       { 'index': 7, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '18'},
				                             ],
				                           },
				'prevExchangeOrderId':     { 'index': 8, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '32'},
				                             ],
				                           },
				'orderVersion':            { 'index': 9, 'type': 'uint', }, 
				'destinationMembershipId': { 'index': 10, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'flowSpecificCanada':      { 'index': 11, 'type': 'table', 'tablename': 'FlowSpecificCanada', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingReport': {
			'id': 88, 
			'version': 6, 
			'publishable': 'true', 
			'columns': {
				'quantity':               { 'index': 0, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'buySell':                { 'index': 1, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'creatorId':              { 'index': 2, 'type': 'string', # FIELD HAS BEEN DEPRECATED
				                            'meta-fields': [
					                        {'field': 'deprecated' , 'value' : 'true'},
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'executionCurrency':      { 'index': 3, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '3'},
				                            ],
				                          },
				'eventType':              { 'index': 4, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'limitPrice':             { 'index': 5, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'reportId':               { 'index': 6, 'type': 'string', }, 
				'orderId':                { 'index': 7, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'secondaryTradeId':       { 'index': 8, 'type': 'string', }, 
				'partyId':                { 'index': 9, 'type': 'string', }, 
				'partyIdSource':          { 'index': 10, 'type': 'string', }, 
				'counterPartyId':         { 'index': 11, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'counterPartyIdSource':   { 'index': 12, 'type': 'string', }, 
				'version':                { 'index': 13, 'type': 'int', }, 
				'productId':              { 'index': 14, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '100'},
				                            ],
				                          },
				'productIdType':          { 'index': 15, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'productTicker':          { 'index': 16, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'requestedTradeMarket':   { 'index': 17, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '4'},
				                            ],
				                          },
				'marketTradeDate':        { 'index': 18, 'type': 'int', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'date'},
				                            ],
				                          },
				'systemName':             { 'index': 19, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '32'},
				                            ],
				                          },
				'executionTimeGmtOffset': { 'index': 20, 'type': 'double', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'real'},
				                            ],
				                          },
				'updateTimestamp':        { 'index': 21, 'type': 'int', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'datetime'},
				                            ],
				                          },
				'reportedPriceDiff':      { 'index': 22, 'type': 'bool', }, 
				'reportedPriceReason':    { 'index': 23, 'type': 'string', }, 
				'publishTrade':           { 'index': 24, 'type': 'bool', }, 
				'basisOfTrade':           { 'index': 25, 'type': 'int', }, 
				'previouslyReported':     { 'index': 26, 'type': 'bool', }, 
				'priceQtyReviewed':       { 'index': 27, 'type': 'bool', }, 
				'clientTrade':            { 'index': 28, 'type': 'bool', }, 
				'isPosDup':               { 'index': 29, 'type': 'bool', }, 
				'publishNow':             { 'index': 30, 'type': 'bool', }, 
				'tradeId':                { 'index': 31, 'type': 'string', }, 
				'firmTradeId':            { 'index': 32, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'orderCapacity':          { 'index': 33, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'tradeType':              { 'index': 34, 'type': 'string', }, 
				'tradeSubType':           { 'index': 35, 'type': 'string', }, 
				'settlementDate':         { 'index': 36, 'type': 'int', 
				                            'meta-fields': [
					                        {'field': 'dictionaryType' , 'value' : 'datetime'},
				                            ],
				                          },
				'productIdCountry':       { 'index': 37, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '2'},
				                            ],
				                          },
				'executionSubVenue':      { 'index': 38, 'type': 'string', }, 
				'currency':               { 'index': 39, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '3'},
				                            ],
				                          },
			}, 
		}, 
		'VikingReportAck': {
			'id': 70, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'reportId':        { 'index': 0, 'type': 'string', }, 
				'version':         { 'index': 1, 'type': 'int', }, 
				'eventType':       { 'index': 2, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'rejectingSystem': { 'index': 3, 'type': 'ubyte', 'enum': 'OmRejectingSystem', # FIELD HAS BEEN DEPRECATED
				                     'meta-fields': [
					                 {'field': 'deprecated' , 'value' : 'true'},
				                     ],
				                   },
				'rejectReasons':   { 'index': 4, 'type': 'table', 'tablename': 'RejectReason', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'collection'},
				                     ],
				                   },
				'eventTime':       { 'index': 5, 'type': 'int', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                     ],
				                   },
				'systemName':      { 'index': 6, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '32'},
				                     ],
				                   },
				'receivedTime':    { 'index': 7, 'type': 'int', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                     ],
				                   },
				'reportTime':      { 'index': 8, 'type': 'int', 
				                     'meta-fields': [
					                 {'field': 'dictionaryType' , 'value' : 'datetime'},
				                     ],
				                   },
				'tradeId':         { 'index': 9, 'type': 'string', }, 
				'firmTradeId':     { 'index': 10, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '29'},
				                     ],
				                   },
			}, 
		}, 
		'VikingReverseRouteLookup': {
			'id': 170, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'lineHandlerSessionId': { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'vikingOrderId':        { 'index': 1, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'upstreamOrderId':      { 'index': 2, 'type': 'string', }, 
				'orderTransactionType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderTransactionType', }, 
				'cancelReason':         { 'index': 4, 'type': 'ubyte', 'enum': 'OmCancelReason', }, 
			}, 
		}, 
		'VikingRouteLookup': {
			'id': 169, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'upstreamComponent':    { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'upstreamOrderId':      { 'index': 1, 'type': 'string', }, 
				'orderVersion':         { 'index': 2, 'type': 'uint', }, 
				'exchangeOrderId':      { 'index': 3, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '64'},
				                          ],
				                        },
				'lastVikingOrderId':    { 'index': 4, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'lineHandlerSessionId': { 'index': 5, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'eventTrailData':       { 'index': 6, 'type': 'table', 'tablename': 'EventTrailData', 
				                          'meta-fields': [
					                      {'field': 'dictionaryType' , 'value' : 'struct'},
				                          ],
				                        },
				'sourceBusinessUnit':   { 'index': 7, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '16'},
				                          ],
				                        },
			}, 
		}, 
		'VikingRouteLookupBySequenceNumber': {
			'id': 177, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'lineHandlerSessionId': { 'index': 0, 'type': 'string', 
				                          'meta-fields': [
					                      {'field': 'maxStringLength' , 'value' : '29'},
				                          ],
				                        },
				'messageIdAsInteger':   { 'index': 1, 'type': 'int', }, 
				'upstreamOrderId':      { 'index': 2, 'type': 'string', }, 
				'orderTransactionType': { 'index': 3, 'type': 'ubyte', 'enum': 'OmOrderTransactionType', }, 
				'cancelReason':         { 'index': 4, 'type': 'ubyte', 'enum': 'OmCancelReason', }, 
			}, 
		}, 
		'VikingSecDbActTradeReportData': {
			'id': 611, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'tag':                                         { 'index': 0, 'type': 'string', 'aliases': ['externalObjectId'], 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '200'},
				                                                 ],
				                                               },
				'symbol':                                      { 'index': 1, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '128'},
				                                                 ],
				                                               },
				'quantity':                                    { 'index': 2, 'type': 'double', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                                 ],
				                                               },
				'price':                                       { 'index': 3, 'type': 'double', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                                 ],
				                                               },
				'secDbActReportingBuySellIndicator':           { 'index': 4, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'tradeDate':                                   { 'index': 5, 'type': 'string', }, 
				'secDbActReportingDeskId':                     { 'index': 6, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '30'},
				                                                 ],
				                                               },
				'version':                                     { 'index': 7, 'type': 'int', }, 
				'secDbActReportingPrincipalAgencyType':        { 'index': 8, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingFunction':                   { 'index': 9, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingAsOfIndicator':              { 'index': 10, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingSecurityClass':              { 'index': 11, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingPriceOverride':              { 'index': 12, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingReportIndicator':            { 'index': 13, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingClearingIndicator':          { 'index': 14, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingSettlementType':             { 'index': 15, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '30'},
				                                                 ],
				                                               },
				'secDbActReportingTradeModifier':              { 'index': 16, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'secDbActReportingOtherSideId':                { 'index': 17, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'secDbActReportingOtherSideClearingNbr':       { 'index': 18, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'secDbActReportingOtherSideGiveUp':            { 'index': 19, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'secDbActReportingTimeStamp':                  { 'index': 20, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '6'},
				                                                 ],
				                                               },
				'secDbActReportingRef':                        { 'index': 21, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '30'},
				                                                 ],
				                                               },
				'secDbActReportingCtrl':                       { 'index': 22, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '10'},
				                                                 ],
				                                               },
				'secDbActReportingReportStatus':               { 'index': 23, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingCtrlDate':                   { 'index': 24, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '8'},
				                                                 ],
				                                               },
				'secDbActReportingBusinessDaysSinceTradeDate': { 'index': 25, 'type': 'int', }, 
				'secDbActReportingOriginalEmsMessageText':     { 'index': 26, 'type': 'string', }, 
			}, 
		}, 
		'VikingSecDbActTradeReportResponseData': {
			'id': 612, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'tag':                                         { 'index': 0, 'type': 'string', 'aliases': ['externalObjectId'], 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '200'},
				                                                 ],
				                                               },
				'symbol':                                      { 'index': 1, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '128'},
				                                                 ],
				                                               },
				'quantity':                                    { 'index': 2, 'type': 'double', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                                 ],
				                                               },
				'price':                                       { 'index': 3, 'type': 'double', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                                 ],
				                                               },
				'secDbActReportingBuySellIndicator':           { 'index': 4, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'tradeDate':                                   { 'index': 5, 'type': 'string', }, 
				'version':                                     { 'index': 6, 'type': 'int', }, 
				'secDbActReportingPrincipalAgencyType':        { 'index': 7, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingFunction':                   { 'index': 8, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingAsOfIndicator':              { 'index': 9, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingSecurityClass':              { 'index': 10, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingPriceOverride':              { 'index': 11, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingReportIndicator':            { 'index': 12, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingClearingIndicator':          { 'index': 13, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingSettlementType':             { 'index': 14, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '30'},
				                                                 ],
				                                               },
				'secDbActReportingTradeModifier':              { 'index': 15, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'secDbActReportingOtherSideId':                { 'index': 16, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'secDbActReportingOtherSideClearingNbr':       { 'index': 17, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'secDbActReportingOtherSideGiveUp':            { 'index': 18, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'secDbActReportingTimeStamp':                  { 'index': 19, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '6'},
				                                                 ],
				                                               },
				'secDbActReportingTradeStatus':                { 'index': 20, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingRef':                        { 'index': 21, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '30'},
				                                                 ],
				                                               },
				'secDbActReportingText':                       { 'index': 22, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '256'},
				                                                 ],
				                                               },
				'secDbActReportingCtrl':                       { 'index': 23, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '10'},
				                                                 ],
				                                               },
				'secDbActReportingReportStatus':               { 'index': 24, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'secDbActReportingCtrlDate':                   { 'index': 25, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '8'},
				                                                 ],
				                                               },
				'secDbActReportingBusinessDaysSinceTradeDate': { 'index': 26, 'type': 'int', }, 
				'customerPartyType':                           { 'index': 27, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'commentText':                                 { 'index': 28, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '50'},
				                                                 ],
				                                               },
				'giveUpContraParty':                           { 'index': 29, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'secDbActReportingDeskId':                     { 'index': 30, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '30'},
				                                                 ],
				                                               },
			}, 
		}, 
		'VikingSessionMessageId': {
			'id': 171, 
			'version': 5, 
			'publishable': 'true', 
			'columns': {
				'sessionId':          { 'index': 0, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'messageStreamId':    { 'index': 1, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '20'},
				                        ],
				                      },
				'messageIdAsInteger': { 'index': 2, 'type': 'int', }, 
				'messageIdAsString':  { 'index': 3, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '64'},
				                        ],
				                      },
				'plugInId':           { 'index': 4, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '29'},
				                        ],
				                      },
				'destinationId':      { 'index': 5, 'type': 'string', 
				                        'meta-fields': [
					                    {'field': 'maxStringLength' , 'value' : '20'},
				                        ],
				                      },
				'messageIdType':      { 'index': 6, 'type': 'ubyte', 'enum': 'OmMessageIdType', }, 
				'messageIdAsBinary':  { 'index': 7, 'type': 'binary', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'blob'},
				                        ],
				                      },
				'messageIdAsUInt64':  { 'index': 8, 'type': 'uint64', 
				                        'meta-fields': [
					                    {'field': 'dictionaryType' , 'value' : 'uint64'},
				                        ],
				                      },
			}, 
		}, 
		'VikingSessionState': {
			'id': 174, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'sessionId':              { 'index': 0, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'vikingSessionHeldState': { 'index': 1, 'type': 'ubyte', 'enum': 'OmVikingSessionHeldState', }, 
				'exchangeSessionId':      { 'index': 2, 'type': 'string', 
				                            'meta-fields': [
					                        {'field': 'maxStringLength' , 'value' : '29'},
				                            ],
				                          },
				'vikingSessionDisabled':  { 'index': 3, 'type': 'bool', }, 
			}, 
		}, 
		'VikingSessionStateCommand': {
			'id': 311, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':                     { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                                       'meta-fields': [
					                                   {'field': 'dictionaryType' , 'value' : 'struct'},
				                                       ],
				                                     },
				'sessionId':                         { 'index': 1, 'type': 'string', 
				                                       'meta-fields': [
					                                   {'field': 'maxStringLength' , 'value' : '29'},
				                                       ],
				                                     },
				'vikingSessionConnectionState':      { 'index': 2, 'type': 'ubyte', 'enum': 'OmVikingSessionConnectionState', }, 
				'vikingSessionHeldState':            { 'index': 3, 'type': 'ubyte', 'enum': 'OmVikingSessionHeldState', }, 
				'marketClassificationSessionStates': { 'index': 4, 'type': 'table', 'tablename': 'MarketClassificationSessionState', # FIELD HAS BEEN DEPRECATED
				                                       'meta-fields': [
					                                   {'field': 'deprecated' , 'value' : 'true'},
					                                   {'field': 'dictionaryType' , 'value' : 'collection'},
				                                       ],
				                                     },
			}, 
		}, 
		'VikingSuspendQuoting': {
			'id': 85, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'orderId':        { 'index': 0, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '29'},
				                    ],
				                  },
				'productId':      { 'index': 1, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '100'},
				                    ],
				                  },
				'currency':       { 'index': 2, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '3'},
				                    ],
				                  },
				'commentText':    { 'index': 3, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '50'},
				                    ],
				                  },
				'eventType':      { 'index': 4, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'commandHeader':  { 'index': 5, 'type': 'table', 'tablename': 'CommandHeader', 
				                    'meta-fields': [
					                {'field': 'dictionaryType' , 'value' : 'struct'},
				                    ],
				                  },
				'vikingMarketId': { 'index': 6, 'type': 'string', 
				                    'meta-fields': [
					                {'field': 'maxStringLength' , 'value' : '16'},
				                    ],
				                  },
			}, 
		}, 
		'VikingTrade': {
			'id': 94, 
			'version': 4, 
			'publishable': 'true', 
			'columns': {
				'messageId':               { 'index': 0, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'sentTime':                { 'index': 1, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'receivedTime':            { 'index': 2, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'eventType':               { 'index': 3, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'traderExchangeId':        { 'index': 4, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'userName':                { 'index': 5, 'type': 'string', }, 
				'productSynonyms':         { 'index': 6, 'type': 'table', 'tablename': 'ProductSynonym', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'strikePrice':             { 'index': 7, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'expiry':                  { 'index': 8, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'date'},
				                             ],
				                           },
				'exchangeExecutionId':     { 'index': 9, 'type': 'string', }, 
				'executionTime':           { 'index': 10, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'updateTimestamp':         { 'index': 11, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'executionType':           { 'index': 12, 'type': 'ubyte', 'enum': 'OmExecutionType', }, 
				'marketTradeDate':         { 'index': 13, 'type': 'int', # FIELD IS OBSOLETE
				                             'meta-fields': [
					                         {'field': 'obsolete' , 'value' : 'true'},
					                         {'field': 'dictionaryType' , 'value' : 'date'},
				                             ],
				                           },
				'clearingDate':            { 'index': 14, 'type': 'int', # FIELD IS OBSOLETE
				                             'meta-fields': [
					                         {'field': 'obsolete' , 'value' : 'true'},
					                         {'field': 'dictionaryType' , 'value' : 'datetime'},
				                             ],
				                           },
				'positionOpenClose':       { 'index': 15, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'putCall':                 { 'index': 16, 'type': 'ubyte', 'enum': 'OmPutCall', }, 
				'buySell':                 { 'index': 17, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'executedQuantity':        { 'index': 18, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'giveUp':                  { 'index': 19, 'type': 'ubyte', 'enum': 'OmGiveUp', }, 
				'apsIndicator':            { 'index': 20, 'type': 'bool', }, 
				'executionPrice':          { 'index': 21, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'averagePrice':            { 'index': 22, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'currency':                { 'index': 23, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '3'},
				                             ],
				                           },
				'commission':              { 'index': 24, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'sourceAccountType':       { 'index': 25, 'type': 'string', }, 
				'sourceAccountId':         { 'index': 26, 'type': 'string', }, 
				'targetAccountType':       { 'index': 27, 'type': 'string', }, 
				'targetAccountId':         { 'index': 28, 'type': 'string', }, 
				'orderId':                 { 'index': 29, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'exchangeOrderId':         { 'index': 30, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'quantity':                { 'index': 31, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'quantityRemaining':       { 'index': 32, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'errorCode':               { 'index': 33, 'type': 'string', }, 
				'commentText':             { 'index': 34, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '50'},
				                             ],
				                           },
				'floorMemberId':           { 'index': 35, 'type': 'string', }, 
				'exchangeMemberId':        { 'index': 36, 'type': 'string', }, 
				'executingMemberId':       { 'index': 37, 'type': 'string', }, 
				'clearingMemberId':        { 'index': 38, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '16'},
				                             ],
				                           },
				'oppositeMemberId':        { 'index': 39, 'type': 'string', }, 
				'carryClearingMemberId':   { 'index': 40, 'type': 'string', }, 
				'contractType':            { 'index': 41, 'type': 'string', }, 
				'contractSubType':         { 'index': 42, 'type': 'string', }, 
				'contractFamily':          { 'index': 43, 'type': 'string', }, 
				'exchangeCode':            { 'index': 44, 'type': 'string', }, 
				'active':                  { 'index': 45, 'type': 'bool', }, 
				'groupId':                 { 'index': 46, 'type': 'string', }, 
				'tradeType':               { 'index': 47, 'type': 'string', }, 
				'tradeSubType':            { 'index': 48, 'type': 'string', }, 
				'executionSubId':          { 'index': 49, 'type': 'string', }, 
				'originalExecutionId':     { 'index': 50, 'type': 'string', }, 
				'ctiCode':                 { 'index': 51, 'type': 'string', }, 
				'spread':                  { 'index': 52, 'type': 'bool', }, 
				'flexTrade':               { 'index': 53, 'type': 'bool', }, 
				'tradingVenue':            { 'index': 54, 'type': 'string', }, 
				'historical':              { 'index': 55, 'type': 'bool', }, 
				'priceQuote':              { 'index': 56, 'type': 'string', }, 
				'roundedPrice':            { 'index': 57, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'residualAmount':          { 'index': 58, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'feeCode':                 { 'index': 59, 'type': 'string', }, 
				'originCode':              { 'index': 60, 'type': 'string', }, 
				'giveOutQuantity':         { 'index': 61, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'reference':               { 'index': 62, 'type': 'string', }, 
				'tradeId':                 { 'index': 63, 'type': 'string', }, 
				'tradeSubId':              { 'index': 64, 'type': 'string', }, 
				'clearingExecutionType':   { 'index': 65, 'type': 'string', }, 
				'acknowledgementType':     { 'index': 66, 'type': 'ubyte', 'enum': 'OmClearingAcknowledgement', }, 
				'executionTypeDesc':       { 'index': 67, 'type': 'string', }, 
				'tradeInstructionDetails': { 'index': 68, 'type': 'table', 'tablename': 'VikingTradeInstructionDetail', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'tradeDate':               { 'index': 69, 'type': 'string', }, 
				'clearingDateStr':         { 'index': 70, 'type': 'string', }, 
				'contractVersion':         { 'index': 71, 'type': 'string', }, 
				'parentSubId':             { 'index': 72, 'type': 'string', }, 
			}, 
		}, 
		'VikingTradeAmendAccept': {
			'id': 411, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':       { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'orderId':             { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'exchangeOrderId':     { 'index': 2, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '64'},
				                         ],
				                       },
				'executionId':         { 'index': 3, 'type': 'string', 'aliases': ['execId'], 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'exchangeExecutionId': { 'index': 4, 'type': 'string', }, 
				'replyCode':           { 'index': 5, 'type': 'int', }, 
				'replyText':           { 'index': 6, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '256'},
				                         ],
				                       },
			}, 
		}, 
		'VikingTradeAmendReject': {
			'id': 412, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':       { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'orderId':             { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'exchangeOrderId':     { 'index': 2, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '64'},
				                         ],
				                       },
				'executionId':         { 'index': 3, 'type': 'string', 'aliases': ['execId'], 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'exchangeExecutionId': { 'index': 4, 'type': 'string', }, 
				'replyCode':           { 'index': 5, 'type': 'int', }, 
				'replyText':           { 'index': 6, 'type': 'string', # FIELD IS OBSOLETE
				                         'meta-fields': [
					                     {'field': 'obsolete' , 'value' : 'true'},
					                     {'field': 'maxStringLength' , 'value' : '256'},
				                         ],
				                       },
				'rejectReasons':       { 'index': 7, 'type': 'table', 'tablename': 'RejectReason', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                         ],
				                       },
			}, 
		}, 
		'VikingTradeAmendRequest': {
			'id': 410, 
			'version': 2, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':           { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'orderId':                 { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'exchangeOrderId':         { 'index': 2, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '64'},
				                             ],
				                           },
				'executionId':             { 'index': 3, 'type': 'string', 'aliases': ['execId'], 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '29'},
				                             ],
				                           },
				'exchangeExecutionId':     { 'index': 4, 'type': 'string', }, 
				'productSynonyms':         { 'index': 5, 'type': 'table', 'tablename': 'ProductSynonym', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'collection'},
				                             ],
				                           },
				'executionPrice':          { 'index': 6, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executedQuantity':        { 'index': 7, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'exchangeMemberId':        { 'index': 8, 'type': 'string', }, 
				'buySell':                 { 'index': 9, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'contractMultiplier':      { 'index': 10, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'executionSubVenue':       { 'index': 11, 'type': 'string', }, 
				'destinationMembershipId': { 'index': 12, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'traderExchangeId':        { 'index': 13, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '30'},
				                             ],
				                           },
				'orderCapacity':           { 'index': 14, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'agencyType':              { 'index': 15, 'type': 'ubyte', 'enum': 'OmAgencyType', }, 
				'principalType':           { 'index': 16, 'type': 'ubyte', 'enum': 'OmPrincipalType', }, 
				'previousTradeData':       { 'index': 17, 'type': 'table', 'tablename': 'PreviousTradeData', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'vikingMarketId':          { 'index': 18, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '16'},
				                             ],
				                           },
				'vikingSubMarketId':       { 'index': 19, 'type': 'string', }, 
				'vikingDestinationId':     { 'index': 20, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '20'},
				                             ],
				                           },
			}, 
		}, 
		'VikingTradeCancelAccept': {
			'id': 426, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'executionId':   { 'index': 2, 'type': 'string', 'aliases': ['execId'], 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
			}, 
		}, 
		'VikingTradeCancelReject': {
			'id': 427, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'commandHeader': { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'struct'},
				                   ],
				                 },
				'orderId':       { 'index': 1, 'type': 'string', 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'executionId':   { 'index': 2, 'type': 'string', 'aliases': ['execId'], 
				                   'meta-fields': [
					               {'field': 'maxStringLength' , 'value' : '29'},
				                   ],
				                 },
				'rejectReasons': { 'index': 3, 'type': 'table', 'tablename': 'RejectReason', 
				                   'meta-fields': [
					               {'field': 'dictionaryType' , 'value' : 'collection'},
				                   ],
				                 },
			}, 
		}, 
		'VikingTradeCancelRequest': {
			'id': 425, 
			'version': 0, 
			'publishable': 'true', 
			'columns': {
				'commandHeader':       { 'index': 0, 'type': 'table', 'tablename': 'CommandHeader', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'struct'},
				                         ],
				                       },
				'orderId':             { 'index': 1, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'executionId':         { 'index': 2, 'type': 'string', 'aliases': ['execId'], 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '29'},
				                         ],
				                       },
				'exchangeExecutionId': { 'index': 3, 'type': 'string', }, 
				'productSynonyms':     { 'index': 4, 'type': 'table', 'tablename': 'ProductSynonym', 
				                         'meta-fields': [
					                     {'field': 'dictionaryType' , 'value' : 'collection'},
				                         ],
				                       },
				'buySell':             { 'index': 5, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'vikingMarketId':      { 'index': 6, 'type': 'string', 
				                         'meta-fields': [
					                     {'field': 'maxStringLength' , 'value' : '16'},
				                         ],
				                       },
				'vikingSubMarketId':   { 'index': 7, 'type': 'string', }, 
			}, 
		}, 
		'VikingTradeInstructionDetail': {
			'id': 300, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'quantity':                { 'index': 0, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'accountId':               { 'index': 1, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '50'},
				                             ],
				                           },
				'accountTypeStr':          { 'index': 2, 'type': 'string', }, 
				'originCode':              { 'index': 3, 'type': 'string', }, 
				'ctiCode':                 { 'index': 4, 'type': 'string', }, 
				'positionOpenClose':       { 'index': 5, 'type': 'ubyte', 'enum': 'OmPositionEffect', }, 
				'oppositeMemberId':        { 'index': 6, 'type': 'string', }, 
				'carryClearingMemberId':   { 'index': 7, 'type': 'string', }, 
				'instructionSubId':        { 'index': 8, 'type': 'string', }, 
				'clearingAllocationId':    { 'index': 9, 'type': 'string', }, 
				'tradeId':                 { 'index': 10, 'type': 'string', }, 
				'tradeSubId':              { 'index': 11, 'type': 'string', }, 
				'eventType':               { 'index': 12, 'type': 'ubyte', 'enum': 'OmEventType', }, 
				'commentText':             { 'index': 13, 'type': 'string', 
				                             'meta-fields': [
					                         {'field': 'maxStringLength' , 'value' : '50'},
				                             ],
				                           },
				'buySell':                 { 'index': 14, 'type': 'ubyte', 'enum': 'OmBuySell', }, 
				'executionPrice':          { 'index': 15, 'type': 'double', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'real'},
				                             ],
				                           },
				'expiry':                  { 'index': 16, 'type': 'int', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'date'},
				                             ],
				                           },
				'clearingInstructionList': { 'index': 17, 'type': 'table', 'tablename': 'ClearingInstructionTypeList', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
				'tradeUpdateList':         { 'index': 18, 'type': 'table', 'tablename': 'TradeUpdateTypeList', 
				                             'meta-fields': [
					                         {'field': 'dictionaryType' , 'value' : 'struct'},
				                             ],
				                           },
			}, 
		}, 
		'VikingTradeReportData': {
			'id': 607, 
			'version': 5, 
			'publishable': 'true', 
			'columns': {
				'executionId':                                 { 'index': 0, 'type': 'string', 'aliases': ['execId'], 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '29'},
				                                                 ],
				                                               },
				'version':                                     { 'index': 1, 'type': 'int', }, 
				'transactionTime':                             { 'index': 2, 'type': 'int', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                 ],
				                                               },
				'transactionTimeMicrosecond':                  { 'index': 3, 'type': 'uint', }, 
				'originalFixMessageText':                      { 'index': 4, 'type': 'string', }, 
				'productId':                                   { 'index': 5, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '100'},
				                                                 ],
				                                               },
				'productIdType':                               { 'index': 6, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'internalProductId':                           { 'index': 7, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '29'},
				                                                 ],
				                                               },
				'internalProductIdType':                       { 'index': 8, 'type': 'ubyte', 'enum': 'OmProductIdType', }, 
				'oatsBranchSequenceNumber':                    { 'index': 9, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '20'},
				                                                 ],
				                                               },
				'fixSide':                                     { 'index': 10, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixShortSaleReason':                          { 'index': 11, 'type': 'int', }, 
				'fixSymbol':                                   { 'index': 12, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '64'},
				                                                 ],
				                                               },
				'fixSymbolSfx':                                { 'index': 13, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '8'},
				                                                 ],
				                                               },
				'fixTradeCondition':                           { 'index': 14, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '128'},
				                                                 ],
				                                               },
				'fixPublishTrdIndicator':                      { 'index': 15, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixAsOfIndicator':                            { 'index': 16, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixOverrideFlag':                             { 'index': 17, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixReversalIndicator':                        { 'index': 18, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixTradeReportType':                          { 'index': 19, 'type': 'int', }, 
				'fixRelatedMarketCenter':                      { 'index': 20, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '1'},
				                                                 ],
				                                               },
				'fixTrdSubType':                               { 'index': 21, 'type': 'int', }, 
				'falconTradeReportData':                       { 'index': 22, 'type': 'table', 'tablename': 'FalconTradeReportData', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'struct'},
				                                                 ],
				                                               },
				'quantity':                                    { 'index': 23, 'type': 'double', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                                 ],
				                                               },
				'executionPrice':                              { 'index': 24, 'type': 'double', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'real'},
				                                                 ],
				                                               },
				'regulatoryReportDomain':                      { 'index': 25, 'type': 'ubyte', 'enum': 'OmRegulatoryReportDomain', }, 
				'fixNonReportingGuid':                         { 'index': 26, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'tradeReportingVenue':                         { 'index': 27, 'type': 'ubyte', 'enum': 'OmVikingTradeReportingVenue', }, 
				'tradeReportingExecutionEntryTime':            { 'index': 28, 'type': 'int', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                 ],
				                                               },
				'tradeReportingExecutionEntryTimeMicrosecond': { 'index': 29, 'type': 'int', }, 
				'clientOrderCapacity':                         { 'index': 30, 'type': 'ubyte', 'enum': 'OmOrderCapacity', }, 
				'executionTime':                               { 'index': 31, 'type': 'int', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                 ],
				                                               },
				'executionTimeMicrosecond':                    { 'index': 32, 'type': 'int', }, 
				'executionCapacity':                           { 'index': 33, 'type': 'ubyte', 'enum': 'OmExecutionCapacity', }, 
				'executionPoint':                              { 'index': 34, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '16'},
				                                                 ],
				                                               },
				'clearingInstruction':                         { 'index': 35, 'type': 'ubyte', 'enum': 'OmClearingInstructionType', }, 
				'customerPartyType':                           { 'index': 36, 'type': 'ubyte', 'enum': 'OmCustomerPartyType', }, 
				'commentText':                                 { 'index': 37, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '50'},
				                                                 ],
				                                               },
				'giveUpContraParty':                           { 'index': 38, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '4'},
				                                                 ],
				                                               },
				'secDbActReportingDeskId':                     { 'index': 39, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '30'},
				                                                 ],
				                                               },
				'secDbActReportingDealId':                     { 'index': 40, 'type': 'string', 
				                                                 'meta-fields': [
					                                             {'field': 'maxStringLength' , 'value' : '200'},
				                                                 ],
				                                               },
				'secDbActReportingOriginalEmsMessageText':     { 'index': 41, 'type': 'string', }, 
				'orderAcceptTime':                             { 'index': 42, 'type': 'int', 
				                                                 'meta-fields': [
					                                             {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                                 ],
				                                               },
				'orderAcceptTimeMicrosecond':                  { 'index': 43, 'type': 'int', }, 
			}, 
		}, 
		'VikingTradeReportResponseData': {
			'id': 608, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'executionId':                { 'index': 0, 'type': 'string', 'aliases': ['execId'], 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '29'},
				                                ],
				                              },
				'version':                    { 'index': 1, 'type': 'int', }, 
				'transactionTime':            { 'index': 2, 'type': 'int', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'datetime'},
				                                ],
				                              },
				'transactionTimeMicrosecond': { 'index': 3, 'type': 'uint', }, 
				'originalFixMessageText':     { 'index': 4, 'type': 'string', }, 
				'tradeReportResponse':        { 'index': 5, 'type': 'table', 'tablename': 'TradeReportResponse', 
				                                'meta-fields': [
					                            {'field': 'dictionaryType' , 'value' : 'struct'},
				                                ],
				                              },
				'secDbActReportingDealId':    { 'index': 6, 'type': 'string', 
				                                'meta-fields': [
					                            {'field': 'maxStringLength' , 'value' : '200'},
				                                ],
				                              },
			}, 
		}, 
		'VisibilityGroup': {
			'id': 375, 
			'version': 3, 
			'publishable': 'true', 
			'columns': {
				'visibilityGroup': { 'index': 0, 'type': 'string', 
				                     'meta-fields': [
					                 {'field': 'maxStringLength' , 'value' : '31'},
				                     ],
				                   },
			}, 
		}, 
		'VisibilityUserId': {
			'id': 535, 
			'version': 1, 
			'publishable': 'true', 
			'columns': {
				'visibilityUserId': { 'index': 0, 'type': 'string', 
				                      'meta-fields': [
					                  {'field': 'maxStringLength' , 'value' : '15'},
				                      ],
				                    },
			}, 
		}, 
	},

	'rcsids' : [
		'$Header: /home/cvs/eqtech/cep/src/kevlar/sampleApplication/config/sampleDictionary.xml,v 1.3 2010/12/15 23:03:07 gerket Exp $',
		'$Header: /home/cvs/eqtech/cep/src/ivshmdb/config/ivShmDbMetaDictionary.xml,v 1.1 2010/04/08 07:29:02 hironk Exp $',
		'$Header: /home/cvs/eqtech/cep/src/om2/config/omDictionary.xml,v 1.1207 2015/09/10 22:57:18 yongs Exp $',
		'$Header: /home/cvs/eqtech/cep/src/rds-distribution/client/config/rdsDictionary.xml,v 1.212 2015/08/31 23:38:03 yongs Exp $',
	]
}

om2CompleteCatalogEnums = {
	'enums': {
		'OmAccessIdType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'FixAcronym': 1, 
				'RediId': 2, 
				'Kerberos': 3, 
			}, 
		}, 
		'OmAccountRole': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Primary': 1, 
				'Versus': 2, 
				'DefaultExpense': 3, 
				'Hedge': 4, 
				'BookingExplosion': 5, 
			}, 
		}, 
		'OmAccountSubType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Wash': 1, 
				'Trading': 2, 
			}, 
		}, 
		'OmAccountSynonymType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'GmiAccountSynonym': 1, 
				'AmAccountNumberWithCheck': 2, 
				'AmAccountNumber': 3, 
				'AmAccountSynonym': 4, 
				'GsecAccountSynonym': 5, 
				'IOSAccount': 6, 
			}, 
		}, 
		'OmAccountType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Broker': 1, 
				'Trading': 2, 
				'Control': 3, 
				'Customer': 4, 
				'Wash': 5, 
				'Employee': 6, # VALUE IS OBSOLETE
			}, 
		}, 
		'OmActiveInstance': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Primary': 1, 
				'Secondary': 2, 
				'None': 3, 
			}, 
		}, 
		'OmAdministrativeCancelRequestReason': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'UserAction': 1, # VALUE IS OBSOLETE
				'DestinationDisconnected': 2, # VALUE IS OBSOLETE
			}, 
		}, 
		'OmAgencyType': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'AgencyOnly': 1, 
				'AgencyIfPossible': 2, 
				'AgencyOrEquivalent': 3, 
				'AgentForMember': 4, 
				'Bank': 5, 
				'DomesticFinancialInstitution': 6, 
				'ForeignInvestorInstitution': 7, 
				'ImmigrationAndNaturalizationServices': 8, 
				'MutualFund': 9, 
				'NonResidentCitizen': 10, 
				'HighNetWorthIndividual': 11, 
				'CorporateBodies': 12, 
			}, 
		}, 
		'OmAlgorithmicIndicator': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'Algorithmic': 1, 
				'NonAlgorithmic': 2, 
			}, 
		}, 
		'OmApi': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Aps': 1, 
				'None': 2, 
			}, 
		}, 
		'OmApolloAdaptorState': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Down': 1, 
				'onHold': 2, 
			}, 
		}, 
		'OmApprovalStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PendingApproval': 1, 
				'Approved': 2, 
				'Rejected': 3, 
			}, 
		}, 
		'OmApprovalType': {
			'version': 8, 
			'values': {
				'INVALID': 0, 
				'ApprovalCredit': 1, 
				'ApprovalLiquidity': 2, 
				'ApprovalToxicList': 3, 
				'ApprovalHardToBorrow': 4, 
				'ApprovalSPGLeveredETF': 5, 
				'ApprovalSPGDividends': 6, 
				'ApprovalSPGBeneficialOwnership': 7, 
				'ApprovalSPGCountryOfIncorporation': 8, 
				'ApprovalSPGIPO': 9, 
				'ApprovalSPGPriceMinimum': 10, 
				'ApprovalPosition': 11, 
				'ApprovalCompliance': 12, 
				'ApprovalSPGClientMinRepresentation': 13, 
				'ApprovalSPGNonGCFundingSpread': 14, 
				'ApprovalSPGFundingSpreadOverride': 15, 
				'ApprovalFalconFatFinger': 16, 
				'ApprovalShortSellLocate': 17, 
				'ApprovalRTLThreshold': 18, 
				'ApprovalCanadianForeignOwnershipRestriction': 19, 
				'ApprovalBrazilIPOFirmHolding': 20, # VALUE IS OBSOLETE
				'ApprovalREITSFirmHoldingsPhysical': 21, # VALUE IS OBSOLETE
				'ApprovalREITSGSIGrossLongPositionSwap': 22, # VALUE IS OBSOLETE
				'ApprovalREITSNonUSCounterpartyOwnershipSwap': 23, # VALUE IS OBSOLETE
				'ApprovalMLPGSIGrossLongPositionSwap': 24, # VALUE IS OBSOLETE
				'ApprovalMLPFirmHoldingsPhysical': 25, # VALUE IS OBSOLETE
				'ApprovalMLPNonUSCounterpartyOwnershipSwap': 26, # VALUE IS OBSOLETE
				'ApprovalExtraordinaryDividend': 27, 
				'ApprovalPreferredStock': 28, 
				'ApprovalRestrictedTradingList': 29, 
				'ApprovalIntradayPositionIncrease': 30, 
				'ApprovalBrazilFirmPositionLimit': 31, # VALUE IS OBSOLETE
				'ApprovalPriceCollar': 32, 
				'ApprovalBeneficialOwnershipThresholdOne': 33, 
				'ApprovalBeneficialOwnershipThresholdTwo': 34, 
				'ApprovalBeneficialOwnershipThresholdThree': 35, 
				'ApprovalCounterpartyOwnership': 36, 
				'ApprovalFirmHoldingsPhysical': 37, 
				'ApprovalGSIHoldingsSwap': 38, 
			}, 
		}, 
		'OmArbitrageStrategy': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'IndexArb': 1, 
				'NonIndexArb': 2, 
				'RiskArb': 3, 
			}, 
		}, 
		'OmBasketType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'SalesProgram': 1, 
				'TradingProgram': 2, 
				'Wave': 3, 
				'TraderAssignmentProgram': 4, 
				'NyseCrossingSessionTwoBasketId': 5, 
			}, 
		}, 
		'OmBookingFlowStyle': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'None': 1, 
				'BookingByLegacy': 2, 
				'Clearing': 3, 
				'ClientExerciseAssign': 4, 
				'Convertibles': 5, 
				'ETSPostTrade': 6, 
				'ETSPreTrade': 7, 
				'FixedIncome': 8, 
				'Futures': 9, 
				'Institutional': 10, 
				'LegacyConfirms': 11, 
				'LegacyDerivatives': 12, 
				'PrimeBrokerage': 13, 
				'ProgramTrading': 14, 
				'PWM': 15, 
				'FuturesBypass': 16, 
				'ETS': 17, 
				'GSECClearing': 18, 
			}, 
		}, 
		'OmBrokerBillingType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ImplicitBilling': 1, 
				'DueBilling': 2, 
			}, 
		}, 
		'OmBrokerIdType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'RADAR': 1, 
				'Bloomberg': 2, 
			}, 
		}, 
		'OmBusinessFunction': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Sales': 1, 
				'Trading': 2, 
			}, 
		}, 
		'OmBusinessLine': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'ProgramTrading': 1, 
				'SingleShares': 2, 
				'StatisticalArbitrage': 3, 
				'Options': 4, 
				'Futures': 5, 
				'SyntheticProductsGroup': 6, 
				'GSET': 7, 
			}, 
		}, 
		'OmBusinessObjectType': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Order': 1, 
				'Execution': 2, 
				'Basket': 3, 
				'Indication': 4, 
				'Liquidity': 5, 
			}, 
		}, 
		'OmBuySell': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Buy': 1, 
				'Sell': 2, 
			}, 
		}, 
		'OmCanadaCrossType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Regular': 1, 
				'Basis': 2, 
				'Contingent': 3, 
				'Internal': 4, 
				'National': 5, 
				'SpecialTradingSession': 6, 
				'Vwap': 7, 
			}, 
		}, 
		'OmCanadaShortMarkingExemptDesignation': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'OrderIsSme': 1, 
				'BuyOrderOfCrossIsSme': 2, 
				'SellOrderOfCrossIsSme': 3, 
				'BuyAndSellOrdersOfCrossAreSme': 4, 
			}, 
		}, 
		'OmCancelNewStatus': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'PendingCancelSend': 1, 
				'CancelSent': 2, 
				'CancelAccepted': 3, 
				'CancelRejected': 4, 
				'NewSent': 5, 
				'NewAccepted': 6, 
				'NewRejected': 7, 
				'OrderComplete': 8, 
			}, 
		}, 
		'OmCancelReason': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'UserAdministrativeAction': 1, 
				'DestinationDisconnected': 2, 
				'AlgoTerminationAction': 3, 
				'SourceDisconnected': 4, 
			}, 
		}, 
		'OmCancelRejectInResponseTo': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Cancel': 1, 
				'Correction': 2, 
			}, 
		}, 
		'OmCancelStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PendingSend': 1, 
				'Sent': 2, 
				'Rejected': 3, 
				'Accepted': 4, 
			}, 
		}, 
		'OmCapitalCommitCategory': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'CapitalCommitRequested': 1, 
				'CapitalCommitVolunteered': 2, 
			}, 
		}, 
		'OmCapitalCommitType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'NoStop': 1, 
				'Straight': 2, 
				'Average': 3, 
				'AverageOption': 4, 
				'GuaranteedVwap': 5, 
				'Guaranteed': 6, 
			}, 
		}, 
		'OmChargeTypes': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'SalesCredit': 1, 
				'AdditionalCredit': 2, 
				'Markup': 3, 
				'Tax': 4, 
				'Discount': 5, 
				'Commission': 6, 
				'BrokerFee': 7, 
				'ExchangeFee': 8, 
				'FudgeFee': 9, 
				'MiscCharge': 10, 
				'ExtraSalesCredit': 11, 
				'LocalCharges': 12, 
				'AccruedTaxRate': 13, 
				'MiscCommissionPerAlloc': 14, 
				'RegulatoryAgencyFee': 15, 
				'ClearingFee': 16, 
				'AccruedInterest': 17, 
				'Vat': 18, 
				'AgriculturalTax': 19, 
				'ConsumptionTax': 20, 
				'Gst': 21, 
				'PtmLevy': 22, 
				'SalesTax': 23, 
				'StampDuty': 24, 
				'TradingActivityFee': 25, 
				'TransactionLevy': 26, 
				'TransactionTax': 27, 
				'Default': 28, 
				'BrokerageIncome': 29, 
				'SalesMarkup': 30, 
			}, 
		}, 
		'OmChargeUnits': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Absolute': 1, 
				'Percentage': 2, 
				'BasisPoints': 3, 
				'Scale': 4, 
				'Discount': 5, 
				'Extra': 6, 
				'Default': 7, 
				'BasicFloor': 8, 
				'BasicCap': 9, 
				'BasisLimit': 10, 
				'PerShare': 11, 
			}, 
		}, 
		'OmClearingAcknowledgement': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'GiveIn': 1, 
				'GiveOut': 2, 
				'Split': 3, 
				'Update': 4, 
			}, 
		}, 
		'OmClearingInstructionType': {
			'version': 5, 
			'values': {
				'INVALID': 0, 
				'Accept': 1, 
				'GiveOut': 2, 
				'Split': 3, 
				'Update': 4, 
				'RejectTrade': 5, 
				'CancelInstruction': 6, 
				'Act': 7, 
				'Qsr': 8, 
				'NoActClearing': 9, 
				'Agu': 10, 
				'ClientDefault': 11, 
				'ActClearingAsCounterParty': 12, 
				'CorrespondentClearing': 13, 
				'StepOutFinra': 14, 
				'StepOutNasdaq': 15, 
				'StepIn': 16, 
			}, 
		}, 
		'OmClientAlgorithmCategory': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Type1': 1, 
				'Type2': 2, 
				'Type3': 3, 
			}, 
		}, 
		'OmClientConsents': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'GsTradeout': 1, 
				'ClientTradeAlong': 2, 
				'GsTradeAhead': 3, 
				'GsClientSplit': 4, 
			}, 
		}, 
		'OmClientExecutionService': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ServiceBureau': 1, 
				'NonBrokerDealer': 2, 
				'BrokerDealerFlip': 3, 
			}, 
		}, 
		'OmCodeTracePointType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'TransactionCommit': 1, 
				'ImageLiveSupplyData': 2, 
				'DSSDatastreamAndImageLiveFiltering': 3, 
				'ImageLiveRecordUpdate': 4, 
				'ApolloFixEngineNormalization': 5, 
				'ApolloFixEngineRouting': 6, 
			}, 
		}, 
		'OmCommentType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Client': 1, 
				'SalesTrader': 2, 
				'Trader': 3, 
				'Operations': 4, 
				'Exchange': 5, 
				'PositionKeeping': 6, 
				'GroupingReason': 7, 
				'Booking': 8, 
				'ExemptReason': 9, 
			}, 
		}, 
		'OmCompletionReason': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'Rejected': 1, 
				'Cancelled': 2, 
				'Filled': 3, 
				'Expired': 4, 
				'DoneForDay': 5, 
				'Rehomed': 6, 
			}, 
		}, 
		'OmConsolidatedRegulatoryCode': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Agency': 1, 
				'ProprietaryProgramTrading': 2, 
				'ProprietaryProgramTradingIndexArb': 3, 
				'IndividualInvestor': 5, 
				'ProprietaryProgramTradingAlgorithmic': 6, # VALUE IS OBSOLETE
				'AgencyProgramAlgorithmic': 7, # VALUE IS OBSOLETE
				'AgencyOtherMemberProgramTradingIndexArb': 8, 
				'AgencyOtherMemberProgramTrading': 9, 
				'Proprietary': 10, 
				'AgencyProgramTradingIndexArb': 11, 
				'AgencyOtherMember': 12, 
				'AgencyProgramTrading': 13, 
				'ProprietaryOptionsClearingCorporationMemberFirm': 14, # VALUE IS OBSOLETE
				'IndividualInvestorProgramTrading': 15, 
				'IndividualInvestorProgramTradingIndexArb': 16, 
				'AgencyDiscretionExercised': 17, # VALUE IS OBSOLETE
				'AgencyProgramTradingDiscretionExercised': 18, # VALUE IS OBSOLETE
				'AgencyProgramTradingIndexArbDiscretionExercised': 19, # VALUE IS OBSOLETE
				'IndividualInvestorDiscretionExercised': 20, # VALUE IS OBSOLETE
			}, 
		}, 
		'OmControlLayer': {
			'version': 2, 
			'values': {
				'INVALID': 255, 
				'UniversalInbound': 0, 
				'AlgoParent': 1, 
				'AlgoChild': 2, 
				'SorParent': 3, 
				'SorChild': 4, 
				'DMAInbound': 5, 
				'DMAOutbound': 6, 
				'UniversalExchange': 7, 
				'OMInbound': 8, 
				'OMWorkflowInbound': 9, 
			}, 
		}, 
		'OmControlResult': {
			'version': 1, 
			'values': {
				'INVALID': 255, 
				'Passed': 0, 
				'Failed': 1, 
				'Error': 2, 
				'Disabled': 3, 
				'FailedButOnlyAlerted': 4, 
				'ErrorButOnlyAlerted': 5, 
			}, 
		}, 
		'OmCorporateActionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Acquisition': 1, 
				'Divestiture': 2, 
				'CashDividend': 3, 
				'StockDividend': 4, 
				'DomicileChange': 5, 
				'TickerChange': 6, 
				'Reclassification': 7, 
				'Split': 8, 
				'SpinOff': 9, 
				'RightsOffering': 10, 
				'IdChange': 11, 
				'ListingChange': 12, 
				'NameChange': 13, 
				'List': 14, 
				'Delist': 15, 
				'ShareRepurchase': 16, 
				'ShareholderMeeting': 17, 
				'EquityOffering': 18, 
			}, 
		}, 
		'OmCorrectionStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PendingSend': 1, 
				'Sent': 2, 
				'Accepted': 3, 
				'Rejected': 4, 
			}, 
		}, 
		'OmCreatorIdType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'External': 1, 
				'Program': 2, 
				'Kerberos': 3, 
				'StormUser': 4, 
			}, 
		}, 
		'OmCreditCategoryType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'NetLiveOrders': 1, 
				'NetCumulative': 2, 
				'GrossCumulative': 3, 
				'Hybrid': 4, 
			}, 
		}, 
		'OmCreditType': {
			'version': 1, 
			'values': {
				'INVALID': 255, 
				'Shared': 0, 
				'SharedMaximum': 1, 
				'Exclusive': 2, 
			}, 
		}, 
		'OmCrossRequestReason': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Arbitrage': 1, 
				'Combination': 2, 
				'ExchangeForPhysical': 3, 
				'PositionConsolidation': 4, 
				'Rollover': 5, 
				'Other': 6, 
				'Facilitation': 7, 
				'PriceImprovement': 8, 
				'FacilitationResponse': 9, 
				'PriceImprovementResponse': 10, 
				'AwayMarketBetterResponse': 11, 
				'AutomatedImprovementMechanism': 12, 
			}, 
		}, 
		'OmCrossingOption': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'CrossOnly': 1, 
				'DoNotCross': 2, 
				'OkToCross': 3, 
			}, 
		}, 
		'OmCurrentEngineState': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Running': 1, 
				'Down': 2, 
				'CouldNotBeDetermined': 3, 
			}, 
		}, 
		'OmCurrentMode': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'Active': 1, 
				'Backup': 2, 
				'PendingClusterLockResponse': 3, 
			}, 
		}, 
		'OmCustomerPartyType': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Institutional': 1, 
				'BrokerDealer': 2, 
				'Individual': 3, 
				'Employee': 4, 
				'Professional': 5, 
				'OCCMemberFirm': 6, 
				'MarketMaker': 7, 
			}, 
		}, 
		'OmDeclarationType': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'PreDeclaration': 1, 
				'PostDeclaration': 2, 
			}, 
		}, 
		'OmDependencyType': {
			'version': 11, 
			'values': {
				'INVALID': 0, 
				'L1MarketData': 1, 
				'CurrencyMarketData': 3, 
				'SmartRouter': 4, 
				'OrderBook': 5, 
				'Rules': 6, 
				'ReferenceDataEntity': 7, 
				'ImbalanceData': 8, 
				'PositionData': 9, 
				'ShortSellLocate': 10, 
				'L1MarketDataBidAsk': 11, 
				'L1MarketDataTradeInfo': 12, 
				'L1MarketDataQuoteCondition': 13, 
				'PrimaryVenueL1MarketData': 14, 
				'PrimaryVenueL1MarketDataBidAsk': 15, 
				'PrimaryVenueL1MarketDataTradeInfo': 16, 
				'PrimaryVenueL1MarketDataQuoteCondition': 17, 
				'AllVenuesMarketData': 18, 
				'L1MarketDataProjectedDv': 19, 
				'L1MarketDataRegulatoryCondition': 20, 
				'L1MarketDataOpeningPrice': 21, 
				'CrossWatchOrderCancel': 22, 
				'UnderlierL1MarketData': 23, 
				'AggregateControlsData': 24, 
				'RTLThreshold': 25, 
			}, 
		}, 
		'OmDestinationEntityIndicator': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'InternalSameEntity': 1, 
				'InternalOtherEntity': 2, 
				'ExternalEntity': 3, 
			}, 
		}, 
		'OmDestinationTraderIdType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Kerberos': 1, 
				'Exchange': 2, 
				'VendorFormat': 3, 
			}, 
		}, 
		'OmDiscretionaryReferencePriceType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Mid': 1, 
				'Bid': 2, 
				'Ask': 3, 
				'OrderBasePrice': 4, 
			}, 
		}, 
		'OmEbscOverrideType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PartiallyGoodOverride': 1, 
				'NoGoodOverride': 2, 
			}, 
		}, 
		'OmErrorType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'InstructionError': 1, 
				'ExchangeError': 2, 
			}, 
		}, 
		'OmEventPostDirection': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Upstream': 1, 
				'Downstream': 2, 
				'Both': 3, 
			}, 
		}, 
		'OmEventType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'NewTrade': 1, 
				'Amend': 2, 
				'Cancel': 3, 
				'Settlement': 4, 
				'CancelSettlement': 5, 
				'NewCorpAction': 6, 
				'AmendedCorpAction': 7, 
				'CancelledCorpAction': 8, 
				'NewPositionAdjustment': 9, 
				'NewProgram': 10, 
				'AmendProgram': 11, 
				'NewOrder': 12, 
				'AmendOrder': 13, 
				'CleanUp': 14, 
				'NewRequest': 15, 
				'ExpireRequest': 16, 
				'RejectRequest': 17, 
				'NewQuote': 18, 
				'AcceptQuote': 19, 
				'ExpireQuote': 20, 
				'RejectQuote': 21, 
				'CounterQuote': 22, 
				'CancelOrder': 23, 
				'ExpireOrder': 24, 
				'RejectOrder': 25, 
				'AcceptOrder': 26, 
				'UpdateRequest': 27, 
				'CancelRequest': 28, 
				'CashForwardRoll': 29, 
				'NewBusinessProcess': 30, 
				'NewBusinessProcessStep': 31, 
				'UpdateBusinessProcessStep': 32, 
				'NewOrderAccept': 33, 
				'NewOrderReject': 34, 
				'AmendOrderAccept': 35, 
				'AmendOrderReject': 36, 
				'CancelOrderAccept': 37, 
				'CancelOrderReject': 38, 
				'New': 39, 
				'CorrectTrade': 41, 
				'CancelTrade': 42, 
				'Park': 43, 
				'Unpark': 44, 
				'AdminUpdateOrder': 45, 
				'AdminUpdateExecution': 46, 
			}, 
		}, 
		'OmExecutionAttributionStrategy': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'SingleParentOrder': 1, 
				'PercentageOfQuantityRemaining': 2, 
				'SingleParentShareExecution': 3, 
				'DoNotAttribute': 4, 
				'RisklessPrincipal': 5, 
				'SingleParentShareAgencyExecution': 6, 
			}, 
		}, 
		'OmExecutionCancelCorrectReason': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Exchange': 1, 
				'CoverageDesk': 2, 
				'LocateFailed': 3, 
				'OnExchangeCross': 4, 
				'SafeHarborViolation': 5, 
				'TradeReportRejected': 6, 
			}, 
		}, 
		'OmExecutionCancelType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ReturnQuantityToOrder': 1, 
				'DoNotReturnQuantityToOrder': 2, 
			}, 
		}, 
		'OmExecutionCapacity': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Agency': 1, 
				'CrossAsAgent': 2, 
				'CrossAsPrincipal': 3, 
				'Principal': 4, 
				'RisklessPrincipal': 5, 
			}, 
		}, 
		'OmExecutionReason': {
			'version': 5, 
			'values': {
				'INVALID': 0, 
				'AutomatedExecution': 1, 
				'ReceivedFromOtcPool': 2, 
				'ExchangeForPhysical': 3, 
				'ReceivedFromWhiteLabelClient': 4, 
				'ResultOfOnExchangeCross': 5, 
				'ManualExecution': 6, 
			}, 
		}, 
		'OmExecutionStatus': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Alive': 1, 
				'Canceled': 2, 
				'Suspended': 3, 
			}, 
		}, 
		'OmExecutionSuspendReason': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'DuplicateExecution': 1, 
				'NoOrderId': 2, 
				'UnknownOrderId': 3, 
				'OrderComplete': 4, 
				'DifferentSide': 5, 
				'DifferentProduct': 6, 
				'WouldHaveOverfilled': 7, 
				'OutOfSequence': 8, 
				'InvalidProduct': 9, 
				'NoBuySell': 10, 
				'NoQuantity': 11, 
				'InvalidFields': 12, 
				'EnrichmentRuleFailed': 13, 
				'ValidationRuleFailed': 14, 
			}, 
		}, 
		'OmExecutionTransactionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'New': 1, 
				'Correction': 2, 
				'Cancel': 3, 
			}, 
		}, 
		'OmExecutionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Regular': 1, 
				'StrategyLeg': 2, 
				'Strategy': 3, 
			}, 
		}, 
		'OmExternalEventType': {
			'version': 41, 
			'values': {
				'INVALID': 0, 
				'NewOrder': 1, 
				'AcceptOrder': 2, 
				'RejectOrder': 3, 
				'AmendOrder': 4, 
				'AmendOrderAccept': 5, 
				'AmendOrderReject': 6, 
				'CancelOrder': 7, 
				'CancelOrderAccept': 8, 
				'CancelOrderReject': 9, 
				'NewTrade': 10, 
				'CorrectTrade': 11, 
				'CancelTrade': 12, 
				'DoneForDay': 13, 
				'IoiUpdate': 14, 
				'IoiOrderRequestAcknowledgement': 15, 
				'NewBasket': 16, 
				'CorrectBasket': 17, 
				'CancelBasket': 18, 
				'CreateChildBasket': 19, 
				'MergeBasket': 20, 
				'MergeOrders': 21, 
				'MergeBasketFailure': 22, 
				'SuspendOrder': 23, 
				'UnSuspendOrder': 24, 
				'RouteOrder': 25, 
				'RouteBasket': 26, 
				'AcceptBasket': 27, 
				'RejectBasket': 28, 
				'RequestCorrectBasket': 29, 
				'RequestCancelBasket': 30, 
				'AcceptCancelBasket': 31, 
				'AcceptCorrectBasket': 32, 
				'RejectCancelBasket': 33, 
				'RejectCorrectBasket': 34, 
				'CreateChildOrder': 35, 
				'CommandRequest': 36, 
				'UnDoneForDay': 37, 
				'UnsuspendExecution': 38, 
				'ClearExecutionIsSuspendAlertable': 39, 
				'ForceCancel': 40, 
				'AcknowledgeSuspendedExecution': 41, 
				'UpdateTradeReportResponse': 42, 
				'RequestCancelChildOrders': 43, 
				'CancelAllExecutionsForOrder': 44, 
				'DependencyResolution': 45, 
				'DependencyResolutionTimeout': 46, 
				'CreateOrderHierarchy': 47, 
				'ReleaseSendWithheldOrder': 48, 
				'CreateGroupedExecutions': 49, 
				'RequestLocateDetails': 96, 
				'UpdateLocateDetails': 97, 
				'ReinstateOrder': 98, 
				'AcceptLocateRequest': 99, 
				'RejectLocateRequest': 100, 
				'RequestLocateForOrder': 101, 
				'CommandReject': 102, 
				'SetTradingAlgorithmEngine': 103, 
				'VikingSessionStateCommand': 104, 
				'RequestMassCancel': 105, 
				'PartialAcceptCancelOrder': 106, 
				'OrderRehome': 107, 
				'MatchingEngineStatusChange': 108, 
				'CancelMatchedExecutions': 109, 
				'VikingForceMassCancel': 110, 
				'CorrectMatchedExecutions': 111, 
				'CreateTestCaseOverride': 112, 
				'SetOrderBlock': 113, 
				'ClearOrderBlock': 114, 
				'ApplyAdvisorPlacement': 115, 
				'CrossOrders': 116, 
				'ApplyCorporateActionToOrder': 117, 
				'PurgeBusinessObject': 118, 
				'SuspendedDownstreamOrder': 119, 
				'UnsuspendedDownstreamOrder': 120, 
				'LinkChildOrders': 121, 
				'ExpireOrder': 122, 
				'ReinstateExecution': 123, 
				'ReinstateBasket': 124, 
				'LinkContingentOrder': 125, 
				'UserAlert': 126, 
				'MarketSessionStateChange': 127, 
				'CancelExecution': 128, 
				'CancelExecutionAccept': 129, 
				'CancelExecutionReject': 130, 
				'MergeIntoExistingOrder': 131, 
				'CreateSynchronizedChildOrders': 132, 
				'NewIndication': 133, 
				'CorrectIndication': 134, 
				'CancelIndication': 135, 
				'IndicationTransmissionFailure': 136, 
				'StampOrderMatchingBins': 137, 
				'NewLiquidity': 138, 
				'CorrectLiquidity': 139, 
				'CancelLiquidity': 140, 
				'ValidateCreateOrder': 141, 
				'ValidateCorrectOrder': 142, 
				'AcceptApprovalRequest': 143, 
				'RejectApprovalRequest': 144, 
			}, 
		}, 
		'OmExternalObjectIdType': {
			'version': 10, 
			'values': {
				'INVALID': 0, 
				'FixOrderId': 1, 
				'OmId': 2, 
				'ExchangeId': 3, 
				'RiskEngineExecutionId': 4, 
				'UniversalTradeIdentifier': 5, 
				'PtAppServerId': 6, 
				'RediRefKey': 7, 
				'RediBranchSequence': 8, 
				'ExchRefKey': 9, 
				'VikingId': 10, 
				'RediExecutionLinkId': 11, 
				'RegulatoryReportExecutionId': 12, 
				'Sport': 13, 
				'ViJoe': 14, 
				'TSecDbSor': 15, 
				'AlgorithmEngine': 16, 
				'ExchangeExecutionSecondaryId': 17, 
				'QuoteTool': 18, 
			}, 
		}, 
		'OmExternalSystemType': {
			'version': 11, 
			'values': {
				'INVALID': 0, 
				'Oms': 1, 
				'Apollo': 3, 
				'Viking': 4, 
				'IoiProvider': 5, 
				'PtApp': 6, 
				'RediSigma': 7, 
				'Sport': 8, 
				'ViJoe': 9, 
				'TSecDbSor': 10, 
				'ParentChildManager': 11, 
				'InternalSmartRouter': 12, 
				'OrderBook': 13, 
				'AlgorithmEngine': 14, 
				'FixClient': 15, 
				'TSecDbCrossingEngine': 16, 
				'TSecDbCrossChecker': 17, 
				'TradingAutomationSyntheticLowTouchHedger': 18, 
			}, 
		}, 
		'OmFalconTradeReportTransactionType': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'New': 1, 
				'Correction': 2, 
				'Cancel': 3, 
			}, 
		}, 
		'OmFixClientType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ApolloClient': 1, 
				'Om2IntegratedFix': 2, 
			}, 
		}, 
		'OmFixOrderStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'New': 1, 
				'PartiallyFilled': 2, 
				'Filled': 3, 
				'Doneforday': 4, 
				'Canceled': 5, 
				'PendingCancel': 7, 
				'Stopped': 8, 
				'Rejected': 9, 
				'Suspended': 10, 
				'PendingNew': 11, 
				'Calculated': 12, 
				'Expired': 13, 
				'AcceptedForBidding': 14, 
				'PendingReplace': 15, 
				'Replaced': 16, 
				'CancelRejected': 17, 
			}, 
		}, 
		'OmFixProcessCode': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'Regular': 1, 
				'SoftDollar': 2, 
				'StepIn': 3, 
				'StepOut': 4, 
				'SoftDollarStepIn': 5, 
				'SoftDollarStepOut': 6, 
				'PlanSponsor': 7, 
				'NasdaqStepOut': 8, 
				'SpecialTrade': 9, 
				'SpecialStepOutTrade': 10, 
				'NasdaqSalesFeeTransfer': 11, 
			}, 
		}, 
		'OmFixSessionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'LowTouch': 1, 
				'EquityDesk': 2, 
				'ProgramTrading': 3, 
				'OneWay': 4, 
			}, 
		}, 
		'OmFlightRecorderTransactionMarkerType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'StartOfTransaction': 1, 
				'EndOfTransaction': 2, 
			}, 
		}, 
		'OmGamePlanType': {
			'version': 13, 
			'values': {
				'INVALID': 0, 
				'None': 1, 
				'SingleVenuePlacement': 2, 
				'MultipleVenuePlacement': 3, 
				'LiquidityPlus': 4, 
				'PassivePlacement': 5, 
				'IOCBurst': 6, 
				'Iceberg': 7, 
				'IOCSeqPing': 8, 
				'ShadowDualPosting': 9, 
				'Phoenix': 10, 
				'Futures': 11, 
				'PassivePlacementSniper': 12, 
				'IOCSweep': 13, 
				'FOKSweep': 14, 
				'Pi': 15, 
				'Stealth': 16, 
				'AutoRefresh': 17, 
				'Auction': 18, 
				'UtilityAlgo': 19, 
				'AlgoAmend': 20, 
			}, 
		}, 
		'OmGiveUp': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'GiveIn': 1, 
				'GiveOut': 2, 
				'PendingGiveIn': 3, 
				'PendingGiveOut': 4, 
				'RejectedGiveOut': 5, 
			}, 
		}, 
		'OmGsEntity': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'GSCO': 1, 
				'GSEC': 2, 
				'GSI': 3, 
				'GSCD': 4, 
				'GSFM': 5, 
				'BRCT': 6, 
			}, 
		}, 
		'OmGtcActionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'NoAction': 1, 
				'AdjustOrder': 2, 
				'CancelOrder': 3, 
			}, 
		}, 
		'OmHedgeStrategy': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'IndexHedge': 1, 
				'NonIndexHedge': 2, 
			}, 
		}, 
		'OmIndicationCapacity': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Natural': 1, 
				'Principal': 2, 
			}, 
		}, 
		'OmIndicationCompletionReason': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Rejected': 1, 
				'Cancelled': 2, 
			}, 
		}, 
		'OmIndicationQuality': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'High': 1, 
				'Medium': 2, 
				'Low': 3, 
			}, 
		}, 
		'OmIndicationRoutingType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Standard': 1, 
				'Actionable': 2, 
			}, 
		}, 
		'OmIndicationSessionTransmissionStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'NewSent': 1, 
				'NewFailed': 2, 
				'UpdateSent': 3, 
				'UpdateFailed': 4, 
				'CancelSent': 5, 
				'CancelFailed': 6, 
			}, 
		}, 
		'OmInstructionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'AcceptTrade': 1, 
				'RejectTrade': 2, 
				'CancelInstruction': 3, 
				'GiveOut': 4, 
				'AcceptPendingGiveIn': 5, 
				'RejectPendingGiveIn': 6, 
				'CancelPendingGiveOut': 7, 
				'Unset': 8, 
			}, 
		}, 
		'OmInternalEventType': {
			'version': 39, 
			'values': {
				'INVALID': 0, 
				'OrderEntry': 1, 
				'OrderEntryFailure': 2, 
				'OrderAccept': 3, 
				'OrderReject': 4, 
				'RequestOrderCancel': 5, 
				'RequestOrderCancelFailure': 6, 
				'AcceptOrderCancel': 7, 
				'RejectOrderCancel': 8, 
				'PendingOrderCancel': 9, 
				'RequestOrderCorrect': 10, 
				'RequestOrderCorrectFailure': 11, 
				'AcceptOrderCorrect': 12, 
				'RejectOrderCorrect': 13, 
				'PendingOrderCorrect': 14, 
				'ExecutionEntry': 15, 
				'CancelExecution': 16, 
				'CorrectExecution': 17, 
				'DoneForDay': 18, 
				'ForceCancel': 19, 
				'OrderPark': 20, 
				'OrderUnpark': 21, 
				'OrderUpdateForUpstream': 22, 
				'OrderUpdateForDownstream': 23, 
				'ExecutionUpdateForUpstream': 24, 
				'ExecutionUpdateForDownstream': 25, 
				'AdminUpdateOrder': 26, 
				'AdminUpdateExecution': 27, 
				'OrderImage': 28, 
				'ExecutionImage': 29, 
				'BasketEntry': 30, 
				'BasketEntryFailure': 31, 
				'ForceCancelBasket': 32, 
				'ForceCorrectBasket': 33, 
				'CreateChildBasket': 34, 
				'MergeBasket': 35, 
				'MergeBasketFailure': 36, 
				'OrderSuspend': 37, 
				'OrderUnSuspend': 38, 
				'OrderRoute': 39, 
				'OrderRouteFailure': 40, 
				'RouteBasket': 41, 
				'RouteBasketFailure': 42, 
				'AcceptBasket': 43, 
				'RejectBasket': 44, 
				'RequestCorrectBasket': 45, 
				'RequestCancelBasket': 46, 
				'AcceptCancelBasket': 47, 
				'AcceptCorrectBasket': 48, 
				'RejectCancelBasket': 49, 
				'RejectCorrectBasket': 50, 
				'RequestCorrectBasketFailure': 51, 
				'RequestCancelBasketFailure': 52, 
				'AcceptCancelBasketFailure': 53, 
				'AcceptCorrectBasketFailure': 54, 
				'RejectCancelBasketFailure': 55, 
				'RejectCorrectBasketFailure': 56, 
				'UnDoneForDay': 57, 
				'CancelNewOrderEntry': 58, 
				'QueueCorrection': 59, 
				'QueueCancel': 60, 
				'ExecutionSuspend': 61, 
				'ExecutionUnsuspend': 62, 
				'ClearExecutionIsSuspendAlertable': 63, 
				'ForceCancelPendingFinalExec': 64, 
				'AcceptCancelPendingFinalExec': 65, 
				'AcceptCorrectionPendingFinalExec': 66, 
				'DoneForDayPendingFinalExec': 67, 
				'OrderAcceptFailure': 68, 
				'AcceptOrderCorrectFailure': 69, 
				'ExecutionEntryFailure': 70, 
				'ExecutionUnsuspendFailure': 71, 
				'AcknowledgeSuspendedExecution': 72, 
				'CreateChildBasketFailure': 73, 
				'DoneForDayFailure': 74, 
				'ForceCancelFailure': 75, 
				'OrderSuspendFailure': 76, 
				'UnDoneForDayFailure': 77, 
				'OrderUnSuspendFailure': 78, 
				'ClearExecutionIsSuspendAlertableFailure': 79, 
				'ForceCorrectBasketFailure': 80, 
				'RejectOrderCancelFailure': 81, 
				'RejectOrderCorrectFailure': 82, 
				'AcknowledgeSuspendedExecutionFailure': 83, 
				'UpdateTradeReportResponse': 84, 
				'CancelChildOrdersFailure': 85, 
				'CancelAllExecutionsForOrderFailure': 86, 
				'CancelExecutionFailure': 87, 
				'RequestLocateForOrder': 88, 
				'RequestLocateForOrderFailure': 89, 
				'AcceptLocateRequest': 90, 
				'AcceptLocateRequestFailure': 91, 
				'RejectLocateRequest': 92, 
				'RejectLocateRequestFailure': 93, 
				'OrderReleaseSendWithheld': 94, 
				'OrderReleaseSendWithheldFailure': 95, 
				'RequestLocateDetails': 96, 
				'UpdateLocateDetails': 97, 
				'ReinstateOrder': 98, 
				'UpdateOrderStatus': 99, 
				'AttachExecution': 100, 
				'OrderPendingCross': 101, 
				'SetTradingAlgorithmEngine': 102, 
				'PartialAcceptCancelOrder': 103, 
				'PartialAcceptCancelOrderFailure': 104, 
				'OrderRehome': 105, 
				'OrderRehomeFailure': 106, 
				'MatchingEngineStatusChange': 107, 
				'CancelMatchedExecutions': 108, 
				'CancelMatchedExecutionsFailure': 109, 
				'CreateTestCaseOverride': 110, 
				'SetOrderBlock': 111, 
				'ClearOrderBlock': 112, 
				'ApplyAdvisorPlacement': 113, 
				'RequestAdvisorPlacement': 114, 
				'RejectRequestAdvisorPlacement': 115, 
				'ExecutionSuspendFailure': 116, 
				'ExecutionPark': 117, 
				'ExecutionUnpark': 118, 
				'LinkChildOrder': 119, 
				'LinkParentOrder': 120, 
				'LinkParentOrderFailure': 121, 
				'RequestExpireOrder': 122, 
				'RequestExpireOrderFailure': 123, 
				'AttachCrossedExecutions': 124, 
				'AttachLegExecution': 125, 
				'ReinstateExecution': 126, 
				'ReinstateBasket': 127, 
				'LinkContingentOrder': 128, 
				'LinkContingentOrderFailure': 129, 
				'UserAlert': 130, 
				'OrderQueued': 131, 
				'RequestExecutionCancel': 132, 
				'RequestExecutionCancelFailure': 133, 
				'AcceptExecutionCancel': 134, 
				'RejectExecutionCancel': 135, 
				'PendingExecutionCancel': 136, 
				'LinkAdditionalParentOrders': 137, 
				'UpdateOrderStatusFailure': 138, 
				'IndicationEntry': 139, 
				'ForceCorrectIndication': 140, 
				'ForceCancelIndication': 141, 
				'IndicationTransmissionFailure': 142, 
				'RejectIndication': 143, 
				'IndicationEntryFailure': 144, 
				'ForceCancelIndicationFailure': 145, 
				'ForceCorrectIndicationFailure': 146, 
				'StampOrderMatchingBins': 147, 
				'SyntheticExecutionUpdate': 148, 
				'LiquidityEntry': 149, 
				'ForceCorrectLiquidity': 150, 
				'ForceCancelLiquidity': 151, 
				'LiquidityEntryFailure': 152, 
				'ForceCorrectLiquidityFailure': 153, 
				'ForceCancelLiquidityFailure': 154, 
				'ValidateCreateOrder': 155, 
				'ValidateCorrectOrder': 156, 
				'ValidateCreateOrderFailure': 157, 
				'ValidateCorrectOrderFailure': 158, 
				'AcceptApprovalRequest': 159, 
				'AcceptApprovalRequestFailure': 160, 
				'RejectApprovalRequest': 161, 
				'RejectApprovalRequestFailure': 162, 
			}, 
		}, 
		'OmInterventionOption': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'NoManualIntervention': 1, 
				'ManualInterventionOk': 2, 
				'ManualInterventionRequested': 3, 
			}, 
		}, 
		'OmIntraEntityIndicator': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'IntraEntity': 1, 
				'InterEntity': 2, 
			}, 
		}, 
		'OmInventoryPublisherStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PublisherPending': 1, 
				'PublisherRejected': 2, 
				'PublisherPartial': 3, 
				'PublisherApproved': 4, 
				'PublisherUpdate': 5, 
			}, 
		}, 
		'OmIoiOrderRequestResult': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'OrderRequestAccepted': 1, 
				'OrderRequestDeclined': 2, 
			}, 
		}, 
		'OmIoiStatus': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'Active': 1, 
				'Suspended': 2, 
			}, 
		}, 
		'OmKoreaReportType': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'IndexArbitrage': 1, 
				'NonIndexArbitrage': 2, 
				'SingleStockFuturesArbitrage': 3, 
				'ETFArbitrageIndexArbitrafeAvailable': 4, 
				'ETFCreateIndexArbitrageAvailable': 5, 
				'ETFArbitrageNonIndexArbitrage': 6, 
				'ETFCreateNonIndexArbitrage': 7, 
				'ELWHedge': 8, 
				'ETFHedge': 9, 
				'SFOHedge': 10, 
				'OTCHedge': 11, 
			}, 
		}, 
		'OmLiquidityIndicatorType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'TookLiquidity': 1, 
				'ProvidedLiquidity': 2, 
				'RoutedAway': 3, 
				'Auction': 4, 
			}, 
		}, 
		'OmLiquidityPrimaryStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Available': 1, 
				'Unavailable': 2, 
				'Complete': 3, 
			}, 
		}, 
		'OmLiquiditySourceReason': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'LiquiditySourceIsOrderInHand': 1, 
				'LiquiditySourceIsTakingPosition': 2, 
				'LiquiditySourceIsBookUnwind': 3, 
			}, 
		}, 
		'OmLiquidityType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Order': 1, 
				'Position': 2, 
				'AutomatedQuote': 3, 
				'ManualQuote': 4, 
			}, 
		}, 
		'OmLocateMethod': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ManualLocate': 1, 
				'GSLocate': 2, 
				'PreBorrow': 3, 
			}, 
		}, 
		'OmLocateProxyRequestStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PendingAck': 1, 
				'PendingResponse': 2, 
				'Accepted': 3, 
				'Rejected': 4, 
			}, 
		}, 
		'OmLocateProxyResponseStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Accepted': 1, 
				'Granted': 2, 
				'Rejected': 3, 
				'Partial': 4, 
				'Pending': 5, 
				'Cancelled': 6, 
				'Error': 7, 
			}, 
		}, 
		'OmLocateStatus': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'LocateNotRequired': 1, 
				'PendingLocateRequest': 2, 
				'PendingLocateResponse': 3, 
				'LocateSuccessful': 4, 
				'LocateUnSuccessful': 5, 
				'LocateInheritedFromParent': 6, 
			}, 
		}, 
		'OmLockCommand': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Invalid': 1, 
				'Acquire': 2, 
				'Release': 3, 
				'Read': 4, 
				'Clear': 5, 
			}, 
		}, 
		'OmLockFailureReason': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'CommandNotSupported': 1, 
				'CommandParseError': 2, 
				'OpenFail': 3, 
				'WriteFail': 4, 
				'ReadFail': 5, 
				'LockFileCorrupted': 6, 
				'LockAlreadyHeld': 7, 
				'LockNotOwned': 8, 
				'LockFileEmpty': 9, 
				'RemoveFail': 10, 
			}, 
		}, 
		'OmLockState': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Locked': 1, 
				'Unlocked': 2, 
			}, 
		}, 
		'OmMarginType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'MarginOpen3Month': 1, 
				'MarginOpen6Month': 2, 
				'GeneralMarginOpen': 3, 
				'MarginClose3Month': 4, 
				'MarginClose6Month': 5, 
				'GeneralMarginClose': 6, 
			}, 
		}, 
		'OmMarketDataState': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'UNSUBSCRIBED': 1, 
				'UNAVAILABLE': 2, 
				'SUBSCRIBE_PENDING': 3, 
				'SUBSCRIBED_STALE': 4, 
				'SUBSCRIBED_OK': 5, 
			}, 
		}, 
		'OmMarketDataType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Original': 1, 
				'Underlier': 2, 
				'TheoreticalValue': 3, 
				'Current': 4, 
				'SiQuote': 5, 
			}, 
		}, 
		'OmMarketProtectionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Percentage': 1, 
				'Ticks': 2, 
			}, 
		}, 
		'OmMarketSession': {
			'version': 6, 
			'values': {
				'INVALID': 0, 
				'SingleSession': 1, 
				'DaySession': 2, 
				'EveningSession': 3, 
				'MorningSession': 4, 
				'AfternoonSession': 5, 
				'NyseCrossingSessionII': 6, 
				'ExtendedHoursTrading': 7, 
				'PreOpenSession': 8, 
				'SystemHours': 9, 
				'BatsRegularHoursOnly': 10, 
				'WorkupSessionOnly': 11, 
				'AfterHourClosingPriceSession': 12, 
				'AfterHourSinglePriceSession': 13, 
				'PreOpenAndContinuous': 14, 
			}, 
		}, 
		'OmMarketSessionState': {
			'version': 6, 
			'values': {
				'INVALID': 0, 
				'DaySession': 1, 
				'MorningSession': 2, 
				'AfternoonSession': 3, 
				'EveningSession': 4, 
				'PreOpenSession': 5, 
				'MorningPreOpenSession': 6, 
				'AfternoonPreOpenSession': 7, 
				'EveningPreOpenSession': 8, 
				'ClosingSession': 9, 
				'Closed': 10, 
				'NonIncreaseSession': 11, 
				'NonCancelSession': 12, 
				'SpecialPreOpenSessionStart': 13, 
				'SpecialPreOpenSessionEnd': 14, 
				'KoreaSpecialOverlapSession': 15, 
				'AfterHourClosingPriceSession': 16, 
				'AfterHourSinglePriceSession': 17, 
				'PreOpenAndContinuous': 18, # VALUE IS OBSOLETE
				'LunchBreak': 19, 
				'OrderQueueingPreOpenSession': 20, 
				'PeriodicCallAuctionSessionStart': 21, 
				'PeriodicCallAuctionSessionEnd': 22, 
			}, 
		}, 
		'OmMassCancelType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ClientDisconnect': 1, 
				'SmartRouterDisconnect': 2, 
				'ChildOnly': 3, 
				'ExchangeDisconnect': 4, 
			}, 
		}, 
		'OmMatchCycleType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PriceTime': 1, 
				'PriceBrokerTime': 2, 
				'BrokerPriceTime': 3, 
				'PriorityPriceTime': 4, 
			}, 
		}, 
		'OmMatchingEngineStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Halted': 1, 
				'Suspended': 2, 
				'Trading': 3, 
				'Preopen': 4, 
				'Closed': 5, 
			}, 
		}, 
		'OmMatchingEngineStatusScope': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Product': 1, 
				'Session': 2, 
				'User': 3, 
			}, 
		}, 
		'OmMessageFormat': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Fix': 1, 
				'Iv': 2, 
				'Nvp': 3, 
				'Struct': 4, 
			}, 
		}, 
		'OmMessageIdType': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'Integer': 1, 
				'String': 2, 
				'Binary': 3, 
				'UInt64': 4, 
			}, 
		}, 
		'OmMessageStatus': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'NotSent': 1, 
				'Sent': 2, 
				'Acknowledged': 3, 
			}, 
		}, 
		'OmNearLegPricePreference': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PriorDaySettlementPrice': 1, 
				'EnginePrice': 2, 
			}, 
		}, 
		'OmNyseBillingIndicator': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'LiquidityTaker': 1, 
				'LiquidityProvider': 2, 
				'Blended': 3, 
				'LiquidityProviderOnOpenGtc': 4, 
				'LiquidityProviderOnOpen': 5, 
				'LiquidityProviderOnClose': 6, 
				'BlendedOnClose': 7, 
			}, 
		}, 
		'OmOffsetDirectionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'SideIndependent': 1, 
				'SideDependent': 2, 
			}, 
		}, 
		'OmOffsetType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Price': 1, 
				'Ticks': 2, 
			}, 
		}, 
		'OmOpaqueOrderDataType': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'AlgorithmEngineState': 1, 
				'UpstreamApplicationState': 2, 
				'TradingAlgorithmPrivateParameters': 3, 
				'FalconState': 4, 
			}, 
		}, 
		'OmOrderBlockActionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Suspend': 1, 
				'Reject': 2, 
			}, 
		}, 
		'OmOrderCapacity': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Agency': 1, 
				'Principal': 2, 
				'Combined': 3, 
			}, 
		}, 
		'OmOrderCreationType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Automated': 1, 
				'Manual': 2, 
			}, 
		}, 
		'OmOrderSuspendReasonType': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'MaximumQuantityExceeded': 1, 
				'MaximumPercentageOfAdvExceeded': 2, 
				'MaximumNotionalValueExceeded': 3, 
				'LimitPriceTooAgressive': 4, # VALUE IS OBSOLETE
				'LimitPriceTooPassive': 5, 
				'LimitPriceTooAggressive': 6, 
				'CreditLimitExceeded': 7, 
				'ProductRestricted': 8, 
			}, 
		}, 
		'OmOrderTransactionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'New': 1, 
				'Correction': 2, 
				'Cancel': 3, 
			}, 
		}, 
		'OmOrderType': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'Market': 1, 
				'Limit': 2, 
				'Stop': 3, 
				'StopLimit': 4, 
				'PegBid': 5, 
				'PegMid': 6, 
				'PegAsk': 7, 
				'Pegged': 8, 
				'LimitSweep': 9, 
				'MarketToLimit': 10, 
				'AtBestLimit': 11, 
			}, 
		}, 
		'OmOrderbookVisibilityType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Visible': 1, 
				'Dark': 2, 
			}, 
		}, 
		'OmOrganizationalEntityIdType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'NumberAlias': 1, 
				'Guid': 2, 
			}, 
		}, 
		'OmOriginalPartyTypes': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'FirmVsCustomer': 1, 
				'FirmVsBroker': 2, 
				'FirmVsFirm': 3, 
				'FirmVsIndividualCustomer': 4, 
				'FirmVsExchange': 5, 
				'FirmVsEmployee': 6, 
				'BrokerDealerCustomerVsStreet': 7, 
				'FirmVsBrokerDealerCustomer': 8, 
			}, 
		}, 
		'OmParentChildManagerType': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'Basic': 1, 
				'SingleActiveChild': 2, 
				'Basket': 3, 
				'AutoSplitChild': 4, 
			}, 
		}, 
		'OmPegScopeType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'DestinationBBO': 1, 
				'RegionalBBO': 2, 
			}, 
		}, 
		'OmPegType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Mid': 1, 
				'Bid': 2, 
				'Ask': 3, 
				'Last': 4, 
			}, 
		}, 
		'OmPlacementDecisionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'IgnorePrice': 1, 
				'LimitBreach': 2, 
				'VenueUnavailable': 3, 
				'SiRestriction': 4, 
				'InsufficientLiquidity': 5, 
				'PlacementFailure': 6, 
				'Placed': 7, 
			}, 
		}, 
		'OmPositionEffect': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ClosesPosition': 1, 
				'OpensPosition': 2, 
				'RollsPosition': 3, 
			}, 
		}, 
		'OmPriceOffsetType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Tick': 1, 
				'Absolute': 2, 
				'BasisPoints': 3, 
			}, 
		}, 
		'OmPriceResolutionStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PendingResolution': 1, 
				'Resolved': 2, 
				'Error': 3, 
			}, 
		}, 
		'OmPriceRoundingStyle': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Natural': 1, 
				'RoundUp': 2, 
				'RoundDown': 3, 
			}, 
		}, 
		'OmPriceType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Bid': 1, 
				'Ask': 2, 
				'High': 3, 
				'Low': 4, 
				'Mid': 5, 
				'Last': 6, 
			}, 
		}, 
		'OmPrimaryPartyType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Customer': 1, 
				'Firm': 2, 
			}, 
		}, 
		'OmPrimaryStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'New': 1, 
				'Working': 2, 
				'Complete': 3, 
			}, 
		}, 
		'OmPrincipalType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'Proprietary': 1, 
				'CustomerFacilitation': 2, 
				'RisklessPrincipal': 3, 
				'MarketMaking': 4, 
				'SwapHedge': 5, 
			}, 
		}, 
		'OmProductIdType': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'ProductMaster': 1, 
				'Ticker': 2, 
				'Cusip': 3, 
				'Sedol': 4, 
				'Quik': 5, 
				'Isin': 6, 
				'Ric': 7, 
				'Autex': 8, 
				'CommonCode': 9, 
				'GoldmanSachsNumber': 10, 
				'JapaneseNumber': 11, 
				'ValorenNumber': 12, 
				'KassenverinNumber': 13, 
				'CurrencyCode': 14, 
				'Sicovam': 15, 
				'AbiiItalianNumber': 16, 
				'WertPapierKursNumber': 17, 
				'Gl': 18, 
				'Aorta': 19, 
				'Rts': 20, 
				'TimberHill': 21, 
				'BloombergId': 22, 
				'SpComstock': 23, 
				'TiffeNumber': 24, 
				'PrimeId': 25, 
				'MaceGpid': 26, 
				'ConvertibleBondId': 27, 
				'Gsuid': 28, 
				'Gmi': 29, 
				'FuturesProductServer': 30, 
				'SecDbEti': 31, 
				'Rjo': 32, 
				'StateRegistrationNumber': 33, 
				'DepositoryClearingCompanyCode': 34, 
				'BloombergIdRoot': 35, 
				'Gss': 36, 
				'LocalMarketSymbol': 37, 
				'Ops': 38, 
				'Lmax': 39, 
			}, 
		}, 
		'OmProductInstrumentType': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Equity': 1, 
				'Option': 2, 
				'Future': 3, 
				'ConvertibleBond': 4, 
				'Strategy': 5, 
			}, 
		}, 
		'OmProfitSplitOption': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Source': 1, 
				'Destination': 2, 
				'EvenSplit': 3, 
			}, 
		}, 
		'OmProtectionType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Block': 1, 
				'WorkedPrincipalAgreement': 2, 
			}, 
		}, 
		'OmPtOrderType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'FixOrder': 1, 
				'SalesParent': 2, 
				'TradingAssignment': 3, 
				'TradingParent': 4, 
				'TradingChildOrder': 5, 
				'Allocation': 6, 
			}, 
		}, 
		'OmPutCall': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Put': 1, 
				'Call': 2, 
			}, 
		}, 
		'OmQuoteCancelReason': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'QuoteExecutionSeen': 1, 
				'QuotingStoppedBySystem': 2, 
				'QuotingStoppedByTrader': 3, 
			}, 
		}, 
		'OmQuoteCondition': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'QC_UNKNOWN': 1, 
				'QC_TRADING': 2, 
				'QC_SUSPENDED': 3, 
				'QC_HALTED': 4, 
				'QC_AUCTION': 5, 
				'QC_CLOSED': 6, 
				'QC_PREOPEN': 7, 
				'QC_UNCROSSING': 8, 
				'QC_OPENING_AUCTION': 9, 
				'QC_CLOSING_AUCTION': 10, 
				'QC_OPENING_UNCROSSING': 11, 
				'QC_CLOSING_UNCROSSING': 12, 
				'QC_CLOSING_DELETE': 13, 
				'QC_CLOSEPRICE_TRADING': 14, 
				'QC_AFTER_HOURS_TRADING': 15, 
				'QC_POST_TRADING': 16, 
				'QC_SLOW_BID': 17, 
				'QC_SLOW_ASK': 18, 
				'QC_SLOW_BIDASK': 19, 
				'QC_SELF_HELP': 20, 
				'QC_INDICATION_PHASE': 21, 
			}, 
		}, 
		'OmRegNmsExemptionType': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'RegNmsBenchmarkExemption': 1, 
				'NonRegular': 2, 
				'InterMarketSweepExemption': 3, 
				'CrossedMarket': 4, 
				'UnderwaterStop': 5, 
				'ContingentCB': 6, 
				'SubPenny': 7, 
				'RegNmsBenchmarkADR': 8, 
				'RegNmsBenchmarkETF': 9, 
				'NonConvertiblePreferredExemption': 10, 
				'ManuallyNegotiated': 11, 
				'Error': 12, 
				'OutsideTradingHours': 13, 
			}, 
		}, 
		'OmRegion': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'America': 1, 
				'Europe': 2, 
				'Asia': 3, 
			}, 
		}, 
		'OmRegulatoryReportDomain': {
			'version': 20, 
			'values': {
				'INVALID': 0, 
				'USPT': 1, 
				'GSX3': 2, 
				'USQT': 3, 
				'USSharesTrading': 4, 
				'USGSAT': 5, 
				'USGSATSOR': 6, 
				'USInstitutionalSales': 7, 
				'USSigmaSOR': 8, 
				'USSigmaX': 9, 
				'USPTTrading': 10, 
				'USPTSales': 11, 
				'USListedOptions': 12, 
				'PWM': 13, 
				'USQTETF': 14, 
				'USGSET': 15, 
				'CANSigmaX': 16, 
				'USAGEX': 17, 
				'USSPGSales': 18, 
				'USOptionsAGEX': 19, 
				'USInstitutionalOptionSales': 20, 
				'GSSSecuritiesLending': 21, 
				'USPWMWeb': 22, 
				'CASharesTrading': 23, 
				'USCreditETF': 24, 
				'EMEAListedOptions': 25, 
				'USFICCSSG': 26, 
				'USFICCListedPreferred': 27, 
				'USFICCHYDistressed': 28, 
				'USEMM': 29, 
			}, 
		}, 
		'OmRejectReasonType': {
			'version': 16, 
			'values': {
				'INVALID': 0, 
				'UnknownProduct': 2, 
				'ExchangeClosed': 3, 
				'ExceedsLimit': 4, 
				'TooLateToEnter': 5, 
				'UnknownOrder': 6, 
				'DuplicateOrder': 7, 
				'DuplicateOfAVerbalOrder': 8, 
				'StaleOrder': 9, 
				'NotRejected': 15, 
				'InvalidCommandMessage': 17, 
				'CommitFailed': 18, 
				'ExchangeUnavailable': 19, 
				'UnknownExecution': 20, 
				'UnknownIoi': 21, 
				'UnknownBasket': 22, 
				'DuplicateBasket': 23, 
				'BrokerOption': 24, 
				'InternalError': 25, 
				'PendingCancelOrPendingCorrection': 26, 
				'TooLateToCancel': 27, 
				'UnknownAlgorithm': 28, 
				'InvalidAlgorithmParameter': 29, 
				'InvalidAlgorithmParameterCorrection': 30, 
				'InvalidAlgorithmNameCorrection': 31, 
				'InvalidAlgorithmStartEndTime': 32, 
				'InvalidOrderType': 33, 
				'CreditLimitExceeded': 34, 
				'FatFingerLimitExceeded': 35, 
				'ComplianceRestricted': 36, 
				'InvalidTimeInForce': 37, 
				'PriceOutOfDailyRange': 38, 
				'InvalidLotSize': 39, 
				'InvalidTickSize': 40, 
				'QuantityAmendUpNotAllowed': 41, 
				'QuantityAmendDownNotAllowed': 42, 
				'InvalidSide': 43, 
				'ExchangeReject': 44, 
				'DuplicateExternalReference': 45, 
				'InvalidExternalReference': 46, 
				'ImmediateOrCancelTermination': 47, 
				'MaximumQuantityExceeded': 48, 
				'MaximumPercentageOfAdvExceeded': 49, 
				'MaximumNotionalValueExceeded': 50, 
				'LimitPriceTooAgressive': 51, # VALUE IS OBSOLETE
				'LimitPriceTooPassive': 52, 
				'LimitPriceTooAggressive': 53, 
				'DuplicateExecution': 54, 
				'CrossWatchBreach': 55, 
				'UnknownIndication': 56, 
				'RiskControlsEvaluationError': 57, 
				'AggregateControlFailure': 58, 
				'InvalidDestination': 59, 
				'ClientSoftLimitExceeded': 60, 
				'ClientHardLimitExceeded': 61, 
				'UnknownLiquidity': 62, 
				'ContactControlRoom': 63, 
				'AggregateOrderPriceImpactLimitExceeded': 64, 
			}, 
		}, 
		'OmRejectingSystem': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'Engine': 1, 
				'Rules': 2, 
				'Viking': 3, 
				'Exchange': 4, 
				'SmartRouter': 5, 
				'AlgorithmicEngine': 6, 
				'OmReinstater': 7, 
				'MatchingEngine': 8, 
			}, 
		}, 
		'OmRelatedEntityType': {
			'version': 12, 
			'values': {
				'INVALID': 0, 
				'ChildOrder': 1, 
				'RootParent': 2, 
				'OriginalOrder': 3, 
				'Execution': 4, 
				'Order': 5, 
				'Program': 6, 
				'Wave': 7, 
				'ParentExecution': 8, 
				'ChildExecution': 9, 
				'AggregateParent': 10, 
				'AggregateChild': 11, 
				'Composite': 12, 
				'Leg': 13, 
				'GeneratingExecution': 14, 
				'Group': 15, 
				'Quote': 16, 
				'BookedTrade': 17, 
				'Block': 18, 
				'ParentBasket': 19, 
				'ChildBasket': 20, 
				'Basket': 21, 
				'ComponentBlock': 22, 
				'CombinedBlock': 23, 
				'ClientPositionKey': 24, 
				'HedgedOrder': 25, 
				'ParentOrder': 26, 
				'ComplianceEvent': 27, 
				'OriginalExecution': 28, 
				'CrossExecution': 29, 
				'FacilitatedOrder': 30, 
				'FacilitatingOrder': 31, 
				'SuspendedExecution': 32, 
				'ShadowOrder': 33, 
				'ShadowedOrder': 34, 
				'CrossDriverOrder': 35, 
				'CrossIntentOrder': 36, 
				'CrossIntentExecution': 37, 
				'InterMarketSweepOrder': 38, 
				'InterMarketSweepExecution': 39, 
				'FxTrade': 40, 
				'OnExchangeCrossIntent': 41, 
				'OnExchangeCrossIntentDriver': 42, 
				'OnExchangeCrossIntentDriverExecution': 43, 
				'AggregatedFirmOrder': 44, 
				'FacilitatingExecution': 45, 
				'LegExecution': 46, 
				'SpreadExecution': 47, 
				'ContingentOrder': 48, 
				'FacilitatedOrderAsParent': 49, 
				'FacilitatingOrderAsChild': 50, 
				'Liquidity': 51, 
			}, 
		}, 
		'OmReleaseApprovalReason': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Completed': 1, 
				'AmendRejected': 2, 
			}, 
		}, 
		'OmReportingVenue': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'RegulatedMarket': 1, 
				'GsPreferredVenue': 2, 
			}, 
		}, 
		'OmRepositoryActionType': {
			'version': 4, 
			'values': {
				'INVALID': 0, 
				'Insert': 1, 
				'Update': 2, 
				'Delete': 3, 
				'Log': 4, 
				'UpdateVersion': 5, 
				'InsertOrUpdate': 6, 
				'InsertOrUpdateAndIncrementVersion': 7, 
				'LogToReplayGuard': 8, 
			}, 
		}, 
		'OmResponseHandlerType': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'Manual': 1, 
				'Auto': 2, 
				'System': 3, 
			}, 
		}, 
		'OmResponseVerbosity': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'None': 1, 
				'ObjectIdsOnly': 2, 
				'Full': 3, 
			}, 
		}, 
		'OmRouteStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PendingSend': 1, 
				'Sent': 2, 
				'Rejected': 3, 
				'Working': 4, 
				'Completed': 5, 
			}, 
		}, 
		'OmRtlOverrideReason': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'ProgramTradingExemption': 1, 
				'ControlRoomApprover': 2, 
				'RtlPreviouslyValidated': 3, 
			}, 
		}, 
		'OmSEFPartyRole': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'SEFExecutingFirm': 1, 
				'SEFOrderOriginationFirm': 2, 
				'SEFSponsoringFirm': 3, 
				'SEFBeneficiary': 4, 
				'SEFEnteringTrader': 5, 
				'SEFIntroducingBroker': 6, 
				'SEFLocationId': 7, 
				'SEFDeskId': 8, 
			}, 
		}, 
		'OmSEFTradeClearingInstruction': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'SEFClearAgainstCCP': 1, 
				'SEFExcludeCCPClearing': 2, 
			}, 
		}, 
		'OmSalesServiceGroup': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'LowTouch': 1, 
				'HighTouch': 2, 
			}, 
		}, 
		'OmSecShortSellCircuitBreaker': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'NotInEffect': 1, 
				'InEffect': 2, 
				'Continued': 3, 
			}, 
		}, 
		'OmSecShortSellExemptionReason': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ExemptionReasonUnknown': 1, 
				'IncomingShortSaleExempt': 2, 
				'AboveNationalBestBid': 3, 
				'DelayedDelivery': 4, 
				'OddLot': 5, 
				'DomesticArbitrage': 6, 
				'InternationalArbitrage': 7, 
				'UnderwriterOrSyndicateDistribution': 8, 
				'RisklessPrincipal': 9, 
				'Vwap': 10, 
			}, 
		}, 
		'OmServiceOffering': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'None': 1, 
				'Institutional': 2, 
				'GSST': 3, 
				'GSAT': 4, 
				'DMA': 5, 
				'ProgramTrading': 6, 
				'Futures': 7, 
				'TradeClearingServices': 8, 
			}, 
		}, 
		'OmServiceType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ServerDatastream': 1, 
				'ClientDatastream': 2, 
				'Request': 3, 
				'Response': 4, 
			}, 
		}, 
		'OmSetType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'System': 1, 
				'Trading': 2, 
				'Compliance': 3, 
			}, 
		}, 
		'OmSettlementBoardOverride': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'LocalBoardSettlement': 1, 
				'ForeignBoardSettlement': 2, 
			}, 
		}, 
		'OmSettlementDateCalcMethod': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Regular': 1, 
				'TradeDate': 2, 
				'NextDay': 3, 
				'TPlus2': 4, 
				'TPlus3': 5, 
				'TPlus4': 6, 
				'TPlus5': 7, 
				'Future': 8, 
				'WhenAndIfIssued': 9, 
				'SellersOption': 10, 
				'DelayDelivery': 11, 
				'WiPlus1': 12, 
				'WiPlus2': 13, 
				'WiPlus3': 14, 
				'WiPlus4': 15, 
				'WiPlus5': 16, 
			}, 
		}, 
		'OmSeverity': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Warning': 1, 
				'Error': 2, 
			}, 
		}, 
		'OmSiEligibility': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'NotSiEligible': 1, 
				'SiEligibleOkToPriceImprove': 2, 
				'SiEligibleDoNotPriceImprove': 3, 
			}, 
		}, 
		'OmSideKickResponseType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'CommandNotSupported': 1, 
				'CommandParseError': 2, 
				'Success': 3, 
				'Failure': 4, 
				'Unknown': 5, 
			}, 
		}, 
		'OmSigmaAlgorithm': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'LiquidityPlus': 1, 
				'Stealth': 2, 
				'SigmaXDirected': 3, 
				'Seeker': 4, 
				'TrailingStop': 5, 
			}, 
		}, 
		'OmSmartRoutingOption': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'OkToSmartRoute': 1, 
				'DoNotSmartRoute': 2, 
			}, 
		}, 
		'OmSourceEntityIndicator': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'InternalSameEntity': 1, 
				'InternalOtherEntity': 2, 
				'ExternalEntity': 3, 
			}, 
		}, 
		'OmSwapGuaranteedPriceType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'MarketOnClose': 1, 
				'VWAP': 2, 
			}, 
		}, 
		'OmSyntheticType': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'ContractForDifferences': 1, 
				'Swap': 2, 
				'SyntheticStock': 3, 
				'SyntheticOption': 4, 
			}, 
		}, 
		'OmTickDirection': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Downtick': 1, 
				'Uptick': 2, 
			}, 
		}, 
		'OmTimeInForce': {
			'version': 5, 
			'values': {
				'INVALID': 0, 
				'Day': 1, 
				'GoodTillDate': 2, 
				'GoodTillCancelled': 3, 
				'ImmediateOrCancel': 4, 
				'ValidUntilNextAuction': 5, 
				'Open': 6, 
				'Close': 7, 
				'Auction': 8, 
				'Extended': 9, 
				'SessionOrClose': 10, 
				'BlockCrossingSession': 11, 
				'GoodInTradingSession': 12, 
				'GoodTillTime': 13, 
				'Core': 14, 
				'GoodForMilliseconds': 15, 
				'GoodForScheduledAuction': 16, 
			}, 
		}, 
		'OmTradeReportModifiers': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'WeightedAverage': 1, 
				'StoppedStock': 2, 
				'PriorReferencePrice': 3, 
				'RegNmsBenchmarkExemption': 4, 
			}, 
		}, 
		'OmTradeReportState': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'ReportRejectedByGateway': 1, 
				'ReportHeld': 2, 
				'ReportIssuedOrResponsePending': 3, 
				'ReportAcceptedByTradeReportFacility': 4, 
				'ReportRejectedByTradeReportFacility': 5, 
				'ReportedByAlternateParty': 6, 
			}, 
		}, 
		'OmTradeReportingExecutionType': {
			'version': 2, 
			'values': {
				'INVALID': 0, 
				'AutomatedTradingExecution': 1, 
				'AutomatedBrokerExecution': 2, 
				'MarketMakerTrade': 3, 
			}, 
		}, 
		'OmTradeReportingType': {
			'version': 3, 
			'values': {
				'INVALID': 0, 
				'DoNotReportTrade': 1, 
				'ReportWithoutPublication': 2, 
				'ReportWithPublication': 3, 
				'DelayedPublication': 4, 
				'DelayedPublicationRelease': 5, 
			}, 
		}, 
		'OmTradeStatus': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Active': 1, 
				'Cancelled': 2, 
				'Replace': 3, 
			}, 
		}, 
		'OmTradeType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Trade': 1, 
				'GiveUp': 2, 
				'Posting': 3, 
			}, 
		}, 
		'OmTradeUpdateType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Account': 1, 
				'AccountType': 2, 
				'CtiCode': 3, 
				'OpenClose': 4, 
				'Origin': 5, 
				'FeeCode': 6, 
			}, 
		}, 
		'OmTradingPhase': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PreOpen': 1, 
				'Open': 2, 
				'ExtendedHoursTrading': 3, 
			}, 
		}, 
		'OmTradingServiceGroup': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Risk': 1, 
				'Agency': 2, 
			}, 
		}, 
		'OmValidationAction': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'Reject': 1, 
				'Alert': 2, 
				'Suspend': 3, 
			}, 
		}, 
		'OmValidationResult': {
			'version': 1, 
			'values': {
				'INVALID': 255, 
				'Passed': 0, 
				'Failed': 1, 
				'Error': 2, 
			}, 
		}, 
		'OmVikingMarketIdType': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'PrimeId': 1, 
				'EMMAId': 2, 
			}, 
		}, 
		'OmVikingOrderState': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'New': 1, 
				'NewDelivered': 2, 
				'Amend': 3, 
				'AmendDelivered': 4, 
				'Cancel': 5, 
				'CancelDelivered': 6, 
			}, 
		}, 
		'OmVikingSessionConnectionState': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'Connected': 1, 
				'NotConnected': 2, 
			}, 
		}, 
		'OmVikingSessionHeldState': {
			'version': 1, 
			'values': {
				'INVALID': 0, 
				'SessionOnHold': 1, 
				'SessionNotOnHold': 2, 
			}, 
		}, 
		'OmVikingTradeReportingVenue': {
			'version': 0, 
			'values': {
				'INVALID': 0, 
				'NasdaqTRF': 1, 
				'FinraORF': 2, 
			}, 
		}, 
	}
}

